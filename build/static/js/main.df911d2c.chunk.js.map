{"version":3,"sources":["components/navigation/navigation.js","actions/actions.js","components/characterCreation/characterCreation.js","components/credits/credits.js","components/character/character.js","components/arena/player.js","components/arena/enemy.js","components/arena/arena.js","components/store/store.js","App.js","reducers/reducers.js","states/classes.js","states/enemies.js","states/spells.js","states/equipment.js","states/initialState.js","index.js"],"names":["Navigation","_this","this","react_default","a","createElement","id","className","src","alt","props","showCharacterCreation","onClick","dispatch","type","showCharacter","disabled","characterClass","showArena","showStore","showCredits","Component","connect","state","character","class","CharacterCreation","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedId","characterName","nameError","handleNameChange","bind","assertThisInitialized","selectedClass","spells","getAvailableSpells","name","setClass","event","target","value","match","setState","spellList","_this2","availableSpells","forEach","availableSpell","spell","push","_this3","maxLength","placeholder","onChange","classes","map","currentClass","key","icon","description","resourceCost","resourceType","toLowerCase","rank","selectClass","length","gameSettings","Credits","href","Character","level","rankModifier","modifier","index","equipment","item","Player","data","baseHealthPerLevel","baseResourcesPerLevel","experienceToNextLevel","maxHealth","healthModifier","maxResources","resourceModifier","damageModifier","healingModifier","experience","currentHealth","currentResources","spellIndex","randomizer","Math","floor","random","damage","healing","Enemy","Arena","arenaLevel","playerTurn","latestAction","showLatestAction","player","enemy","status","loot","coins","addSpellEventListeners","enemies","requiredExperience","getRemainingHealth","distributeLoot","getLevel","winnings","giveLoot","_this4","startArena","_this5","console","log","nextLevel","_this6","checkForWinner","actionText","values","attack","concat","getSpells","getName","receiveAttack","receiveHeal","window","setTimeout","handleEnemyAttack","_this7","_this8","addEventListener","container","document","getElementById","children","classList","contains","add","remove","handlePlayerAttack","_this9","Fragment","getIcon","n","indicatorStyle","left","style","getMaxHealth","width","getRemainingHealthPercentage","startNextLevel","resetArena","getRemainingResources","getResourceType","getClass","getMaxResources","getRemainingResourcesPercentage","getExperience","getExperienceToNextLevel","Store","view","itemId","find","sort","b","requiredLevel","availableClasses","includes","characterHasItem","cost","purchaseItem","temp","objectSpread","App","navigation_navigation","showIntroduction","characterCreation_characterCreation","credits_credits","character_character","arena_arena","store_store","rootReducer","action","newState","toConsumableArray","newCharacter","_description","replace","baseDamage","baseHealing","_rank","initialState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0"],"mappings":"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","file":"static/js/main.df911d2c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nimport { showCharacterCreation, showCredits, showArena, showStore, showCharacter } from \"../../actions/actions\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"navigation\">\r\n        <img className=\"logo\" src={\"/images/arena.png\"} alt=\"\" />\r\n        <ul>\r\n          <li className={ this.props.showCharacterCreation ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCharacterCreation())}>New Character</button>\r\n          </li>\r\n          <li className={ this.props.showCharacter ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCharacter())} disabled={this.props.characterClass === null}>My Character</button>\r\n          </li>\r\n          <li className={ this.props.showArena ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showArena())} disabled={this.props.characterClass === null}>Into The Arena</button>\r\n          </li>\r\n          <li className={ this.props.showStore ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showStore())} disabled={this.props.characterClass === null}>Store</button>\r\n          </li>\r\n          <li className={ this.props.showCredits ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCredits())}>Credits</button>\r\n          </li>\r\n        </ul>\r\n        <div className=\"border\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showCharacterCreation: state.showCharacterCreation,\r\n    showCredits: state.showCredits,\r\n    showArena: state.showArena,\r\n    showStore: state.showStore,\r\n    showCharacter: state.showCharacter, \r\n    characterClass: state.character.class\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","let showCharacterCreation = () => {\r\n    return {\r\n        type: \"SHOW_CHARACTER_CREATION\"\r\n    }\r\n}\r\n\r\nlet showCredits = () => {\r\n    return {\r\n        type: \"SHOW_CREDITS\"\r\n    }\r\n}\r\n\r\nlet showArena = () => {\r\n    return {\r\n        type: \"SHOW_ARENA\"\r\n    }\r\n}\r\n\r\nlet showStore = () => {\r\n    return {\r\n        type: \"SHOW_STORE\"\r\n    }\r\n}\r\n\r\nlet showCharacter = () => {\r\n    return {\r\n        type: \"SHOW_CHARACTER\"\r\n    }\r\n}\r\n\r\nlet setClass = (selectedClass, spells, name) => {\r\n    return {\r\n        type: \"SET_CLASS\",\r\n        selectedClass,\r\n        spells,\r\n        name\r\n    }\r\n}\r\n\r\nlet giveLoot = (experience, coins) => {\r\n    return {\r\n        type: \"GIVE_LOOT\",\r\n        experience,\r\n        coins\r\n    }\r\n}\r\n\r\nlet upgradeSpell = (spellIndex, cost) => {\r\n    return {\r\n        type: \"UPGRADE_SPELL\",\r\n        spellIndex,\r\n        cost\r\n    }\r\n}\r\n\r\nlet purchaseItem = (item) => {\r\n    return {\r\n        type: \"PURCHASE_ITEM\",\r\n        item\r\n    }\r\n}\r\n\r\nexport {\r\n    showCharacterCreation,\r\n    showCredits,\r\n    showArena,\r\n    showStore,\r\n    showCharacter,\r\n    setClass,\r\n    giveLoot,\r\n    upgradeSpell,\r\n    purchaseItem\r\n};","import React, { Component } from \"react\";\r\nimport \"./characterCreation.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setClass } from \"../../actions/actions\";\r\n\r\nclass CharacterCreation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedId: 0,\r\n            characterName: \"\",\r\n            nameError: false\r\n        }\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    selectClass(selectedClass) {\r\n        let spells = this.getAvailableSpells(selectedClass.spells);\r\n        this.props.dispatch(setClass(selectedClass, spells, this.state.characterName));\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        let reg = /^[a-z]+$/i;\r\n        let name = event.target.value;\r\n        if(name.match(reg)) {\r\n            this.setState({ characterName: name, nameError: false });\r\n        }\r\n        else {\r\n            this.setState({ nameError: true });\r\n        }\r\n    }\r\n\r\n  getAvailableSpells(spellList) {\r\n    let availableSpells = [];\r\n\r\n    spellList.forEach(availableSpell => {\r\n      this.props.spells.forEach(spell => {\r\n        if (spell.id === availableSpell) {\r\n          availableSpells.push(spell);\r\n        }\r\n      });\r\n    });\r\n\r\n    return availableSpells;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"characterCreation\">\r\n        <h3>ChOOse A Name</h3>\r\n        <div className=\"characterName\">\r\n            <input maxLength=\"16\" type=\"text\" placeholder=\"Name\" onChange={ this.handleNameChange } className={this.state.nameError ? \"error\" : null} />\r\n            { this.state.nameError && <p className=\"nameError\">Your name must be between 2 and 16 characters and contain only letters.</p> }\r\n        </div>\r\n        <h3 className=\"classesHeader\">Select yOUr Class</h3>\r\n        <div className=\"classes\">\r\n            {this.props.classes.map(currentClass => (\r\n                <div key={currentClass.id} className={this.state.selectedId === currentClass.id ? \"classframe selected hoverable\" : \"classframe hoverable\"} onClick={() => this.setState({ selectedId: currentClass.id })}>\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + currentClass.icon} alt=\"\" />\r\n                </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"classList\">\r\n            {this.props.classes.map(currentClass => (\r\n            <div className={ this.state.selectedId === currentClass.id ? \"class selected\" : \"class\"} key={currentClass.id}>\r\n                <div className=\"header\">\r\n                <div className=\"classframe\">\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + currentClass.icon} alt=\"\" />\r\n                </div>\r\n                    <h3>{currentClass.name}</h3>\r\n                </div>\r\n                <p className=\"description\">{currentClass.description}</p>\r\n                <h4>Spells</h4>\r\n                <div className=\"spells\">\r\n                {this.getAvailableSpells(currentClass.spells).map(spell => (\r\n                    <div key={spell.id} className=\"spell\">\r\n                        <div className=\"spellframe\">\r\n                            <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                            <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                            <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                            <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"spellDescription\">\r\n                            <div>\r\n                                <div>\r\n                                    <p className=\"spellName\">{spell.name}</p>\r\n                                    { spell.resourceCost !== 0 && \r\n                                        <p className=\"resourceCost\">{spell.resourceCost} {currentClass.resourceType.toLowerCase()}</p>\r\n                                    }\r\n                                </div>\r\n                                <p>Rank {spell.rank}</p>\r\n                            </div>\r\n                            <p>\r\n                                {spell.description}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                <div className=\"selectBtnContainer\">\r\n                    <button className=\"selectBtn\" onClick={() => this.selectClass(currentClass)} disabled={this.state.characterName.length < 2}></button>\r\n                </div>\r\n            </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    classes: state.classes,\r\n    spells: state.spells,\r\n    gameSettings: state.gameSettings\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CharacterCreation);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./credits.css\";\r\n\r\nclass Credits extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"credits\">\r\n        <div>\r\n        <h2>Special thanks to</h2>\r\n        <p>Delapouite (<a href=\"https://delapouite.com\">https://delapouite.com</a>), Wjb (<a href=\"http://wjbstories.blogspot.com\">http://wjbstories.blogspot.com</a>) \r\n        and Lorc (<a href=\"http://lorcblog.blogspot.com\">http://lorcblog.blogspot.com</a>) from <a href=\"https://game-icons.net\">https://game-icons.net</a> for the icons</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Credits;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./character.css\";\r\n\r\nclass Character extends Component {\r\n  render() {\r\n    return (\r\n        <div id=\"character\">\r\n            <div className=\"class\">\r\n                <h3>{this.props.character.name}</h3>\r\n                <div className=\"classframe\">\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + this.props.character.class.icon} alt=\"\" />\r\n                </div>\r\n                <h3>Level {this.props.character.level}</h3>\r\n            </div>\r\n            <h4 className=\"className\">{this.props.character.class.name}</h4>\r\n            {/* <div className=\"resourcebar\">\r\n                <div className=\"playerInfo\">\r\n                    <h3>{this.props.character.name}</h3>\r\n                    <p>Level {this.props.character.level} <span>{this.props.character.class.name}</span></p>\r\n                </div>\r\n                <p className=\"experience\">{this.props.character.experience}/{this.props.gameSettings.requiredExperience[this.props.character.level-1]} experience</p>\r\n                <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                <div style={{width: ((this.props.character.experience/this.props.gameSettings.requiredExperience[this.props.character.level-1]) * 494) + \"px\"}} className=\"frame_filler_experience\"></div>\r\n            </div> */}\r\n            <h4 className=\"spellsHeader\">Spells</h4>\r\n            <div className=\"spells\">{this.props.character.spells.map(spell => (\r\n                    <div key={spell.id} className=\"spell\">\r\n                        <div className=\"spellframe\">\r\n                            <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                            <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                            <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                            <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"spellDescription\">\r\n                            <div>\r\n                                <div>\r\n                                    <p className=\"spellName\">{spell.name}</p>\r\n                                    { spell.resourceCost !== 0 && <p className=\"resourceCost\">{spell.resourceCost} {this.props.character.class.resourceType.toLowerCase()}</p>}\r\n                                </div>\r\n                                <p>Rank {spell.rank}</p>\r\n                            </div>\r\n                            <p>{spell.description}</p>\r\n                        </div>\r\n                        <div className=\"spellRanks\">\r\n                            {spell.rankModifier.map((modifier, index) => <div key={index} className={spell.rank > index ? \"learned\": \"notLearned\"}></div>)}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <h4 className=\"equipmentHeader\">Equipment</h4>\r\n            <div className=\"equipment\">\r\n                {this.props.character.equipment.length === 0 \r\n                    ? <p>You have not purchased any equipment.</p> \r\n                    : this.props.character.equipment.map(item => (\r\n                        <div key={item.id} className=\"item\">\r\n                            <div className=\"header\">\r\n                                <div className=\"spellframe\">\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + item.icon} alt=\"\" />\r\n                                </div>\r\n                                <h4>{item.name}</h4>\r\n                            </div>\r\n                            <p className=\"description\">{item.description}</p>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    gameSettings: state.gameSettings\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Character);\r\n","class Player {\r\n    constructor(data, baseHealthPerLevel, baseResourcesPerLevel, experienceToNextLevel) {\r\n        this.maxHealth = baseHealthPerLevel[data.level-1] * data.class.healthModifier;\r\n        this.maxResources = baseResourcesPerLevel[data.level-1] * data.class.resourceModifier;\r\n        this.damageModifier = data.class.damageModifier;\r\n        this.healingModifier = data.class.healingModifier;\r\n        this.icon = data.class.icon;\r\n        this.name = data.name;\r\n        this.spells = data.spells;\r\n        this.equipment = data.equipment;\r\n        this.resourceType = data.class.resourceType;\r\n        this.className = data.class.name;\r\n        this.experience = data.experience;\r\n        this.experienceToNextLevel = experienceToNextLevel;\r\n        this.level = data.level;\r\n\r\n        data.equipment.forEach(item => {\r\n            this.damageModifier *= item.damageModifier;\r\n            this.healingModifier *= item.healingModifier;\r\n            this.maxHealth *= item.healthModifier;\r\n            this.maxResources *= item.resourceModifier;\r\n        });\r\n\r\n        this.currentHealth = this.maxHealth;\r\n        this.currentResources = this.maxResources;\r\n    }\r\n\r\n    attack(spellIndex) {\r\n        let spell = this.spells[spellIndex];\r\n        let randomizer = (Math.floor(Math.random() * 21) + 90)/100;\r\n\r\n        if(this.currentResources >= spell.resourceCost) {\r\n            this.currentResources -= spell.resourceCost;\r\n            \r\n            let damage = Math.floor(spell.damage * this.damageModifier * randomizer);\r\n            let healing = Math.floor(spell.healing * this.healingModifier * randomizer);\r\n            return [damage, healing];\r\n        }\r\n        return [0, 0];\r\n    }\r\n\r\n    receiveAttack(damage) {\r\n        if(this.currentHealth - damage <= 0) {\r\n            this.currentHealth = 0;\r\n        } \r\n        else {\r\n            this.currentHealth -= damage;\r\n        }\r\n    }\r\n\r\n    receiveHeal(healing) {\r\n        if(this.currentHealth + healing >= this.maxHealth) {\r\n            this.currentHealth = this.maxHealth;\r\n        }\r\n        else {\r\n            this.currentHealth += healing;\r\n        }\r\n    }\r\n\r\n    get getMaxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get getRemainingHealth() {\r\n        return this.currentHealth;\r\n    }\r\n\r\n    get getRemainingHealthPercentage() {\r\n        return (this.currentHealth / this.maxHealth) * 100;\r\n    }\r\n\r\n    get getMaxResources() {\r\n        return this.maxResources;\r\n    }\r\n\r\n    get getRemainingResources() {\r\n        return this.currentResources;\r\n    }\r\n\r\n    get getRemainingResourcesPercentage() {\r\n        return (this.currentResources / this.maxResources) * 100;\r\n    }\r\n\r\n    get getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    get getIcon() {\r\n        return this.icon;\r\n    }\r\n\r\n    get getResourceType() {\r\n        return this.resourceType;\r\n    }\r\n\r\n    get getClass() {\r\n        return this.className;\r\n    }\r\n\r\n    get getExperience() {\r\n        return this.experience;\r\n    }\r\n\r\n    get getExperienceToNextLevel() {\r\n        return this.experienceToNextLevel;\r\n    }\r\n\r\n    get getSpells() {\r\n        return this.spells;\r\n    }\r\n}\r\n\r\nexport default Player;","class Enemy {\r\n    constructor(data, baseHealthPerLevel) {\r\n        this.maxHealth = baseHealthPerLevel[data.level-1] * data.healthModifier;\r\n        this.currentHealth = this.maxHealth;\r\n        this.damageModifier = data.damageModifier;\r\n        this.icon = data.icon;\r\n        this.name = data.name;\r\n        this.level = data.level;\r\n    }\r\n\r\n    attack() {\r\n        let damage = Math.floor(50 * this.damageModifier * (Math.floor(Math.random() * 21) + 90) / 100);\r\n        return [damage, 0];\r\n    }\r\n\r\n    receiveAttack(damage) {\r\n        if(this.currentHealth - damage <= 0) {\r\n            this.currentHealth = 0;\r\n        } \r\n        else {\r\n            this.currentHealth -= damage;\r\n        }\r\n    }\r\n\r\n    get getMaxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get getRemainingHealth() {\r\n        return this.currentHealth;\r\n    }\r\n\r\n    get getRemainingHealthPercentage() {\r\n        return (this.currentHealth / this.maxHealth) * 100;\r\n    }\r\n\r\n    get getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    get getIcon() {\r\n        return this.icon;\r\n    }\r\n}\r\n\r\nexport default Enemy;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Player from \"./player\";\r\nimport Enemy from \"./enemy\";\r\n\r\nimport \"./arena.css\";\r\nimport { giveLoot } from \"../../actions/actions\";\r\n\r\nclass Arena extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            arenaLevel: 1,\r\n            playerTurn: true,\r\n            latestAction: \"Your Venomous Vial hit Enemy for 40 damage.\",\r\n            showLatestAction: false,\r\n            player: null,\r\n            enemy: null,\r\n            status: \"WAITING\", // WINNER, LOSER, INPROGRESS, WAITING\r\n            loot: {\r\n                experience: 0,\r\n                coins: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addSpellEventListeners();\r\n    }\r\n\r\n    startArena() {\r\n        let enemy = new Enemy(this.props.enemies[this.state.arenaLevel-1], this.props.gameSettings.baseHealthPerLevel);\r\n        let player = new Player(this.props.character, this.props.gameSettings.baseHealthPerLevel, \r\n            this.props.gameSettings.baseResourcesPerLevel, this.props.gameSettings.requiredExperience[this.props.character.level-1]);\r\n        this.setState({ enemy, player}, () => {\r\n            this.setState({ status: \"INPROGRESS\" });\r\n        });\r\n    }\r\n\r\n    checkForWinner() {\r\n        if(this.state.enemy.getRemainingHealth <= 0) {\r\n            this.distributeLoot();\r\n            return true;\r\n        }\r\n        else if(this.state.player.getRemainingHealth <= 0) {\r\n            this.setState({ status: \"LOSER\" });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    distributeLoot() {\r\n        let experience = Math.floor(this.state.enemy.getLevel * 50 * ((Math.floor(Math.random() * 50) + 75) / 100));\r\n        let coins = this.state.enemy.getLevel * 10;\r\n        this.setState({ winnings: { experience, coins }, status: \"WINNER\" }, () => {\r\n            this.props.dispatch(giveLoot(experience, coins));\r\n        });\r\n    }\r\n\r\n    resetArena() {\r\n        this.setState({ playerTurn: true, showLatestAction: false, arenaLevel: 1 }, () => {\r\n            this.startArena();\r\n        });\r\n    }\r\n\r\n    startNextLevel() {\r\n        if(this.state.arenaLevel === this.props.enemies.length) {\r\n            console.log(\"Last level defeated\");\r\n        }\r\n        let nextLevel = this.state.arenaLevel + 1;\r\n        this.setState({ playerTurn: true, showLatestAction: false, arenaLevel: nextLevel }, () => {\r\n            this.startArena();\r\n        });\r\n    }\r\n\r\n    handlePlayerAttack(index) {\r\n        if(this.checkForWinner()) {\r\n            return;\r\n        }\r\n        else if(this.state.status === \"INPROGRESS\") {\r\n            if(!this.state.playerTurn) {\r\n                return\r\n            }\r\n\r\n            let values = this.state.player.attack(index);\r\n            let damage = values[0];\r\n            let healing = values[1];\r\n            let actionText;\r\n\r\n            if(damage > 0 && healing > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} hit ${this.state.enemy.getName} ${damage} damage and restored \r\n                ${healing} health points to you.`;\r\n                \r\n            }\r\n            else if(damage > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} hit ${this.state.enemy.getName} ${damage} damage.`;\r\n            }\r\n            else if(healing > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} healed you ${healing} health points.`;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n\r\n            this.setState({ playerTurn: false });\r\n            this.state.enemy.receiveAttack(damage);\r\n            this.state.player.receiveHeal(healing);\r\n\r\n            this.setState({ showLatestAction: true, latestAction: actionText });\r\n            window.setTimeout(() => {\r\n                this.setState({ showLatestAction: false });\r\n                this.handleEnemyAttack();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    handleEnemyAttack() {\r\n        if(this.checkForWinner()) {\r\n            return;\r\n        }\r\n        else if(this.state.status === \"INPROGRESS\") {\r\n            let damage = this.state.enemy.attack()[0];\r\n            let actionText = `${this.state.enemy.getName} hit you for ${damage} damage.`;\r\n\r\n            this.state.player.receiveAttack(damage);\r\n\r\n            this.setState({ showLatestAction: true, latestAction: actionText });\r\n            window.setTimeout(() => {\r\n                this.setState({ showLatestAction: false, playerTurn: true });\r\n                this.checkForWinner();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    addSpellEventListeners() {\r\n        window.addEventListener(\"keydown\", event => {\r\n            let container = document.getElementById(\"spells\"); \r\n\r\n            if(event.key === \"1\") {\r\n                let spell = container.children[0].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"2\") {\r\n                let spell = container.children[1].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"3\") {\r\n                let spell = container.children[2].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"4\") {\r\n                let spell = container.children[3].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"keyup\", event => {\r\n            let container = document.getElementById(\"spells\");\r\n\r\n            if(event.key === \"1\") {\r\n                let spell = container.children[0].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(0);\r\n            } else if(event.key === \"2\") {\r\n                let spell = container.children[1].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(1);\r\n            } else if(event.key === \"3\") {\r\n                let spell = container.children[2].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(2);\r\n            } else if(event.key === \"4\") {\r\n                let spell = container.children[3].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(3);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"arena\">\r\n                { this.state.status === \"WAITING\" && \r\n                    <div className=\"introduction\">\r\n                        <h2>The Arena</h2>\r\n                        <p>Welcome, {this.props.character.name}. \r\n                        <br/>\r\n                        The arena consists of 6 stages. For each stage you complete you will be facing a tougher enemy. \r\n                        Should an enemy prove too difficult of a challenge, spell and armor upgrades can be bought in the shop.\r\n                        Beat the 6th and final enemy to prove your worth.\r\n                        <br/>\r\n                        <br/>\r\n                        Whenever you're ready, hit the button below to fight your first enemy.\r\n                        </p>\r\n                        <div>\r\n                            <button className=\"startBtn\" onClick={() => this.startArena()}></button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                { this.state.status !== \"WAITING\" && <React.Fragment>\r\n                    <div className=\"enemyFrame\">\r\n                        <div className=\"enemy\">\r\n                            <div className=\"enemyProfile\">\r\n                                <div className=\"enemyUnitFrame\">\r\n                                    <img className=\"frame\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + this.state.enemy.getIcon} alt=\"\" />\r\n                                </div>\r\n                                <h3 className=\"enemyName\">{this.state.enemy.getName}</h3>\r\n                            </div>\r\n                            <div className=\"levelIndicatorFrame\">\r\n                                <img className=\"container\" src={\"/images/level_indicator_container.png\"} alt=\"\" />\r\n                                {[0, 1, 2, 3, 4,5 ].map(n => {\r\n                                    let left = (n * 32) + 3 + \"px\";\r\n                                    let indicatorStyle = {\r\n                                        left \r\n                                    }\r\n                                    return (<img key={n} style={indicatorStyle} className={this.state.arenaLevel > n ? \"indicator\" : \"indicator hidden\"} src={\"/images/level_indicator.png\"} alt=\"\" />)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <p className=\"level\">Level {this.state.enemy.getLevel}</p>\r\n                            <p className=\"health\">{Math.floor(this.state.enemy.getRemainingHealth)}/{Math.floor(this.state.enemy.getMaxHealth)} HP</p>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.enemy.getRemainingHealthPercentage * 4.94) + \"px\"}} className=\"frame_filler_health\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"statusFrame\">\r\n                        {!this.state.showLatestAction && this.state.status === \"INPROGRESS\" && <h3>It Is Your Turn!</h3>}\r\n                        {this.state.showLatestAction && this.state.status === \"INPROGRESS\" && <h4>{this.state.latestAction}</h4>}\r\n                        {this.state.status === \"WINNER\" && \r\n                            <div>\r\n                                <h2>Victory</h2>\r\n                                <div className=\"loot\">\r\n                                    <h5>Rewards</h5>\r\n                                    <p className=\"expGain\">+{this.state.winnings.experience} experience</p>\r\n                                    <p className=\"coinGain\">+{this.state.winnings.coins} coins</p>\r\n                                </div>\r\n                                <button className=\"continueBtn\" onClick={() => this.startNextLevel()}></button>\r\n                            </div>\r\n                        }\r\n                        {this.state.status === \"LOSER\" && \r\n                            <div>\r\n                                <h2>Defeat</h2>\r\n                                <button className=\"restartBtn\" onClick={() => this.resetArena()}></button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"playerFrame\">\r\n                        <div id=\"spells\">\r\n                            { this.state.player.getSpells.map( (spell, index) =>\r\n                            <div key={spell.id} className=\"spell\" onClick={() => this.handlePlayerAttack(index)}>\r\n                                <div className={this.state.playerTurn && (this.state.player.getRemainingResources >= spell.resourceCost) ? \"spellframe clickable\" : \"spellframe disabled\"}>\r\n                                    <p className=\"bind\">{index+1}</p>\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"spellDescription\">\r\n                                    <div>\r\n                                        <div>\r\n                                            <p className=\"spellName\">{spell.name}</p>\r\n                                            { spell.resourceCost !== 0 && <p className={spell.resourceCost > this.state.player.getRemainingResources ? \"resourceCost lowMana\" : \"resourceCost\"}>{spell.resourceCost} {this.state.player.getResourceType}</p>}\r\n                                        </div>\r\n                                        <p>Rank {spell.rank}</p>\r\n                                    </div>\r\n                                    <p>{spell.description}</p>\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <div className=\"playerInfo\">\r\n                                <h4>{this.state.player.getName}</h4>\r\n                                <div>\r\n                                    <p>Level {this.state.player.getLevel} <span>{this.state.player.getClass}</span></p>\r\n                                    <p>{Math.floor(this.state.player.getRemainingHealth)}/{Math.floor(this.state.player.getMaxHealth)} HP</p>\r\n                                    <p>{Math.floor(this.state.player.getRemainingResources)}/{Math.floor(this.state.player.getMaxResources)} {this.state.player.getResourceType}</p>\r\n                                </div>\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.player.getRemainingHealthPercentage * 4.94) + \"px\"}} className=\"frame_filler_health\"></div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.player.getRemainingResourcesPercentage * 4.94) + \"px\"}} className={\"frame_filler_\" + this.state.player.getResourceType.toLowerCase()}></div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <div className=\"playerExp\">\r\n                                <p>{this.state.player.getExperience}/{this.state.player.getExperienceToNextLevel} Experience</p>\r\n                                <p>{this.state.player.getExperienceToNextLevel - this.state.player.getExperience} exp to level {this.state.player.getLevel + 1}</p>\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: ((this.state.player.getExperience/this.props.gameSettings.requiredExperience[this.state.player.getLevel-1]) * 494) + \"px\"}} className=\"frame_filler_experience\"></div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    gameSettings: state.gameSettings,\r\n    enemies: state.enemies,\r\n    state: state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Arena);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./store.css\";\r\n\r\nimport { upgradeSpell, purchaseItem } from \"../../actions/actions\";\r\n\r\nclass Store extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            view: \"equipment\"\r\n        }\r\n    }\r\n\r\n    characterHasItem(itemId) {\r\n        return this.props.character.equipment.find(item => item.id === itemId);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"store\">\r\n        <div className=\"sidebar\">\r\n            <h3>Shop {this.state.view === \"spells\" ? \"Spells\" : \"Equipment\"}</h3>\r\n            <div>\r\n                <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/>\r\n                <p>{this.props.character.coins}</p>\r\n            </div>\r\n            <button className={this.state.view === \"equipment\" ? \"active equipmentBtn\" : \"equipmentBtn\"} onClick={() => { this.setState({ view: \"equipment\" })}}></button>\r\n            <button className={this.state.view === \"spells\" ? \"active spellsBtn\" : \"spellsBtn\"} onClick={() => { this.setState({ view: \"spells\"})}}></button>\r\n        </div>\r\n        { this.state.view === \"equipment\" && <div className=\"items\">\r\n            {this.props.equipment.sort((a, b) => (a.requiredLevel > b.requiredLevel) ? 1 : ((b.requiredLevel > a.requiredLevel) ? -1 : 0)).map(item => {\r\n                if(item.availableClasses.includes(this.props.character.class.id)) {\r\n                    return (<div key={item.id} className={this.characterHasItem(item.id) ? \"itemContainer owned\" : \"itemContainer\"}>\r\n                        <div>\r\n                            <div className=\"header\">\r\n                                <div className=\"spellframe\">\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + item.icon} alt=\"\" />\r\n                                </div>\r\n                                <h4>{item.name}</h4>\r\n                            </div>\r\n                            <p className=\"description\">{this.characterHasItem(item.id) ? \"You already own this item.\" : item.description}</p>\r\n                        </div>\r\n                        <div className={this.props.character.level < item.requiredLevel || this.props.character.coins < item.cost ? \"buyItem disabled\" : \"buyItem\"}>\r\n                            <div className=\"itemInfo\">\r\n                                <p className={this.props.character.level < item.requiredLevel ? \"lowLevel\" : null}>Level {item.requiredLevel}+</p>\r\n                                <h5 className=\"coinContainer\">Cost: <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/> <span className={this.props.character.coins < item.cost ? \"lowCoins\" : null}>{item.cost}</span></h5>\r\n                            </div>\r\n                            <button className=\"buyBtn\" onClick={() => {\r\n                                if(!this.characterHasItem(item)) {\r\n                                    this.props.dispatch(purchaseItem(item));\r\n                            }}}></button>\r\n                        </div>\r\n                    </div>)\r\n                } else {\r\n                    return null;\r\n                }\r\n            })}\r\n        </div>}\r\n        { this.state.view === \"spells\" && <div className=\"spells\">\r\n            {this.props.character.spells.map((spell, index) => {\r\n                let temp;\r\n                if(spell.rank < 3) {\r\n                    spell.rank = 1;\r\n                    temp = {...spell};\r\n                    spell.rank = -1;\r\n                }\r\n                else {\r\n                    temp = {...spell};\r\n                }\r\n                return (<div key={temp.id} className={spell.rank === 3 ? \"spellContainer owned\" : \"spellContainer\"}>\r\n                            <div>\r\n                                <div className=\"header\">\r\n                                    <div className=\"spellframe\">\r\n                                        <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                        <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                        <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                        <img className=\"frame_icon\" src={\"/images/\" + temp.icon} alt=\"\" />\r\n                                    </div>\r\n                                    <h4>{temp.name}</h4>\r\n                                </div>\r\n                                <p className=\"description\">{spell.rank === 3 ? \"You have already upgraded this spell to the highest rank.\": temp.description}</p>\r\n                            </div>\r\n                            <div className={this.props.character.coins < (100*temp.rank) ? \"buyItem disabled\" : \"buyItem\"}>\r\n                                <div className=\"itemInfo\">\r\n                                    <p>Rank {temp.rank} / 3</p>\r\n                                    <h5 className=\"coinContainer\">Cost: <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/> <span className={this.props.character.coins < (100*temp.rank) ? \"lowCoins\" : null}>{100*(temp.rank)}</span></h5>\r\n                                </div>\r\n                                <button className=\"upgradeBtn\" onClick={() => {\r\n                                    if(spell.rank < 3) {\r\n                                        this.props.dispatch(upgradeSpell(index, (100*temp.rank)));\r\n                                    }\r\n                                }}></button>\r\n                            </div>\r\n                        </div>)\r\n            })}\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    equipment: state.equipment,\r\n    spells: state.spells\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Store);\r\n","import React, { Component } from \"react\";\n\nimport Navigation from \"./components/navigation/navigation\";\nimport CharacterCreation from \"./components/characterCreation/characterCreation\";\nimport Credits from \"./components/credits/credits\";\nimport Character from \"./components/character/character\";\nimport Arena from \"./components/arena/arena\";\nimport Store from \"./components/store/store\";\nimport \"./App.css\";\n\nimport { connect } from \"react-redux\";\n\nimport { showCharacterCreation } from \"./actions/actions\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"app\">\n        <Navigation />\n        { this.props.showIntroduction && (\n          <div className=\"introduction\">\n            <h2>Welcome, adventurer!</h2>\n            <p>\n              This is the arena. A web-based duel system where you can create a\n              character and use it to fight enemies in one-versus-one combat. Shall\n              you win, you will be rewarded with experience points as well as\n              coins, which you can use to purchase upgraded spells and\n              abilities.\n              <br />\n              <br />\n              Ready to create your character? \n            </p>\n            <div>\n                <button className=\"createBtn\" onClick={() => this.props.dispatch(showCharacterCreation())}></button>\n            </div>\n          </div>\n        )}\n        { this.props.showCharacterCreation && <CharacterCreation /> }\n        { this.props.showCredits && <Credits /> }\n        { this.props.showCharacter && <Character /> }\n        { this.props.showArena && <Arena /> }\n        { this.props.showStore && <Store /> }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showCharacterCreation: state.showCharacterCreation,\n    showCredits: state.showCredits,\n    showArena: state.showArena,\n    showStore: state.showStore,\n    showCharacter: state.showCharacter,\n    showIntroduction: state.showIntroduction\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","let rootReducer = (state, action) => {\r\n    let newState = {...state };\r\n\r\n    let spells = [...newState.character.spells];\r\n    let equipment = [...newState.character.equipment];\r\n    let newCharacter = {...newState.character, spells, equipment};\r\n    switch(action.type) {\r\n        case \"SHOW_CHARACTER_CREATION\":\r\n            newState.showCharacterCreation = true;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n\r\n            return newState;\r\n        case \"SHOW_CREDITS\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = true;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_ARENA\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = true;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_STORE\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = true;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_CHARACTER\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = true;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SET_CLASS\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = true;\r\n            newState.showIntroduction = false;\r\n\r\n            newCharacter = {\r\n                class: action.selectedClass,\r\n                spells: action.spells,\r\n                equipment: [],\r\n                name: action.name,\r\n                level: 1,\r\n                coins: 0,\r\n                experience: 0\r\n            }\r\n\r\n            newState.character = newCharacter;\r\n           return newState;\r\n        case \"GIVE_LOOT\":\r\n            newCharacter.experience += action.experience;\r\n            newCharacter.coins += action.coins;\r\n\r\n            if(newCharacter.experience > newState.gameSettings.requiredExperience[newState.character.level-1]) {\r\n                newCharacter.experience -= newState.gameSettings.requiredExperience[newState.character.level-1];\r\n                newCharacter.level += 1;\r\n            }\r\n\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"UPGRADE_SPELL\":\r\n            if(newCharacter.coins >= action.cost) {\r\n                newCharacter.spells[action.spellIndex].rank = 1;\r\n                newCharacter.coins -= action.cost;\r\n            }\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"PURCHASE_ITEM\":\r\n            if(newCharacter.coins >= action.item.cost) {\r\n                newCharacter.equipment.push(action.item);\r\n                newCharacter.coins -= action.item.cost;\r\n            }\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","const classes = {\r\n    classes: [\r\n        {\r\n            id: 0,\r\n            name: \"Warrior\",\r\n            description: \"A warrior is a brutal and tough class, warriors have a high health pool and moderate damage.\",\r\n            icon: \"icons/classes/warrior.png\",\r\n            resourceType: \"Energy\",\r\n            healthModifier: 1.9,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.5,\r\n            healingModifier: 1,\r\n            spells: [0, 4, 5, 10]\r\n        }, {\r\n            id: 1,\r\n            name: \"Archer\",\r\n            description: \"An archer is an agile and fast-paced class, archers have a moderate health pool and damage.\",\r\n            icon: \"icons/classes/archer.png\",\r\n            resourceType: \"Mana\",\r\n            healthModifier: 1.5,\r\n            resourceModifier: 1.3,\r\n            damageModifier: 1.5,\r\n            healingModifier: 1.5,\r\n            spells: [0, 3, 2, 1]\r\n        }, {\r\n            id: 2,\r\n            name: \"Rogue\",\r\n            description: \"A rogue is a silent but deadly class, rogues have a low health pool and high damage.\",\r\n            icon: \"icons/classes/rogue.png\",\r\n            resourceType: \"Energy\",\r\n            healthModifier: 1.3,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.8,\r\n            healingModifier: 1,\r\n            spells: [0, 6, 7, 10]\r\n        }, {\r\n            id: 3,\r\n            name: \"Wizard\",\r\n            description: \"A wizard is an extremely dangerous class, wizards have a very low health pool and extremely high damage.\",\r\n            icon: \"icons/classes/wizard.png\",\r\n            resourceType: \"Mana\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1.8,\r\n            damageModifier: 2,\r\n            healingModifier: 2,\r\n            spells: [0, 8, 9, 1]\r\n        }, \r\n    ]\r\n}\r\n\r\nexport default classes;","const enemies = {\r\n    enemies: [\r\n        {\r\n            id: 0,\r\n            name: \"Evil Imp\",\r\n            icon: \"icons/enemies/evil_imp.png\",\r\n            level: 1,\r\n            requiredLevel: 1,\r\n            healthModifier: 0.8,\r\n            damageModifier: 1\r\n        }, {\r\n            id: 1,\r\n            name: \"Twin Hydras\",\r\n            icon: \"icons/enemies/twin_hydras.png\",\r\n            level: 2,\r\n            requiredLevel: 0,\r\n            healthModifier: 0.95,\r\n            damageModifier: 0.85\r\n        },{\r\n            id: 2,\r\n            name: \"Gnarly Goblin\",\r\n            icon: \"icons/enemies/gnarly_goblin.png\",\r\n            level: 4,\r\n            requiredLevel: 2,\r\n            healthModifier: 1.5,\r\n            damageModifier: 0.7\r\n        }, {\r\n            id: 3,\r\n            name: \"Spark Spirit\",\r\n            icon: \"icons/enemies/spark_spirit.png\",\r\n            level: 6,\r\n            requiredLevel: 3,\r\n            healthModifier: 1,\r\n            damageModifier: 1.8\r\n        }, {\r\n            id: 4,\r\n            name: \"Greater Demon\",\r\n            icon: \"icons/enemies/greater_demon.png\",\r\n            level: 8,\r\n            requiredLevel: 5,\r\n            healthModifier: 1.9,\r\n            damageModifier: 1.5\r\n        }, {\r\n            id: 5,\r\n            name: \"The Beast\",\r\n            icon: \"icons/enemies/the_beast.png\",\r\n            level: 10,\r\n            requiredLevel: 7,\r\n            healthModifier: 2.2,\r\n            damageModifier: 2\r\n        }\r\n    ]\r\n}\r\n\r\nexport default enemies;","const spells = {\r\n    spells: [\r\n        {\r\n            id: 0,\r\n            name: \"Attack\",\r\n            icon: \"icons/spells/attack.png\",\r\n            _description: \"Attack your enemy for [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 0,\r\n            baseDamage: 15,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 2, 4]\r\n        }, {\r\n            id: 1,\r\n            name: \"Heal\",\r\n            icon: \"icons/spells/heal.png\",\r\n            _description: \"Cast a heal on yourself, restoring [h] health points.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 15,\r\n            baseDamage: 0,\r\n            baseHealing: 30,\r\n            _rank: 1,\r\n            rankModifier: [1, 2, 3.5]\r\n        }, {\r\n            id: 2,\r\n            name: \"Charged Arrow\",\r\n            icon: \"icons/spells/charged_arrow.png\",\r\n            _description: \"Launches a charged arrow at your enemy, dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 30,\r\n            baseDamage: 35,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.5, 2.5]\r\n        }, {\r\n            id: 3,\r\n            name: \"Piercing Shot\",\r\n            icon: \"icons/spells/piercing_shot.png\",\r\n            _description: \"An extremely strong arrow pierces your enemy, instantly dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 10,\r\n            baseDamage: 25,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.5, 2.15]\r\n        }, {\r\n            id: 4,\r\n            name: \"Quick Strike\",\r\n            icon: \"icons/spells/quick_strike.png\",\r\n            _description: \"A quick attack that deals [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 10,\r\n            baseDamage: 20,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.55, 2.15]\r\n        }, {\r\n            id: 5,\r\n            name: \"Skull Bash\",\r\n            icon: \"icons/spells/skull_bash.png\",\r\n            _description: \"A brutal slam that deals [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 35,\r\n            baseDamage: 30,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.65, 2.5]\r\n        }, {\r\n            id: 6,\r\n            name: \"Ambush\",\r\n            icon: \"icons/spells/ambush.png\",\r\n            _description: \"Stab your target from behind, dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 15,\r\n            baseDamage: 25,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.75, 2.15]\r\n        }, {\r\n            id: 7,\r\n            name: \"Venomous Vial\",\r\n            icon: \"icons/spells/venomous_vial.png\",\r\n            _description: \"Throw a vial of poison at your target, dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 25,\r\n            baseDamage: 30,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.55, 1.85]\r\n        }, {\r\n            id: 8,\r\n            name: \"Incinerate\",\r\n            icon: \"icons/spells/incinerate.png\",\r\n            _description: \"Set your target ablaze, dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 20,\r\n            baseDamage: 30,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.55, 2.25]\r\n        }, {\r\n            id: 9,\r\n            name: \"Transfusion\",\r\n            icon: \"icons/spells/transfusion.png\",\r\n            _description: \"Fuse your energy with the enemy, dealing [d] damage, and restoring [h] health points to you.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 60,\r\n            baseDamage: 20,\r\n            baseHealing: 20,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.55, 2.25]\r\n        }, {\r\n            id: 10,\r\n            name: \"Health Potion\",\r\n            icon: \"icons/spells/health_potion.png\",\r\n            _description: \"Drink a health potion, restoring [h] health points.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 0,\r\n            baseDamage: 0,\r\n            baseHealing: 20,\r\n            _rank: 1,\r\n            rankModifier: [1, 2.5, 4.5]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default spells;","const equipment = {\r\n    equipment: [\r\n        {\r\n            id: 0,\r\n            name: \"Scroll Of Knowledge\",\r\n            _description: \"Increases your max resources by [r]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/scroll_of_knowledge.png\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1.2,\r\n            damageModifier: 1,\r\n            healingModifier: 1,\r\n            cost: 100,\r\n            requiredLevel: 3,\r\n            availableClasses: [3]\r\n        }, {\r\n            id: 1,\r\n            name: \"Robe of Wizardry\",\r\n            _description: \"Increases your damage by [d]%, healing by [h]% and health by [hp]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/robe_of_wizardry.png\",\r\n            healthModifier: 1.15,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.175,\r\n            healingModifier: 1.15,\r\n            cost: 300,\r\n            requiredLevel: 4,\r\n            availableClasses: [1, 3]\r\n        }, {\r\n            id: 2,\r\n            name: \"Hat of Wizardry\",\r\n            _description: \"Increases your damage and healing by [d]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/hat_of_wizardry.png\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.25,\r\n            healingModifier: 1.25,\r\n            cost: 250,\r\n            requiredLevel: 2,\r\n            availableClasses: [1, 3]\r\n        }, {\r\n            id: 3,\r\n            name: \"Azariah's Chain of Vitality\",\r\n            _description: \"Increases your health by [hp]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/azariahs_chain_of_vitality.png\",\r\n            healthModifier: 1.35,\r\n            resourceModifier: 1,\r\n            damageModifier: 1,\r\n            healingModifier: 1,\r\n            cost: 200,\r\n            requiredLevel: 4,\r\n            availableClasses: [0, 1, 2, 3]\r\n        }, {\r\n            id: 4,\r\n            name: \"Bulwark\",\r\n            _description: \"Increases your health by [hp]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/bulwark.png\",\r\n            healthModifier: 1.2,\r\n            resourceModifier: 1,\r\n            damageModifier: 1,\r\n            healingModifier: 1,\r\n            cost: 100,\r\n            requiredLevel: 2,\r\n            availableClasses: [0, 1, 2]\r\n        }, {\r\n            id: 5,\r\n            name: \"Chainmail of Endurance\",\r\n            _description: \"Increases your damage by [d]% and health by [hp]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/chainmail_of_endurance.png\",\r\n            healthModifier: 1.5,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.25,\r\n            healingModifier: 1,\r\n            cost: 400,\r\n            requiredLevel: 6,\r\n            availableClasses: [0, 2]\r\n        }, {\r\n            id: 6,\r\n            name: \"Elven Headguard\",\r\n            _description: \"Increases your damage, healing and health by [d]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/elven_headguard.png\",\r\n            healthModifier: 1.25,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.25,\r\n            healingModifier: 1.25,\r\n            cost: 500,\r\n            requiredLevel: 8,\r\n            availableClasses: [1, 2]\r\n        }, {\r\n            id: 7,\r\n            name: \"Jeweled Chalice\",\r\n            _description: \"Increases your damage, healing and health by [d]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/jeweled_chalice.png\",\r\n            healthModifier: 1.25,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.25,\r\n            healingModifier: 1.25,\r\n            cost: 500,\r\n            requiredLevel: 8,\r\n            availableClasses: [3, 4]\r\n        }, {\r\n            id: 8,\r\n            name: \"Signet of Death\",\r\n            _description: \"Increases your damage by [d]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/signet_of_death.png\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.4,\r\n            healingModifier: 1,\r\n            cost: 700,\r\n            requiredLevel: 10,\r\n            availableClasses: [1, 2, 3, 4]\r\n        }, {\r\n            id: 9,\r\n            name: \"Tribal Pendant\",\r\n            _description: \"Increases your healing by [h]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/tribal_pendant.png\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1,\r\n            damageModifier: 1,\r\n            healingModifier: 1.6,\r\n            cost: 700,\r\n            requiredLevel: 10,\r\n            availableClasses: [1, 2, 3, 4]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default equipment;","import classes from \"./classes\";\r\nimport enemies from \"./enemies\";\r\nimport spells from \"./spells\";\r\nimport equipment from \"./equipment\";\r\n\r\nconst initialState = {\r\n    showIntroduction: true,\r\n    showCharacterCreation: false,\r\n    showCredits: false,\r\n    showStore: false,\r\n    showArena: false,\r\n    showCharacter: false,\r\n    ...enemies,\r\n    ...classes,\r\n    ...spells,\r\n    ...equipment,\r\n    gameSettings: {\r\n        baseHealthPerLevel: [100, 120, 200, 250, 300, 400, 475, 550, 700, 900, 1200, 1350, 1500, 1650],\r\n        baseResourcesPerLevel: [200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330],\r\n        requiredExperience: [100, 200, 400, 700, 1000, 1400, 1900, 2500, 2900, 3700, 4600, 5500, 7250, 9000]\r\n    },\r\n    character: {\r\n        class: null,\r\n        coins: 0,\r\n        level: 1,\r\n        experience: 0,\r\n        spells: [],\r\n        equipment: [],\r\n        name: \"\"\r\n    }\r\n}\r\n\r\nexport default initialState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from \"./reducers/reducers.js\";\n\nimport initialState from \"./states/initialState.js\";\n\nconst store = createStore(rootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render((<Provider store={store}><App /></Provider>), document.getElementById('root'));"],"sourceRoot":""}