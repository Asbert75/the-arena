{"version":3,"sources":["actions/actions.js","components/navigation/navigation.js","states/spells.js","classes/spell.js","states/classes.js","components/characterCreation/newCharacter.js","classes/equipment.js","states/settings.js","components/characterCreation/loadCharacter.js","components/characterCreation/characterCreation.js","components/credits/credits.js","components/character/character.js","classes/player.js","classes/enemy.js","states/enemies.js","components/arena/arena.js","states/equipment.js","components/store/store.js","App.js","reducers/reducers.js","states/initialState.js","index.js"],"names":["loadCharacter","character","cached","type","setAccountId","accountId","arguments","length","undefined","Navigation","_this","this","react_default","a","createElement","id","className","src","alt","props","navigation","showCharacterCreation","onClick","dispatch","showCharacter","disabled","characterClass","showArena","showStore","showCredits","Component","connect","state","class","spells","name","icon","description","secondaryDescription","resourceCost","baseDamage","baseHealing","rank","rankModifier","Spell","spell","Object","classCallCheck","_id","_name","_icon","_description","_secondaryDescription","_resourceCost","_baseDamage","_baseHealing","_rank","_rankModifier","toConsumableArray","replace","concat","Math","floor","damage","healing","newRank","classes","resourceType","healthModifier","resourceModifier","damageModifier","healingModifier","NewCharacter","possibleConstructorReturn","getPrototypeOf","call","selectedId","characterName","nameError","handleNameChange","bind","assertThisInitialized","spellArray","map","setState","selectedClass","getAvailableSpells","setClass","event","target","value","match","spellList","_this2","availableSpells","forEach","availableSpell","push","_this3","maxLength","placeholder","onChange","currentClass","key","toLowerCase","selectClass","Equipment","equipment","_healthModifier","_resourceModifier","_damageModifier","_healingModifier","_cost","cost","_requiredLevel","requiredLevel","_availableClasses","availableClasses","settings","baseHealthPerLevel","baseResourcesPerLevel","requiredExperience","LoadCharacter","characters","loadingFinished","errorOccured","fetch","headers","Accept","Content-Type","method","then","res","json","status","catch","err","uid","index","newCharacters","splice","console","log","_this4","level","round","reduce","previous","current","toFixed","modifier","deleteFromDatabase","CharacterCreation","view","refresh","nextProps","characterCreation_newCharacter","components_characterCreation_loadCharacter","Credits","href","Character","item","Player","data","experienceToNextLevel","maxHealth","maxResources","experience","currentHealth","currentResources","spellIndex","randomizer","random","crit","receiveResources","chance","resources","Enemy","enemies","Arena","arenaLevel","playerTurn","latestAction","showLatestAction","player","enemy","loot","coins","addSpellEventListeners","getRemainingHealth","distributeLoot","getLevel","giveLoot","startArena","_this5","nextLevel","_this6","checkForWinner","actionText","values","attack","getSpells","getName","receiveAttack","receiveHeal","window","setTimeout","handleEnemyAttack","_this7","_this8","addEventListener","container","document","getElementById","children","classList","contains","add","remove","handlePlayerAttack","_this9","Fragment","getIcon","n","indicatorStyle","left","style","getMaxHealth","width","getRemainingHealthPercentage","startNextLevel","resetArena","getRemainingResources","getResourceType","getClass","getMaxResources","getRemainingResourcesPercentage","Store","equipmentArray","itemId","find","sort","b","includes","characterHasItem","purchaseItem","storeSpell","properties","newSpell","App","storage","x","setItem","removeItem","e","DOMException","code","cachedCharacter","JSON","parse","localStorage","getItem","storageAvailable","getCachedCharacter","navigation_navigation","showIntroduction","characterCreation_characterCreation","credits_credits","components_character_character","arena_arena","store_store","uuid","require","saveToLocalStorage","local","stringify","saveToDatabase","saveableCharacter","objectSpread","body","rootReducer","combineReducers","action","newState","initialState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0"],"mappings":"6aAmEIA,SAAgB,SAACC,EAAWC,GAC5B,MAAO,CACHC,KAAM,iBACNF,YACAC,YAUJE,EAAe,WACf,MAAO,CACHD,KAAM,iBACNE,UAHiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,OC1E1BG,mLACK,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAK,qBAAsBC,IAAI,KACrDN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMC,WAAWC,sBAAwB,SAAW,MACvET,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,kBAAMZ,EAAKS,MAAMI,SDbnC,CACHpB,KAAM,8BCYF,eAEFS,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMC,WAAWI,cAAgB,SAAW,MAC/DZ,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,kBAAMZ,EAAKS,MAAMI,SDQnC,CACHpB,KAAM,oBCT2DsB,SAAwC,OAA9Bd,KAAKQ,MAAMO,gBAAlF,iBAEFd,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMC,WAAWO,UAAY,SAAW,MAC3Df,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,kBAAMZ,EAAKS,MAAMI,SDPnC,CACHpB,KAAM,gBCMuDsB,SAAwC,OAA9Bd,KAAKQ,MAAMO,gBAA9E,mBAEFd,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMC,WAAWQ,UAAY,SAAW,MAC3DhB,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,kBAAMZ,EAAKS,MAAMI,SDJnC,CACHpB,KAAM,gBCGuDsB,SAAwC,OAA9Bd,KAAKQ,MAAMO,gBAA9E,UAEFd,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMC,WAAWS,YAAc,SAAW,MAC7DjB,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,kBAAMZ,EAAKS,MAAMI,SDnBnC,CACHpB,KAAM,mBCkBF,qBAnBa2B,aAkCVC,cAPS,SAAAC,GACtB,MAAO,CACLZ,WAAYY,EAAMZ,WAClBM,eAAgBM,EAAM/B,UAAUgC,QAIrBF,CAAyBtB,mBCoFzByB,SA7HA,CACX,CACInB,GAAI,EACJoB,KAAM,SACNC,KAAM,0BACNC,YAAa,oCACbC,qBAAsB,+CACtBC,aAAc,EACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,EAAG,IACtB,CACC5B,GAAI,EACJoB,KAAM,OACNC,KAAM,wBACNC,YAAa,wDACbC,qBAAsB,KACtBC,aAAc,GACdC,WAAY,EACZC,YAAa,GACbC,KAAM,EACNC,aAAc,CAAC,EAAG,EAAG,MACtB,CACC5B,GAAI,EACJoB,KAAM,gBACNC,KAAM,iCACNC,YAAa,8DACbC,qBAAsB,KACtBC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,IAAK,MACxB,CACC5B,GAAI,EACJoB,KAAM,gBACNC,KAAM,iCACNC,YAAa,8EACbC,qBAAsB,kDACtBC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,IAAK,OACxB,CACC5B,GAAI,EACJoB,KAAM,eACNC,KAAM,gCACNC,YAAa,wCACbC,qBAAsB,kDACtBC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,IAAK,OACxB,CACC5B,GAAI,EACJoB,KAAM,aACNC,KAAM,8BACNC,YAAa,uCACbC,qBAAsB,KACtBC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,EAAG,OACtB,CACC5B,GAAI,EACJoB,KAAM,SACNC,KAAM,0BACNC,YAAa,oDACbC,qBAAsB,kDACtBC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,KAAM,OACzB,CACC5B,GAAI,EACJoB,KAAM,gBACNC,KAAM,iCACNC,YAAa,6DACbC,qBAAsB,KACtBC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,KAAM,OACzB,CACC5B,GAAI,EACJoB,KAAM,aACNC,KAAM,8BACNC,YAAa,8CACbC,qBAAsB,kDACtBC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,KAAM,OACzB,CACC5B,GAAI,EACJoB,KAAM,cACNC,KAAM,+BACNC,YAAa,+FACbC,qBAAsB,KACtBC,aAAc,GACdC,WAAY,GACZC,YAAa,GACbC,KAAM,EACNC,aAAc,CAAC,EAAG,KAAM,OACzB,CACC5B,GAAI,GACJoB,KAAM,gBACNC,KAAM,iCACNC,YAAa,sDACbC,qBAAsB,KACtBC,aAAc,EACdC,WAAY,EACZC,YAAa,GACbC,KAAM,EACNC,aAAc,CAAC,EAAG,IAAK,eC5ChBC,aA5EX,SAAAA,EAAYC,GAAQC,OAAAC,EAAA,EAAAD,CAAAnC,KAAAiC,GAChBjC,KAAKqC,IAAMH,EAAM9B,GACjBJ,KAAKsC,MAAQJ,EAAMV,KACnBxB,KAAKuC,MAAQL,EAAMT,KACnBzB,KAAKwC,aAAeN,EAAMR,YAC1B1B,KAAKyC,sBAAwBP,EAAMP,qBACnC3B,KAAK0C,cAAgBR,EAAMN,aAC3B5B,KAAK2C,YAAcT,EAAML,WACzB7B,KAAK4C,aAAeV,EAAMJ,YAC1B9B,KAAK6C,MAAQX,EAAMH,KACnB/B,KAAK8C,cAAgBZ,EAAMF,oEAI3B,MAAO,CACH5B,GAAIJ,KAAKqC,IACTb,KAAMxB,KAAKsC,MACXb,KAAMzB,KAAKuC,MACXb,YAAa1B,KAAKwC,aAClBb,qBAAsB3B,KAAKyC,sBAC3Bb,aAAc5B,KAAK0C,cACnBb,WAAY7B,KAAK2C,YACjBb,YAAa9B,KAAK4C,aAClBb,KAAM/B,KAAK6C,MACXb,aAAaG,OAAAY,EAAA,EAAAZ,CAAKnC,KAAK8C,2CAK3B,OAAO9C,KAAKqC,iCAIZ,OAAOrC,KAAKsC,mCAIZ,OAAOtC,KAAKuC,2CAIZ,OAAOvC,KAAK0C,mDAIZ,OAAO1C,KAAK8C,kDAIZ,IAAIpB,EAAc1B,KAAKwC,aAGvB,OADAd,GADAA,EAAcA,EAAYsB,QAAQ,SAApB,GAAAC,OAAiCC,KAAKC,MAAkB,GAAZnD,KAAKoD,QAAjD,KAAAH,OAAgEC,KAAKC,MAAkB,IAAZnD,KAAKoD,WACpEJ,QAAQ,SAApB,GAAAC,OAAiCC,KAAKC,MAAmB,GAAbnD,KAAKqD,SAAjD,KAAAJ,OAAiEC,KAAKC,MAAmB,IAAbnD,KAAKqD,wDAK/F,OAAOrD,KAAKyC,qDAIZ,OAAOS,KAAKC,MAAMnD,KAAK2C,YAAc3C,KAAKgC,aAAahC,KAAK6C,MAAM,oCAIlE,OAAOK,KAAKC,MAAMnD,KAAK4C,aAAe5C,KAAKgC,aAAahC,KAAK6C,MAAM,iCAInE,OAAO7C,KAAK6C,oBAGPS,GACLtD,KAAK6C,MAAQS,WCzBNC,EAhDC,CACZ,CACInD,GAAI,EACJoB,KAAM,UACNE,YAAa,+FACbD,KAAM,4BACN+B,aAAc,SACdC,eAAgB,IAChBC,iBAAkB,EAClBC,eAAgB,IAChBC,gBAAiB,EACjBrC,OAAQ,CAAC,EAAG,EAAG,EAAG,KACnB,CACCnB,GAAI,EACJoB,KAAM,SACNE,YAAa,8FACbD,KAAM,2BACN+B,aAAc,OACdC,eAAgB,IAChBC,iBAAkB,IAClBC,eAAgB,IAChBC,gBAAiB,IACjBrC,OAAQ,CAAC,EAAG,EAAG,EAAG,IACnB,CACCnB,GAAI,EACJoB,KAAM,QACNE,YAAa,uFACbD,KAAM,0BACN+B,aAAc,SACdC,eAAgB,IAChBC,iBAAkB,EAClBC,eAAgB,IAChBC,gBAAiB,EACjBrC,OAAQ,CAAC,EAAG,EAAG,EAAG,KACnB,CACCnB,GAAI,EACJoB,KAAM,SACNE,YAAa,2GACbD,KAAM,2BACN+B,aAAc,OACdC,eAAgB,EAChBC,iBAAkB,IAClBC,eAAgB,EAChBC,gBAAiB,EACjBrC,OAAQ,CAAC,EAAG,EAAG,EAAG,KCjCpBsC,cACF,SAAAA,IAAc,IAAA9D,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAnC,KAAA6D,IACV9D,EAAAoC,OAAA2B,EAAA,EAAA3B,CAAAnC,KAAAmC,OAAA4B,EAAA,EAAA5B,CAAA0B,GAAAG,KAAAhE,QAEKqB,MAAQ,CACT4C,WAAY,EACZC,cAAe,GACfC,WAAW,EACX5C,OAAQ,IAGZxB,EAAKqE,iBAAmBrE,EAAKqE,iBAAiBC,KAAtBlC,OAAAmC,EAAA,EAAAnC,QAAAmC,EAAA,EAAAnC,CAAApC,KAVdA,mFAcV,IAAIwE,EAAahD,EAAOiD,IAAI,SAAAtC,GAAK,OAAI,IAAID,EAAMC,KAC/ClC,KAAKyE,SAAS,CAAElD,OAAQgD,wCAGhBG,GACR,IAAInD,EAASvB,KAAK2E,mBAAmBD,EAAcnD,QACnDvB,KAAKQ,MAAMI,SLFJ,SAAC8D,EAAenD,EAAQC,EAAM9B,GACzC,MAAO,CACHF,KAAM,YACNkF,gBACAnD,SACAC,OACA9B,aKJoBkF,CAASF,EAAenD,EAAQvB,KAAKqB,MAAM6C,cAAelE,KAAKQ,MAAMd,qDAG5EmF,GACb,IACIrD,EAAOqD,EAAMC,OAAOC,MACrBvD,EAAK5B,OAAS,EACbI,KAAKyE,SAAS,CAAEN,WAAW,IAEvB3C,EAAKwD,MALH,aAMNhF,KAAKyE,SAAS,CAAEP,cAAe1C,EAAM2C,WAAW,IAGhDnE,KAAKyE,SAAS,CAAEN,WAAW,+CAIhBc,GAAW,IAAAC,EAAAlF,KACtBmF,EAAkB,GAUtB,OARAF,EAAUG,QAAQ,SAAAC,GACdH,EAAK7D,MAAME,OAAO6D,QAAQ,SAAAlD,GACnBA,EAAM9B,KAAOiF,GACZF,EAAgBG,KAAKpD,OAK1BiD,mCAGJ,IAAAI,EAAAvF,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACNH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,SAAOqF,UAAU,KAAKhG,KAAK,OAAOiG,YAAY,OAAOC,SAAW1F,KAAKoE,iBAAmB/D,UAAWL,KAAKqB,MAAM8C,UAAY,QAAU,OAClInE,KAAKqB,MAAM8C,WAAalE,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,4EAE9BJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,qBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACVkD,EAAQiB,IAAI,SAAAmB,GAAY,OACrB1F,EAAAC,EAAAC,cAAA,OAAKyF,IAAKD,EAAavF,GAAIC,UAAWkF,EAAKlE,MAAM4C,aAAe0B,EAAavF,GAAK,gCAAkC,uBAAwBO,QAAS,kBAAM4E,EAAKd,SAAS,CAAER,WAAY0B,EAAavF,OAChMH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,IAAK,2CAA4CC,IAAI,KACnFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAaqF,EAAalE,KAAMlB,IAAI,SAIjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVkD,EAAQiB,IAAI,SAAAmB,GAAY,OACzB1F,EAAAC,EAAAC,cAAA,OAAKE,UAAYkF,EAAKlE,MAAM4C,aAAe0B,EAAavF,GAAK,iBAAmB,QAASwF,IAAKD,EAAavF,IACvGH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,IAAK,2CAA4CC,IAAI,KACnFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAaqF,EAAalE,KAAMlB,IAAI,MAErEN,EAAAC,EAAAC,cAAA,UAAKwF,EAAanE,OAEtBvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAesF,EAAajE,aACzCzB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACdkF,EAAKZ,mBAAmBgB,EAAapE,QAAQiD,IAAI,SAAAtC,GAAK,OACnDjC,EAAAC,EAAAC,cAAA,OAAKyF,IAAK1D,EAAM9B,GAAIC,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAa4B,EAAMT,KAAMlB,IAAI,MAElEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAa6B,EAAMV,MACP,IAAvBU,EAAMN,cACJ3B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgB6B,EAAMN,aAAnC,IAAkD+D,EAAanC,aAAaqC,gBAGpF5F,EAAAC,EAAAC,cAAA,iBAAS+B,EAAMH,OAEnB9B,EAAAC,EAAAC,cAAA,SAAI+B,EAAMR,aACTQ,EAAMP,sBAAwB1B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAAwB6B,EAAMP,2BAKtF1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYM,QAAS,kBAAM4E,EAAKO,YAAYH,IAAe7E,SAAWyE,EAAKlE,MAAM8C,WAAaoB,EAAKlE,MAAM6C,cAActE,OAAS,KAChJ2F,EAAKlE,MAAM8C,WAAaoB,EAAKlE,MAAM6C,cAActE,OAAS,IAAMK,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,0DA9G3Dc,aA8HZC,cANS,SAAAC,GACtB,MAAO,CACL3B,UAAW2B,EAAM3B,YAIN0B,CAAyByC,GCxDzBkC,oBAhFX,SAAAA,EAAYC,GAAY7D,OAAAC,EAAA,EAAAD,CAAAnC,KAAA+F,GACpB/F,KAAKqC,IAAM2D,EAAU5F,GACrBJ,KAAKsC,MAAQ0D,EAAUxE,KACvBxB,KAAKuC,MAAQyD,EAAUvE,KACvBzB,KAAKwC,aAAewD,EAAUtE,YAC9B1B,KAAKiG,gBAAkBD,EAAUvC,eACjCzD,KAAKkG,kBAAoBF,EAAUtC,iBACnC1D,KAAKmG,gBAAkBH,EAAUrC,eACjC3D,KAAKoG,iBAAmBJ,EAAUpC,gBAClC5D,KAAKqG,MAAQL,EAAUM,KACvBtG,KAAKuG,eAAiBP,EAAUQ,cAChCxG,KAAKyG,kBAAoBT,EAAUU,wEAInC,MAAO,CACHtG,GAAIJ,KAAKqC,IACTb,KAAMxB,KAAKsC,MACXb,KAAMzB,KAAKuC,MACXb,YAAa1B,KAAKwC,aAClBiB,eAAgBzD,KAAKiG,gBACrBvC,iBAAkB1D,KAAKkG,kBACvBvC,eAAgB3D,KAAKmG,gBACrBvC,gBAAiB5D,KAAKoG,iBACtBE,KAAMtG,KAAKqG,MACXG,cAAexG,KAAKuG,eACpBG,iBAAiBvE,OAAAY,EAAA,EAAAZ,CAAKnC,KAAKyG,+CAK/B,OAAOzG,KAAKqC,iCAIZ,OAAOrC,KAAKsC,mCAIZ,OAAOtC,KAAKuC,0CAIZ,IAAIb,EAAc1B,KAAKwC,aAKvB,OADAd,GADAA,GADAA,GADAA,EAAcA,EAAYsB,QAAQ,SAAUE,KAAKC,MAA8B,IAAxBnD,KAAK0D,kBAA0B,MAC5DV,QAAQ,UAAWE,KAAKC,MAA4B,IAAtBnD,KAAKyD,gBAAwB,MAC3DT,QAAQ,SAAUE,KAAKC,MAA4B,IAAtBnD,KAAK2D,gBAAwB,MAC1DX,QAAQ,SAAUE,KAAKC,MAA6B,IAAvBnD,KAAK4D,iBAAyB,4CAKrF,OAAO5D,KAAKiG,yDAIZ,OAAOjG,KAAKkG,yDAIZ,OAAOlG,KAAKmG,wDAIZ,OAAOnG,KAAKoG,8CAIZ,OAAOpG,KAAKqG,4CAIZ,OAAOrG,KAAKuG,wDAIZ,OAAOvG,KAAKyG,4BCvELE,EANA,CACXC,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAC/FC,sBAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9FC,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MCQ7FC,cACF,SAAAA,IAAc,IAAAhH,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAnC,KAAA+G,IACVhH,EAAAoC,OAAA2B,EAAA,EAAA3B,CAAAnC,KAAAmC,OAAA4B,EAAA,EAAA5B,CAAA4E,GAAA/C,KAAAhE,QAEKqB,MAAQ,CACT2F,WAAY,GACZC,iBAAiB,EACjBC,cAAc,GANRnH,mFAUM,IAAAmF,EAAAlF,KAChBmH,MAAM,wCAA0CnH,KAAKQ,MAAMd,UAAW,CAClE0H,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,OAAQ,QAEXC,KAAK,SAAAC,GACFA,EAAIC,OAAOF,KAAK,SAAAR,IACZA,EAAaA,EAAWxC,IAAI,SAAAlF,GAOxB,OANAA,EAAUiC,OAASjC,EAAUiC,OAAOiD,IAAI,SAAAtC,GACpC,OAAO,IAAID,EAAMC,KAErB5C,EAAU0G,UAAY1G,EAAU0G,UAAUxB,IAAI,SAAAwB,GAC1C,OAAO,IAAID,EAAUC,KAElB1G,KAGGM,OAAS,EACnBsF,EAAKT,SAAS,CAAEuC,aAAYC,iBAAiB,EAAMC,cAAc,IAGjEhC,EAAKT,SAAS,CAAEkD,OAAQ,yBAA0BV,iBAAiB,EAAMC,cAAc,QAIlGU,MAAM,SAAAC,GACH3C,EAAKT,SAAS,CAAEyC,cAAc,iDAInBY,EAAKC,GAAO,IAAAxC,EAAAvF,KAC3BmH,MAAM,2CAA6CW,EAAK,CACpDP,OAAQ,WAEXC,KAAK,SAAAC,GACFA,EAAIC,OACHF,KAAK,SAAAC,GACF,GAAGK,IAAQvC,EAAK/E,MAAMlB,UAAUwI,IAC5BvC,EAAK/E,MAAMI,SRapB,CACHpB,KAAM,wBQZO,CACD,IAAIwI,EAAa7F,OAAAY,EAAA,EAAAZ,CAAOoD,EAAKlE,MAAM2F,YACnCgB,EAAcC,OAAOF,EAAO,GAC5BxC,EAAKd,SAAS,CAAEuC,WAAYgB,IAEhCE,QAAQC,IAAIV,KAEfG,MAAM,SAAAC,GACHK,QAAQC,IAAIN,OAGnBD,MAAM,SAAAC,GACHK,QAAQC,IAAIN,sCAIX,IAAAO,EAAApI,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACFJ,KAAKqB,MAAM4F,kBAAoBjH,KAAKqB,MAAM6F,cAAgBjH,EAAAC,EAAAC,cAAA,kCAC3DH,KAAKqB,MAAM6F,cAAgBjH,EAAAC,EAAAC,cAAA,yDAC3BH,KAAKqB,MAAMsG,QAAU1H,EAAAC,EAAAC,cAAA,SAAIH,KAAKqB,MAAMsG,QACpC3H,KAAKqB,MAAM2F,WAAWpH,OAAS,GAC5BK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACVL,KAAKqB,MAAM2F,WAAWxC,IAAI,SAAClF,EAAWyI,GACnC,OACI9H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYuF,IAAKtG,EAAUwI,KACtC7H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,IAAK,2CAA4CC,IAAI,KACnFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAahB,EAAUgC,MAAMG,KAAMlB,IAAI,MAE5EN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,UAAKb,EAAUkC,MACfvB,EAAAC,EAAAC,cAAA,kBAAUb,EAAU+I,MAApB,IAA2BpI,EAAAC,EAAAC,cAAA,YAAOb,EAAUgC,MAAME,SAG1DvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAI+C,KAAKoF,MAAMhJ,EAAU0G,UAAUuC,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQhF,gBAAgB,GAAKnE,EAAUgC,MAAMmC,eAAiBkD,EAASC,mBAAmBtH,EAAU+I,MAAM,MAE1LpI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKb,EAAUgC,MAAMkC,cACrBvD,EAAAC,EAAAC,cAAA,SAAI+C,KAAKoF,MAAMhJ,EAAU0G,UAAUuC,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQ/E,kBAAkB,GAAKpE,EAAUgC,MAAMoC,iBAAmBiD,EAASE,sBAAsBvH,EAAU+I,MAAM,MAEjMpI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAKb,EAAU0G,UAAUuC,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQ9E,gBAAgB,GAAKrE,EAAUgC,MAAMqC,gBAAgB+E,QAAQ,GAAvI,MAEJzI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAKb,EAAU0G,UAAUuC,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQ7E,iBAAiB,GAAKtE,EAAUgC,MAAMsC,iBAAiB8E,QAAQ,GAAzI,OAGRzI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACVf,EAAUiC,OAAOiD,IAAI,SAAAtC,GAClB,OACIjC,EAAAC,EAAAC,cAAA,OAAKyF,IAAK1D,EAAM9B,IACZH,EAAAC,EAAAC,cAAA,UAAK+B,EAAMV,MACXvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACV6B,EAAMF,aAAawC,IAAI,SAACmE,EAAUZ,GAAX,OAAqB9H,EAAAC,EAAAC,cAAA,OAAKyF,IAAKmC,EAAO1H,UAAW6B,EAAMH,KAAOgG,EAAQ,UAAW,uBAOjI9H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,OAAOM,QAAS,kBAAMyH,EAAK5H,MAAMI,SAASvB,EAAcC,OAC1EW,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASM,QAAS,kBAAMyH,EAAKQ,mBAAmBtJ,EAAUwI,IAAKC,mBA9H7F5G,aAiJbC,cAPS,SAAAC,GACtB,MAAO,CACL/B,UAAW+B,EAAM/B,UACjBI,UAAW2B,EAAM3B,YAIN0B,CAAyB2F,GCpJlC8B,cACF,SAAAA,EAAYrI,GAAO,IAAAT,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAnC,KAAA6I,IACf9I,EAAAoC,OAAA2B,EAAA,EAAA3B,CAAAnC,KAAAmC,OAAA4B,EAAA,EAAA5B,CAAA0G,GAAA7E,KAAAhE,KAAMQ,KAEDa,MAAQ,CACTyH,KAAM,GACNC,QAAShJ,EAAKS,MAAMuI,SALThJ,mFASCiJ,GAEbA,EAAUD,UAAY/I,KAAKQ,MAAMuI,SAChC/I,KAAKyE,SAAS,CAAEqE,KAAM,sCAIrB,IAAA5D,EAAAlF,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBACiB,KAApBJ,KAAKqB,MAAMyH,MACZ7I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACfJ,EAAAC,EAAAC,cAAA,OAAKQ,QAAS,kBAAMuE,EAAKT,SAAS,CAAEqE,KAAM,aAAa7I,EAAAC,EAAAC,cAAA,yBACvDF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,MAAKJ,EAAAC,EAAAC,cAAA,iBACpBF,EAAAC,EAAAC,cAAA,OAAKQ,QAAS,kBAAMuE,EAAKT,SAAS,CAAEqE,KAAM,YAAY7I,EAAAC,EAAAC,cAAA,6BAGjC,WAApBH,KAAKqB,MAAMyH,MAAqB7I,EAAAC,EAAAC,cAAC8I,EAAD,MACZ,UAApBjJ,KAAKqB,MAAMyH,MAAoB7I,EAAAC,EAAAC,cAAC+I,EAAD,cA5BhB/H,aA0CjBC,cARS,SAAAC,GACtB,MAAO,CACLkC,QAASlC,EAAMkC,QACfhC,OAAQF,EAAME,OACdwH,QAAS1H,EAAMZ,WAAWsI,UAIf3H,CAAyByH,GChCzBM,0LAZX,OACElJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,KAAGiJ,KAAK,0BAAR,0BAAf,WAAkFnJ,EAAAC,EAAAC,cAAA,KAAGiJ,KAAK,kCAAR,kCAAlF,eACUnJ,EAAAC,EAAAC,cAAA,KAAGiJ,KAAK,gCAAR,gCADV,UACwFnJ,EAAAC,EAAAC,cAAA,KAAGiJ,KAAK,0BAAR,0BADxF,2BANcjI,cCGhBkI,0LACK,IAAAtJ,EAAAC,KACP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACJH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,UAAKH,KAAKQ,MAAMlB,UAAUkC,MAC1BvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,IAAK,2CAA4CC,IAAI,KACnFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAaN,KAAKQ,MAAMlB,UAAUgC,MAAMG,KAAMlB,IAAI,MAEvFN,EAAAC,EAAAC,cAAA,mBAAWH,KAAKQ,MAAMlB,UAAU+I,QAEpCpI,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaL,KAAKQ,MAAMlB,UAAUgC,MAAME,MACtDvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAI+C,KAAKoF,MAAMtI,KAAKQ,MAAMlB,UAAU0G,UAAUuC,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQhF,gBAAgB,GAAKzD,KAAKQ,MAAMlB,UAAUgC,MAAMmC,eAAiBkD,EAASC,mBAAmB5G,KAAKQ,MAAMlB,UAAU+I,MAAM,MAE3NpI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKH,KAAKQ,MAAMlB,UAAUgC,MAAMkC,cAChCvD,EAAAC,EAAAC,cAAA,SAAI+C,KAAKoF,MAAMtI,KAAKQ,MAAMlB,UAAU0G,UAAUuC,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQ/E,kBAAkB,GAAK1D,KAAKQ,MAAMlB,UAAUgC,MAAMoC,iBAAmBiD,EAASE,sBAAsB7G,KAAKQ,MAAMlB,UAAU+I,MAAM,MAElOpI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKQ,MAAMlB,UAAU0G,UAAUuC,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQ9E,gBAAgB,GAAK3D,KAAKQ,MAAMlB,UAAUgC,MAAMqC,gBAAgB+E,QAAQ,GAA7J,MAEJzI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKQ,MAAMlB,UAAU0G,UAAUuC,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQ7E,iBAAiB,GAAK5D,KAAKQ,MAAMlB,UAAUgC,MAAMsC,iBAAiB8E,QAAQ,GAA/J,OAGRzI,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAd,UACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAUL,KAAKQ,MAAMlB,UAAUiC,OAAOiD,IAAI,SAAAtC,GAAK,OACtDjC,EAAAC,EAAAC,cAAA,OAAKyF,IAAK1D,EAAM9B,GAAIC,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAa4B,EAAMT,KAAMlB,IAAI,MAElEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAa6B,EAAMV,MACP,IAAvBU,EAAMN,cAAsB3B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgB6B,EAAMN,aAAnC,IAAkD7B,EAAKS,MAAMlB,UAAUgC,MAAMkC,aAAaqC,gBAE5H5F,EAAAC,EAAAC,cAAA,iBAAS+B,EAAMH,OAEnB9B,EAAAC,EAAAC,cAAA,SAAI+B,EAAMR,aACTQ,EAAMP,sBAAwB1B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAAwB6B,EAAMP,uBAE9E1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACV6B,EAAMF,aAAawC,IAAI,SAACmE,EAAUZ,GAAX,OAAqB9H,EAAAC,EAAAC,cAAA,OAAKyF,IAAKmC,EAAO1H,UAAW6B,EAAMH,KAAOgG,EAAQ,UAAW,sBAKzH9H,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAd,aACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACgC,IAA1CL,KAAKQ,MAAMlB,UAAU0G,UAAUpG,OAC1BK,EAAAC,EAAAC,cAAA,kDACAH,KAAKQ,MAAMlB,UAAU0G,UAAUxB,IAAI,SAAA8E,GAAI,OACrCrJ,EAAAC,EAAAC,cAAA,OAAKyF,IAAK0D,EAAKlJ,GAAIC,UAAU,QACzBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAagJ,EAAK7H,KAAMlB,IAAI,MAEjEN,EAAAC,EAAAC,cAAA,UAAKmJ,EAAK9H,OAEdvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeiJ,EAAK5H,yBAzErCP,cA0FTC,cAPS,SAAAC,GACtB,MAAO,CACL/B,UAAW+B,EAAM/B,UACjBI,UAAW2B,EAAM3B,YAIN0B,CAAyBiI,GCyCzBE,aAzIX,SAAAA,EAAYC,EAAM5C,EAAoBC,EAAuB4C,GAAuB,IAAA1J,EAAAC,KAAAmC,OAAAC,EAAA,EAAAD,CAAAnC,KAAAuJ,GAChFvJ,KAAK0J,UAAY9C,EAAmB4C,EAAKnB,MAAM,GAAKmB,EAAKlI,MAAMmC,eAC/DzD,KAAK2J,aAAe9C,EAAsB2C,EAAKnB,MAAM,GAAKmB,EAAKlI,MAAMoC,iBACrE1D,KAAK2D,eAAiB6F,EAAKlI,MAAMqC,eACjC3D,KAAK4D,gBAAkB4F,EAAKlI,MAAMsC,gBAClC5D,KAAKyB,KAAO+H,EAAKlI,MAAMG,KACvBzB,KAAKwB,KAAOgI,EAAKhI,KACjBxB,KAAKuB,OAASiI,EAAKjI,OACnBvB,KAAKgG,UAAYwD,EAAKxD,UACtBhG,KAAKwD,aAAegG,EAAKlI,MAAMkC,aAC/BxD,KAAKK,UAAYmJ,EAAKlI,MAAME,KAC5BxB,KAAK4J,WAAaJ,EAAKI,WACvB5J,KAAKyJ,sBAAwBA,EAC7BzJ,KAAKqI,MAAQmB,EAAKnB,MAElBmB,EAAKxD,UAAUZ,QAAQ,SAAAkE,GACnBvJ,EAAK4D,gBAAkB2F,EAAK3F,eAC5B5D,EAAK6D,iBAAmB0F,EAAK1F,gBAC7B7D,EAAK2J,WAAaJ,EAAK7F,eACvB1D,EAAK4J,cAAgBL,EAAK5F,mBAG9B1D,KAAK6J,cAAgB7J,KAAK0J,UAC1B1J,KAAK8J,iBAAmB9J,KAAK2J,gEAG1BI,GACH,IAAI7H,EAAQlC,KAAKuB,OAAOwI,GACpBC,GAAc9G,KAAKC,MAAsB,GAAhBD,KAAK+G,UAAiB,IAAI,IAEvD,GAAGjK,KAAK8J,kBAAoB5H,EAAMN,aAAc,CAC5C5B,KAAK8J,kBAAoB5H,EAAMN,aAE/B,IAAIwB,EAASF,KAAKC,MAAMjB,EAAMkB,OAASpD,KAAK2D,eAAiBqG,GACzD3G,EAAUH,KAAKC,MAAMjB,EAAMmB,QAAUrD,KAAK4D,gBAAkBoG,GAC5DE,GAAO,EAEX,GAAkB,IAAfH,EACC/J,KAAKmK,iBAAmC,GAAlBnK,KAAK2J,mBAE1B,GAAkB,IAAfI,EAAkB,CAEtB,IAAIK,EAASlH,KAAK+G,SACfG,GAAU,GAAKA,GAAU,KACxBhH,GAAU,EACV8G,GAAO,GAGf,MAAO,CAAC9G,EAAQC,EAAS6G,GAE7B,MAAO,CAAC,EAAG,yCAGD9G,GACPpD,KAAK6J,cAAgBzG,GAAU,EAC9BpD,KAAK6J,cAAgB,EAGrB7J,KAAK6J,eAAiBzG,sCAIlBC,GACLrD,KAAK6J,cAAgBxG,GAAWrD,KAAK0J,UACpC1J,KAAK6J,cAAgB7J,KAAK0J,UAG1B1J,KAAK6J,eAAiBxG,2CAIbgH,GACVrK,KAAK8J,iBAAmBO,GAAarK,KAAK2J,aACzC3J,KAAK8J,iBAAmB9J,KAAK2J,aAG7B3J,KAAK8J,kBAAoBO,uCAK7B,OAAOrK,KAAK0J,qDAIZ,OAAO1J,KAAK6J,mEAIZ,OAAQ7J,KAAK6J,cAAgB7J,KAAK0J,UAAa,4CAI/C,OAAO1J,KAAK2J,2DAIZ,OAAO3J,KAAK8J,yEAIZ,OAAQ9J,KAAK8J,iBAAmB9J,KAAK2J,aAAgB,oCAIrD,OAAO3J,KAAKwB,sCAIZ,OAAOxB,KAAKqI,sCAIZ,OAAOrI,KAAKyB,6CAIZ,OAAOzB,KAAKwD,8CAIZ,OAAOxD,KAAKK,gDAIZ,OAAOL,KAAK4J,4DAIZ,OAAO5J,KAAKyJ,wDAIZ,OAAOzJ,KAAKuB,gBCrFL+I,aAhDX,SAAAA,EAAYd,EAAM5C,GAAqBzE,OAAAC,EAAA,EAAAD,CAAAnC,KAAAsK,GACnCtK,KAAK0J,UAAY9C,EAAmB4C,EAAKnB,MAAM,GAAKmB,EAAK/F,eACzDzD,KAAK6J,cAAgB7J,KAAK0J,UAC1B1J,KAAK2D,eAAiB6F,EAAK7F,eAC3B3D,KAAKyB,KAAO+H,EAAK/H,KACjBzB,KAAKwB,KAAOgI,EAAKhI,KACjBxB,KAAKqI,MAAQmB,EAAKnB,2DAKlB,MAAO,CADMnF,KAAKC,MAAM,GAAKnD,KAAK2D,gBAAkBT,KAAKC,MAAsB,GAAhBD,KAAK+G,UAAiB,IAAM,KAC3E,yCAGN7G,GACPpD,KAAK6J,cAAgBzG,GAAU,EAC9BpD,KAAK6J,cAAgB,EAGrB7J,KAAK6J,eAAiBzG,uCAK1B,OAAOpD,KAAK0J,qDAIZ,OAAO1J,KAAK6J,mEAIZ,OAAQ7J,KAAK6J,cAAgB7J,KAAK0J,UAAa,oCAI/C,OAAO1J,KAAKwB,sCAIZ,OAAOxB,KAAKqI,sCAIZ,OAAOrI,KAAKyB,cCCL8I,EA9CC,CACZ,CACInK,GAAI,EACJoB,KAAM,WACNC,KAAM,6BACN4G,MAAO,EACP5E,eAAgB,EAChBE,eAAgB,GACjB,CACCvD,GAAI,EACJoB,KAAM,cACNC,KAAM,gCACN4G,MAAO,EACP5E,eAAgB,KAChBE,eAAgB,KAClB,CACEvD,GAAI,EACJoB,KAAM,gBACNC,KAAM,kCACN4G,MAAO,EACP5E,eAAgB,IAChBE,eAAgB,IACjB,CACCvD,GAAI,EACJoB,KAAM,eACNC,KAAM,iCACN4G,MAAO,EACP5E,eAAgB,EAChBE,eAAgB,KACjB,CACCvD,GAAI,EACJoB,KAAM,gBACNC,KAAM,kCACN4G,MAAO,EACP5E,eAAgB,IAChBE,eAAgB,KACjB,CACCvD,GAAI,EACJoB,KAAM,YACNC,KAAM,8BACN4G,MAAO,GACP5E,eAAgB,IAChBE,eAAgB,IC9BlB6G,qBACF,SAAAA,IAAc,IAAAzK,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAnC,KAAAwK,IACVzK,EAAAoC,OAAA2B,EAAA,EAAA3B,CAAAnC,KAAAmC,OAAA4B,EAAA,EAAA5B,CAAAqI,GAAAxG,KAAAhE,QAEKqB,MAAQ,CACToJ,WAAY,EACZC,YAAY,EACZC,aAAc,8CACdC,kBAAkB,EAClBC,OAAQ,KACRC,MAAO,KACPnD,OAAQ,UACRoD,KAAM,CACFnB,WAAY,EACZoB,MAAO,IAbLjL,4EAkBD,IAAAmF,EAAAlF,KACL8K,EAAQ,IAAIR,EAAMC,EAAQvK,KAAKqB,MAAMoJ,WAAW,GAAI9D,EAASC,oBAC7DiE,EAAS,IAAItB,EAAOvJ,KAAKQ,MAAMlB,UAAWqH,EAASC,mBACnDD,EAASE,sBAAuBF,EAASG,mBAAmB9G,KAAKQ,MAAMlB,UAAU+I,MAAM,IAC3FrI,KAAKyE,SAAS,CAAEqG,QAAOD,UAAS,WAC5B3F,EAAK+F,yBACL/F,EAAKT,SAAS,CAAEkD,OAAQ,0DAK5B,OAAG3H,KAAKqB,MAAMyJ,MAAMI,oBAAsB,GACtClL,KAAKmL,kBACE,GAEHnL,KAAKqB,MAAMwJ,OAAOK,oBAAsB,IAC5ClL,KAAKyE,SAAS,CAAEkD,OAAQ,WACjB,4CAME,IAAApC,EAAAvF,KACb,GAAkC,IAA/BA,KAAKqB,MAAM0J,KAAKnB,YAA8C,IAA1B5J,KAAKqB,MAAM0J,KAAKC,MAAa,CAChE,IAAIpB,EAAa1G,KAAKC,MAAkC,GAA5BnD,KAAKqB,MAAMyJ,MAAMM,WAAkBlI,KAAKC,MAAsB,GAAhBD,KAAK+G,UAAiB,IAAM,MAClGe,EAAQ9H,KAAKC,MAAkC,GAA5BnD,KAAKqB,MAAMyJ,MAAMM,WAAkBlI,KAAKC,MAAsB,GAAhBD,KAAK+G,UAAiB,IAAM,MACjGjK,KAAKyE,SAAS,CAAEsG,KAAM,CAAEnB,aAAYoB,SAASrD,OAAQ,UAAY,WAC7DpC,EAAK/E,MAAMI,SfnBZ,SAACgJ,EAAYoB,EAAOtL,GAC/B,MAAO,CACHF,KAAM,YACNoK,aACAoB,QACAtL,aec4B2L,CAASzB,EAAYoB,EAAOzF,EAAK/E,MAAMd,oDAK1D,IAAA0I,EAAApI,KACTA,KAAKyE,SAAS,CAAEiG,YAAY,EAAME,kBAAkB,EAAOH,WAAY,GAAK,WACxErC,EAAKkD,wDAII,IAAAC,EAAAvL,KACTwL,EAAYxL,KAAKqB,MAAMoJ,WAAa,EACxCzK,KAAKyE,SAAS,CAAEiG,YAAY,EAAME,kBAAkB,EAAOH,WAAYe,EAAWT,KAAM,CAAEnB,WAAY,EAAGoB,MAAO,IAAM,WAClHO,EAAKD,0DAIMvD,GAAO,IAAA0D,EAAAzL,KACtB,IAAGA,KAAK0L,kBAGsB,eAAtB1L,KAAKqB,MAAMsG,OAAyB,CACxC,IAAI3H,KAAKqB,MAAMqJ,WACX,OAGJ,IAIIiB,EAJAC,EAAS5L,KAAKqB,MAAMwJ,OAAOgB,OAAO9D,GAClC3E,EAASwI,EAAO,GAChBvI,EAAUuI,EAAO,GACjB1B,EAAO0B,EAAO,GAGlB,GAAGxI,EAAS,GAAKC,EAAU,EACvBsI,EAAU,QAAA1I,OAAWjD,KAAKqB,MAAMwJ,OAAOiB,UAAU/D,GAAOvG,KAA9C,SAAAyB,OAA0DjD,KAAKqB,MAAMyJ,MAAMiB,QAA3E,SAAA9I,OAA0FG,EAA1F,2CAAAH,OACRI,EADQ,8BAGT,GAAGD,EAAS,EACbuI,EAAU,QAAA1I,OAAWjD,KAAKqB,MAAMwJ,OAAOiB,UAAU/D,GAAOvG,KAA9C,KAAAyB,OAAsDiH,EAAO,aAAe,GAA5E,SAAAjH,OAAsFjD,KAAKqB,MAAMyJ,MAAMiB,QAAvG,SAAA9I,OAAsHG,EAAtH,eAET,MAAGC,EAAU,GAId,OAHAsI,EAAU,QAAA1I,OAAWjD,KAAKqB,MAAMwJ,OAAOiB,UAAU/D,GAAOvG,KAA9C,gBAAAyB,OAAiEI,EAAjE,kBAMdrD,KAAKyE,SAAS,CAAEiG,YAAY,IAC5B1K,KAAKqB,MAAMyJ,MAAMkB,cAAc5I,GAC/BpD,KAAKqB,MAAMwJ,OAAOoB,YAAY5I,GAE9BrD,KAAKyE,SAAS,CAAEmG,kBAAkB,EAAMD,aAAcgB,IACtDO,OAAOC,WAAW,WACdV,EAAKhH,SAAS,CAAEmG,kBAAkB,IAClCa,EAAKW,qBACN,kDAIS,IAAAC,EAAArM,KAChB,IAAGA,KAAK0L,kBAGsB,eAAtB1L,KAAKqB,MAAMsG,OAAyB,CACxC,IAAIvE,EAASpD,KAAKqB,MAAMyJ,MAAMe,SAAS,GACnCF,EAAU,GAAA1I,OAAMjD,KAAKqB,MAAMyJ,MAAMiB,QAAvB,iBAAA9I,OAA8CG,EAA9C,WAEdpD,KAAKqB,MAAMwJ,OAAOmB,cAAc5I,GAEhCpD,KAAKyE,SAAS,CAAEmG,kBAAkB,EAAMD,aAAcgB,IACtDO,OAAOC,WAAW,WACdE,EAAK5H,SAAS,CAAEmG,kBAAkB,EAAOF,YAAY,IACrD2B,EAAKX,kBACN,uDAIc,IAAAY,EAAAtM,KACrBkM,OAAOK,iBAAiB,UAAW,SAAA1H,GAC/B,IAAI2H,EAAYC,SAASC,eAAe,UAExC,GAAiB,MAAd7H,EAAMe,IAAa,CAClB,IAAI1D,EAAQsK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAGzK,EAAM0K,UAAUC,SAAS,YAAa,OACzC3K,EAAM0K,UAAUE,IAAI,gBACjB,GAAiB,MAAdjI,EAAMe,IAAa,CACzB,IAAI1D,EAAQsK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAGzK,EAAM0K,UAAUC,SAAS,YAAa,OACzC3K,EAAM0K,UAAUE,IAAI,gBACjB,GAAiB,MAAdjI,EAAMe,IAAa,CACzB,IAAI1D,EAAQsK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAGzK,EAAM0K,UAAUC,SAAS,YAAa,OACzC3K,EAAM0K,UAAUE,IAAI,gBACjB,GAAiB,MAAdjI,EAAMe,IAAa,CACzB,IAAI1D,EAAQsK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAGzK,EAAM0K,UAAUC,SAAS,YAAa,OACzC3K,EAAM0K,UAAUE,IAAI,cAI5BZ,OAAOK,iBAAiB,QAAS,SAAA1H,GAC7B,IAAI2H,EAAYC,SAASC,eAAe,UAExC,GAAiB,MAAd7H,EAAMe,IAAa,CAClB,IAAI1D,EAAQsK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAGzK,EAAM0K,UAAUC,SAAS,YAAa,OACzC3K,EAAM0K,UAAUG,OAAO,WACvBT,EAAKU,mBAAmB,QACrB,GAAiB,MAAdnI,EAAMe,IAAa,CACzB,IAAI1D,EAAQsK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAGzK,EAAM0K,UAAUC,SAAS,YAAa,OACzC3K,EAAM0K,UAAUG,OAAO,WACvBT,EAAKU,mBAAmB,QACrB,GAAiB,MAAdnI,EAAMe,IAAa,CACzB,IAAI1D,EAAQsK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAGzK,EAAM0K,UAAUC,SAAS,YAAa,OACzC3K,EAAM0K,UAAUG,OAAO,WACvBT,EAAKU,mBAAmB,QACrB,GAAiB,MAAdnI,EAAMe,IAAa,CACzB,IAAI1D,EAAQsK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAGzK,EAAM0K,UAAUC,SAAS,YAAa,OACzC3K,EAAM0K,UAAUG,OAAO,WACvBT,EAAKU,mBAAmB,uCAK3B,IAAAC,EAAAjN,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACoB,YAAtBJ,KAAKqB,MAAMsG,QACT1H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBAAaH,KAAKQ,MAAMlB,UAAUkC,KAAlC,IACAvB,EAAAC,EAAAC,cAAA,WADA,4PAKAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WANA,0EASAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,WAAWM,QAAS,kBAAMsM,EAAK3B,kBAIrC,YAAtBtL,KAAKqB,MAAMsG,QAAwB1H,EAAAC,EAAAC,cAACF,EAAAC,EAAMgN,SAAP,KACjCjN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,2CAA4CC,IAAI,KAC5EN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAaN,KAAKqB,MAAMyJ,MAAMqC,QAAS5M,IAAI,MAEhFN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaL,KAAKqB,MAAMyJ,MAAMiB,UAEhD9L,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYC,IAAK,wCAAyCC,IAAI,KAC5E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAE,GAAIiE,IAAI,SAAA4I,GACpB,IACIC,EAAiB,CACjBC,KAFY,GAAJF,EAAU,EAAI,MAI1B,OAAQnN,EAAAC,EAAAC,cAAA,OAAKyF,IAAKwH,EAAGG,MAAOF,EAAgBhN,UAAW4M,EAAK5L,MAAMoJ,WAAa2C,EAAI,YAAc,mBAAoB9M,IAAK,8BAA+BC,IAAI,SAIzKN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,SAAb,SAA4BL,KAAKqB,MAAMyJ,MAAMM,UAC7CnL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAU6C,KAAKC,MAAMnD,KAAKqB,MAAMyJ,MAAMI,oBAAnD,IAAyEhI,KAAKC,MAAMnD,KAAKqB,MAAMyJ,MAAM0C,cAArG,OACAvN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,sCAAuCC,IAAI,KACvEN,EAAAC,EAAAC,cAAA,OAAKoN,MAAO,CAACE,MAAwD,KAAhDzN,KAAKqB,MAAMyJ,MAAM4C,6BAAuC,MAAOrN,UAAU,0BAGtGJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACTL,KAAKqB,MAAMuJ,kBAA0C,eAAtB5K,KAAKqB,MAAMsG,QAA2B1H,EAAAC,EAAAC,cAAA,8BACtEH,KAAKqB,MAAMuJ,kBAA0C,eAAtB5K,KAAKqB,MAAMsG,QAA2B1H,EAAAC,EAAAC,cAAA,UAAKH,KAAKqB,MAAMsJ,cAC/D,WAAtB3K,KAAKqB,MAAMsG,QACR1H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,IAAyBL,KAAKqB,MAAM0J,KAAKnB,WAAzC,eACA3J,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,IAA0BL,KAAKqB,MAAM0J,KAAKC,MAA1C,IAAiD/K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,OAEjF,IAA1BP,KAAKqB,MAAMoJ,YAAoBxK,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcM,QAAS,kBAAMsM,EAAKU,oBACzD,IAA1B3N,KAAKqB,MAAMoJ,YAAoBxK,EAAAC,EAAAC,cAAA,8DAGjB,UAAtBH,KAAKqB,MAAMsG,QACR1H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAAaM,QAAS,kBAAMsM,EAAKW,kBAI/D3N,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACFJ,KAAKqB,MAAMwJ,OAAOiB,UAAUtH,IAAK,SAACtC,EAAO6F,GAAR,OACnC9H,EAAAC,EAAAC,cAAA,OAAKyF,IAAK1D,EAAM9B,GAAIC,UAAU,QAAQM,QAAS,kBAAMsM,EAAKD,mBAAmBjF,KACzE9H,EAAAC,EAAAC,cAAA,OAAKE,UAAW4M,EAAK5L,MAAMqJ,YAAeuC,EAAK5L,MAAMwJ,OAAOgD,uBAAyB3L,EAAMN,aAAgB,uBAAyB,uBAChI3B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAQ0H,EAAM,GAC3B9H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAa4B,EAAMT,KAAMlB,IAAI,MAElEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAa6B,EAAMV,MACP,IAAvBU,EAAMN,cAAsB3B,EAAAC,EAAAC,cAAA,KAAGE,UAAW6B,EAAMN,aAAeqL,EAAK5L,MAAMwJ,OAAOgD,sBAAwB,uBAAyB,gBAAiB3L,EAAMN,aAA7H,IAA4IqL,EAAK5L,MAAMwJ,OAAOiD,kBAEhM7N,EAAAC,EAAAC,cAAA,iBAAS+B,EAAMH,OAEnB9B,EAAAC,EAAAC,cAAA,SAAI+B,EAAMR,aACTQ,EAAMP,sBAAwB1B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAAwB6B,EAAMP,2BAKtF1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKH,KAAKqB,MAAMwJ,OAAOkB,SACvB9L,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,KACvDN,EAAAC,EAAAC,cAAA,SAAIH,KAAKQ,MAAMlB,UAAU0L,SAGjC/K,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kBAAUH,KAAKqB,MAAMwJ,OAAOO,SAA5B,IAAsCnL,EAAAC,EAAAC,cAAA,YAAOH,KAAKqB,MAAMwJ,OAAOkD,WAC/D9N,EAAAC,EAAAC,cAAA,SAAI+C,KAAKC,MAAMnD,KAAKqB,MAAMwJ,OAAOK,oBAAjC,IAAuDhI,KAAKC,MAAMnD,KAAKqB,MAAMwJ,OAAO2C,cAApF,OACAvN,EAAAC,EAAAC,cAAA,SAAI+C,KAAKC,MAAMnD,KAAKqB,MAAMwJ,OAAOgD,uBAAjC,IAA0D3K,KAAKC,MAAMnD,KAAKqB,MAAMwJ,OAAOmD,iBAAvF,IAA0GhO,KAAKqB,MAAMwJ,OAAOiD,mBAGpI7N,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,sCAAuCC,IAAI,KACvEN,EAAAC,EAAAC,cAAA,OAAKoN,MAAO,CAACE,MAAyD,KAAjDzN,KAAKqB,MAAMwJ,OAAO6C,6BAAuC,MAAOrN,UAAU,yBAEnGJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,sCAAuCC,IAAI,KACvEN,EAAAC,EAAAC,cAAA,OAAKoN,MAAO,CAACE,MAA4D,KAApDzN,KAAKqB,MAAMwJ,OAAOoD,gCAA0C,MAAO5N,UAAW,gBAAkBL,KAAKqB,MAAMwJ,OAAOiD,gBAAgBjI,iBAW3J5F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACqB,KAA/BL,KAAKQ,MAAMlB,UAAU+I,OAAgBpI,EAAAC,EAAAC,cAAA,sBACrCH,KAAKQ,MAAMlB,UAAU+I,MAAQ,IAAMpI,EAAAC,EAAAC,cAAA,SAAIH,KAAKQ,MAAMlB,UAAUsK,WAAzB,IAAsCjD,EAASG,mBAAmB9G,KAAKQ,MAAMlB,UAAU+I,MAAM,GAA7F,eACnCrI,KAAKQ,MAAMlB,UAAU+I,MAAQ,IAAMpI,EAAAC,EAAAC,cAAA,SAAIwG,EAASG,mBAAmB9G,KAAKQ,MAAMlB,UAAU+I,MAAM,GAAKrI,KAAKQ,MAAMlB,UAAUsK,WAArF,iBAA+G5J,KAAKQ,MAAMlB,UAAU+I,MAAQ,IAEpLpI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,sCAAuCC,IAAI,KACtEP,KAAKQ,MAAMlB,UAAU+I,MAAQ,IAAMpI,EAAAC,EAAAC,cAAA,OAAKoN,MAAO,CAACE,MAASzN,KAAKQ,MAAMlB,UAAUsK,WAAWjD,EAASG,mBAAmB9G,KAAKQ,MAAMlB,UAAU+I,MAAM,GAAM,IAAO,MAAOhI,UAAU,uCAnTvLc,cAmULC,cAPS,SAAAC,GACtB,MAAO,CACL3B,UAAW2B,EAAM3B,UACjBJ,UAAW+B,EAAM/B,YAIN8B,CAAyBoJ,GCnNzBxE,SA5HG,CACd,CACI5F,GAAI,EACJoB,KAAM,sBACNE,YAAa,wCACbD,KAAM,0CACNgC,eAAgB,EAChBC,iBAAkB,IAClBC,eAAgB,EAChBC,gBAAiB,EACjB0C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,IACpB,CACCtG,GAAI,EACJoB,KAAM,mBACNE,YAAa,sEACbD,KAAM,uCACNgC,eAAgB,KAChBC,iBAAkB,EAClBC,eAAgB,MAChBC,gBAAiB,KACjB0C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCtG,GAAI,EACJoB,KAAM,kBACNE,YAAa,6CACbD,KAAM,sCACNgC,eAAgB,EAChBC,iBAAkB,EAClBC,eAAgB,KAChBC,gBAAiB,KACjB0C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCtG,GAAI,EACJoB,KAAM,8BACNE,YAAa,kCACbD,KAAM,iDACNgC,eAAgB,KAChBC,iBAAkB,EAClBC,eAAgB,EAChBC,gBAAiB,EACjB0C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,EAAG,IAC1B,CACCtG,GAAI,EACJoB,KAAM,UACNE,YAAa,kCACbD,KAAM,8BACNgC,eAAgB,IAChBC,iBAAkB,EAClBC,eAAgB,EAChBC,gBAAiB,EACjB0C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCtG,GAAI,EACJoB,KAAM,yBACNE,YAAa,qDACbD,KAAM,6CACNgC,eAAgB,IAChBC,iBAAkB,EAClBC,eAAgB,KAChBC,gBAAiB,EACjB0C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCtG,GAAI,EACJoB,KAAM,kBACNE,YAAa,qDACbD,KAAM,sCACNgC,eAAgB,KAChBC,iBAAkB,EAClBC,eAAgB,KAChBC,gBAAiB,KACjB0C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCtG,GAAI,EACJoB,KAAM,kBACNE,YAAa,qDACbD,KAAM,sCACNgC,eAAgB,KAChBC,iBAAkB,EAClBC,eAAgB,KAChBC,gBAAiB,KACjB0C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,EAAG,IAC1B,CACCtG,GAAI,EACJoB,KAAM,kBACNE,YAAa,iCACbD,KAAM,sCACNgC,eAAgB,EAChBC,iBAAkB,EAClBC,eAAgB,IAChBC,gBAAiB,EACjB0C,KAAM,IACNE,cAAe,GACfE,iBAAkB,CAAC,EAAG,EAAG,IAC1B,CACCtG,GAAI,EACJoB,KAAM,iBACNE,YAAa,kCACbD,KAAM,qCACNgC,eAAgB,EAChBC,iBAAkB,EAClBC,eAAgB,EAChBC,gBAAiB,IACjB0C,KAAM,IACNE,cAAe,GACfE,iBAAkB,CAAC,EAAG,MC7GxBwH,cACF,SAAAA,EAAY1N,GAAO,IAAAT,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAnC,KAAAkO,IACfnO,EAAAoC,OAAA2B,EAAA,EAAA3B,CAAAnC,KAAAmC,OAAA4B,EAAA,EAAA5B,CAAA+L,GAAAlK,KAAAhE,KAAMQ,KAEDa,MAAQ,CACTyH,KAAM,YACN9C,UAAW,IALAjG,mFAUf,IAAIoO,EACJA,EAAiBnI,EAAUxB,IAAI,SAAAwB,GAAS,OAAI,IAAID,EAAUC,KAE1DhG,KAAKyE,SAAS,CAAEuB,UAAWmI,6CAGdC,GACb,OAAOpO,KAAKQ,MAAMlB,UAAU0G,UAAUqI,KAAK,SAAA/E,GAAI,OAAIA,EAAKlJ,KAAOgO,qCAG1D,IAAAlJ,EAAAlF,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACRH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,kBAA8B,WAApBH,KAAKqB,MAAMyH,KAAoB,SAAW,aACpD7I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,KACvDN,EAAAC,EAAAC,cAAA,SAAIH,KAAKQ,MAAMlB,UAAU0L,QAE7B/K,EAAAC,EAAAC,cAAA,UAAQE,UAA+B,cAApBL,KAAKqB,MAAMyH,KAAuB,sBAAwB,eAAgBnI,QAAS,WAAQuE,EAAKT,SAAS,CAAEqE,KAAM,iBACpI7I,EAAAC,EAAAC,cAAA,UAAQE,UAA+B,WAApBL,KAAKqB,MAAMyH,KAAoB,mBAAqB,YAAanI,QAAS,WAAQuE,EAAKT,SAAS,CAAEqE,KAAM,eAEzG,cAApB9I,KAAKqB,MAAMyH,MAAwB7I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAC/CL,KAAKqB,MAAM2E,UAAUsI,KAAK,SAACpO,EAAGqO,GAAJ,OAAWrO,EAAEsG,cAAgB+H,EAAE/H,cAAiB,EAAM+H,EAAE/H,cAAgBtG,EAAEsG,eAAkB,EAAI,IAAIhC,IAAI,SAAA8E,GAC/H,OAAGA,EAAK5C,iBAAiB8H,SAAStJ,EAAK1E,MAAMlB,UAAUgC,MAAMlB,IACjDH,EAAAC,EAAAC,cAAA,OAAKyF,IAAK0D,EAAKlJ,GAAIC,UAAW6E,EAAKuJ,iBAAiBnF,EAAKlJ,IAAM,sBAAwB,iBAC3FH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAagJ,EAAK7H,KAAMlB,IAAI,MAEjEN,EAAAC,EAAAC,cAAA,UAAKmJ,EAAK9H,OAEdvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAe6E,EAAKuJ,iBAAiBnF,EAAKlJ,IAAM,6BAA+BkJ,EAAK5H,cAErGzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW6E,EAAK1E,MAAMlB,UAAU+I,MAAQiB,EAAK9C,eAAiBtB,EAAK1E,MAAMlB,UAAU0L,MAAQ1B,EAAKhD,KAAO,mBAAqB,WAC7HrG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,KAAGE,UAAW6E,EAAK1E,MAAMlB,UAAU+I,MAAQiB,EAAK9C,cAAgB,WAAa,MAA7E,SAA0F8C,EAAK9C,cAA/F,KACAvG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,SAAoCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,KAA3F,IAAgGN,EAAAC,EAAAC,cAAA,QAAME,UAAW6E,EAAK1E,MAAMlB,UAAU0L,MAAQ1B,EAAKhD,KAAO,WAAa,MAAOgD,EAAKhD,QAEvLrG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASM,QAAS,WAC5BuE,EAAKuJ,iBAAiBnF,IACtBpE,EAAK1E,MAAMI,SjBRhC,SAAC0I,EAAM5J,GACtB,MAAO,CACHF,KAAM,gBACN8J,OACA5J,aiBIoDgP,CAAapF,EAAMpE,EAAK1E,MAAMd,iBAK3D,QAIG,WAApBM,KAAKqB,MAAMyH,MAAqB7I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAC5CL,KAAKQ,MAAMlB,UAAUiC,OAAOiD,IAAI,SAACtC,EAAO6F,GACrC,IAAI4G,EAAa,IAAI1M,EAAMC,EAAM0M,YAMjC,OAJGD,EAAW5M,KAAO,IACjB4M,EAAW5M,KAAQ4M,EAAW5M,KAAO,GAIrC9B,EAAAC,EAAAC,cAAA,OAAKyF,IAAK+I,EAAWvO,GAAIC,UAA0B,IAAf6B,EAAMH,KAAa,uBAAyB,kBAC5E9B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAaqO,EAAWlN,KAAMlB,IAAI,MAEvEN,EAAAC,EAAAC,cAAA,UAAKwO,EAAWnN,OAEpBvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAA8B,IAAf6B,EAAMH,KAAa,4DAA6D4M,EAAWjN,aACtHiN,EAAWhN,sBAAwB1B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAAwBsO,EAAWhN,uBAExF1B,EAAAC,EAAAC,cAAA,OAAKE,UAAW6E,EAAK1E,MAAMlB,UAAU0L,MAAS,IAAI2D,EAAW5M,KAAQ,mBAAqB,WACtF9B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACM,IAAf6B,EAAMH,KAAa9B,EAAAC,EAAAC,cAAA,qBAAkBF,EAAAC,EAAAC,cAAA,qBAAawO,EAAW5M,KAAxB,QACvC9B,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,SAAoCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,KAA3F,IAAgGN,EAAAC,EAAAC,cAAA,QAAME,UAAW6E,EAAK1E,MAAMlB,UAAU0L,MAAS,IAAI2D,EAAW5M,KAAQ,WAAa,MAAO,IAAK4M,EAAW5M,QAE9M9B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAAaM,QAAS,WjBvDrD,IAACoJ,EAAYzD,EAAMuI,EAAUnP,EiBwDTwC,EAAMH,KAAO,GACZmD,EAAK1E,MAAMI,UjBzD/BmJ,EiByDqDhC,EjBzDzCzB,EiByDiD,IAAIqI,EAAW5M,KjBzD1D8M,EiByDiEF,EAAWC,WjBzDlElP,EiByD8EwF,EAAK1E,MAAMd,UjBxD9H,CACHF,KAAM,gBACNuK,aACAzD,OACAuI,WACAnP,+BiB5CYyB,aAqHLC,cATS,SAAAC,GACtB,MAAO,CACL/B,UAAW+B,EAAM/B,UACjB0G,UAAW3E,EAAM2E,UACjBzE,OAAQF,EAAME,OACd7B,UAAW2B,EAAM3B,YAIN0B,CAAyB8M,GChHlCY,kMACetP,GACb,IACI,IAAIuP,EAAU7C,OAAO1M,GACjBwP,EAAI,mBAGR,OAFAD,EAAQE,QAAQD,EAAGA,GACnBD,EAAQG,WAAWF,IACZ,EAEX,MAAMG,GACF,OAAOA,aAAaC,eAEL,KAAXD,EAAEE,MAES,OAAXF,EAAEE,MAGS,uBAAXF,EAAE3N,MAES,+BAAX2N,EAAE3N,OAEiB,IAAnBuN,EAAQnP,qDAKhB,IAAI0P,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,cACnDJ,IACCA,EAAgB/N,OAAS+N,EAAgB/N,OAAOiD,IAAI,SAAAtC,GAAK,OAAI,IAAID,EAAMC,KACvEoN,EAAgBtJ,UAAYsJ,EAAgBtJ,UAAUxB,IAAI,SAAAwB,GAAS,OAAI,IAAID,EAAUC,KACrFhG,KAAKQ,MAAMI,SAASvB,EAAciQ,GAAiB,iDAKvD,GAAGtP,KAAK2P,iBAAiB,gBAAiB,CACtC3P,KAAK4P,qBAEL,IAAIlQ,EAAY+P,aAAaC,QAAQ,aACjChQ,EAIAM,KAAKQ,MAAMI,SAASnB,EAAaC,IAHjCM,KAAKQ,MAAMI,SAASnB,uCAQvB,IAAAM,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OACJH,EAAAC,EAAAC,cAAC0P,EAAD,MACE7P,KAAKQ,MAAMC,WAAWqP,kBACpB7P,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,yRAMAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAPA,mCAUAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYM,QAAS,kBAAMZ,EAAKS,MAAMI,SlBjFzE,CACHpB,KAAM,iCkBoFIQ,KAAKQ,MAAMC,WAAWC,uBAAyBT,EAAAC,EAAAC,cAAC4P,EAAD,MAC/C/P,KAAKQ,MAAMC,WAAWS,aAAejB,EAAAC,EAAAC,cAAC6P,EAAD,MACrChQ,KAAKQ,MAAMC,WAAWI,eAAiBZ,EAAAC,EAAAC,cAAC8P,EAAD,MACvCjQ,KAAKQ,MAAMC,WAAWO,WAAaf,EAAAC,EAAAC,cAAC+P,EAAD,MACnClQ,KAAKQ,MAAMC,WAAWQ,WAAahB,EAAAC,EAAAC,cAACgQ,EAAD,cA1EnChP,cAuFHC,cAPS,SAAAC,GACtB,MAAO,CACLZ,WAAYY,EAAMZ,WAClBnB,UAAW+B,EAAM/B,YAIN8B,CAAyB0N,kBCnGlCsB,EAAOC,EAAQ,IAErB,SAASC,EAAmBhR,GACxB,IAAIiR,EAAQ,CACRjP,MAAOhC,EAAUgC,MACjBE,KAAMlC,EAAUkC,KAChB6G,MAAO/I,EAAU+I,MACjB2C,MAAO1L,EAAU0L,MACjBpB,WAAYtK,EAAUsK,WACtB9B,IAAKxI,EAAUwI,KAGnByI,EAAMhP,OAASjC,EAAUiC,OAAOiD,IAAI,SAAAtC,GAAK,OAAIA,EAAM0M,aACnD2B,EAAMvK,UAAY1G,EAAU0G,UAAUxB,IAAI,SAAAwB,GAAS,OAAIA,EAAU4I,aACjEa,aAAaR,QAAQ,YAAaM,KAAKiB,UAAUD,IAOrD,SAASE,EAAenR,EAAWI,GAC/B,IAAIgR,EAAiBvO,OAAAwO,EAAA,EAAAxO,CAAA,GACd7C,EADc,CAEjBI,cAGJgR,EAAkBnP,OAASjC,EAAUiC,OAAOiD,IAAI,SAAAtC,GAAK,OAAIA,EAAM0M,aAC/D8B,EAAkB1K,UAAY1G,EAAU0G,UAAUxB,IAAI,SAAAwB,GAAS,OAAIA,EAAU4I,aAE7EzH,MAAM,wCAAyC,CAC3CC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,OAAQ,OACRqJ,KAAMrB,KAAKiB,UAAUE,KACtBlJ,KAAK,SAAAC,GACJA,EAAIC,OACHF,KAAK,SAAAC,GACFS,QAAQC,IAAIV,KAEfG,MAAM,SAAAC,GACHK,QAAQC,IAAIN,OAGnBD,MAAM,SAAAC,GACHK,QAAQC,IAAIN,KAIpB,IA6IegJ,EANGC,YAAgB,CAC9BxR,UAxImB,WAAsB,IAArB+B,EAAqB1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIoR,EAAWpR,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrCmR,EAAQ7O,OAAAwO,EAAA,EAAAxO,CAAA,GAAOd,GAEnB,OAAO0P,EAAOvR,MACV,IAAK,YAYD,OAXAwR,EAAS1P,MAAQyP,EAAOrM,cACxBsM,EAASzP,OAASwP,EAAOxP,OACzByP,EAAShL,UAAY,GACrBgL,EAASxP,KAAOuP,EAAOvP,KACvBwP,EAAS3I,MAAQ,EACjB2I,EAAShG,MAAQ,EACjBgG,EAASpH,WAAa,EACtBoH,EAASlJ,IAAMsI,IAEfE,EAAmBU,GACnBP,EAAeO,EAAUD,EAAOrR,WACzBsR,EACX,IAAK,YAiBD,OAhBAA,EAASpH,YAAcmH,EAAOnH,WAC9BoH,EAAShG,OAAS+F,EAAO/F,MAEH,KAAnBgG,EAAS3I,MACR2I,EAASpH,WAAa,EAElBoH,EAASpH,WAAajD,EAASG,mBAAmBkK,EAAS3I,MAAM,KACrE2I,EAAS3I,OAAS,EACI,KAAnB2I,EAAS3I,QACR2I,EAASpH,WAAa,GAE1BoH,EAASpH,YAAcjD,EAASG,mBAAmBkK,EAAS3I,MAAM,IAGtEiI,EAAmBU,GACnBP,EAAeO,EAAUD,EAAOrR,WACzBsR,EACX,IAAK,gBAQD,OAPGA,EAAShG,OAAS+F,EAAOzK,OACxB0K,EAASzP,OAAOwP,EAAOhH,YAAc,IAAI9H,EAAM8O,EAAOlC,UACtDmC,EAAShG,OAAS+F,EAAOzK,MAG7BgK,EAAmBU,GACnBP,EAAeO,EAAUD,EAAOrR,WACzBsR,EACX,IAAK,gBAQD,OAPGA,EAAShG,OAAS+F,EAAOzH,KAAKhD,OAC7B0K,EAAShL,UAAUV,KAAKyL,EAAOzH,MAC/B0H,EAAShG,OAAS+F,EAAOzH,KAAKhD,MAGlCgK,EAAmBU,GACnBP,EAAeO,EAAUD,EAAOrR,WACzBsR,EACX,IAAK,iBAMD,OALqB,IAAlBD,EAAOxR,QACN+Q,EAAmBS,EAAOzR,WAG9B0R,EAAWD,EAAOzR,UAEtB,IAAK,kBAaD,OAZA0R,EAAW,CACP1P,MAAO,KACP0J,MAAO,EACP3C,MAAO,EACPuB,WAAY,EACZrI,OAAQ,GACRyE,UAAW,GACXxE,KAAM,GACNsG,IAAK,MAtGjB2H,aAAaP,WAAW,aA0GT8B,EACX,QACI,OAAO3P,IA8DfZ,WA1DoB,WAAsB,IAArBY,EAAqB1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIoR,EAAWpR,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtCmR,EAAW,CACXtQ,uBAAuB,EACvBQ,aAAa,EACbF,WAAW,EACXH,eAAe,EACfiP,kBAAkB,EAClB/G,SAAU1H,EAAM0H,SAGpB,OAAOgI,EAAOvR,MACV,IAAK,0BAED,OADAwR,EAAStQ,uBAAwB,EAC1BsQ,EACX,IAAK,eAED,OADAA,EAAS9P,aAAc,EAChB8P,EACX,IAAK,aAED,OADAA,EAAShQ,WAAY,EACdgQ,EACX,IAAK,aAED,OADAA,EAAS/P,WAAY,EACd+P,EACX,IAAK,iBAED,OADAA,EAASnQ,eAAgB,EAClBmQ,EACX,IAAK,kBAED,OADAA,EAASlB,kBAAmB,EACrBkB,EACX,IAAK,iBAGL,IAAK,YAED,OADAA,EAASnQ,eAAgB,EAClBmQ,EACX,QACI,OAAO3P,IAuBf3B,UAnBiB,WAAsB,IAArB2B,EAAqB1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIoR,EAAWpR,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,OAAOkR,EAAOvR,MACV,IAAK,iBAQD,OAPGuR,EAAOrR,UACN2B,EAAQ0P,EAAOrR,WAGf2B,EAAQ+O,IACRX,aAAaR,QAAQ,YAAa5N,IAE/BA,EACX,QACI,OAAOA,MCnKJ4P,EAvBM,CACjBxQ,WAAY,CACRqP,kBAAkB,EAClBpP,uBAAuB,EACvBQ,aAAa,EACbD,WAAW,EACXD,WAAW,EACXH,eAAe,EACfkI,SAAS,GAEbzJ,UAAW,CACPgC,MAAO,KACP0J,MAAO,EACP3C,MAAO,EACPuB,WAAY,EACZrI,OAAQ,GACRyE,UAAW,GACXxE,KAAM,GACNsG,IAAK,MAETpI,UAAW,MCTTwR,EAAQC,YAAYN,EAAaI,EAAc/E,OAAOkF,8BAAgClF,OAAOkF,gCAEnGC,IAASC,OAAQrR,EAAAC,EAAAC,cAACoR,EAAA,EAAD,CAAUL,MAAOA,GAAOjR,EAAAC,EAAAC,cAACqR,EAAD,OAAqB/E,SAASC,eAAe","file":"static/js/main.9e8798c6.chunk.js","sourcesContent":["let showCharacterCreation = () => {\r\n    return {\r\n        type: \"SHOW_CHARACTER_CREATION\"\r\n    }\r\n}\r\n\r\nlet showCredits = () => {\r\n    return {\r\n        type: \"SHOW_CREDITS\"\r\n    }\r\n}\r\n\r\nlet showArena = () => {\r\n    return {\r\n        type: \"SHOW_ARENA\"\r\n    }\r\n}\r\n\r\nlet showStore = () => {\r\n    return {\r\n        type: \"SHOW_STORE\"\r\n    }\r\n}\r\n\r\nlet showCharacter = () => {\r\n    return {\r\n        type: \"SHOW_CHARACTER\"\r\n    }\r\n}\r\n\r\nlet setClass = (selectedClass, spells, name, accountId) => {\r\n    return {\r\n        type: \"SET_CLASS\",\r\n        selectedClass,\r\n        spells,\r\n        name,\r\n        accountId\r\n    }\r\n}\r\n\r\nlet giveLoot = (experience, coins, accountId) => {\r\n    return {\r\n        type: \"GIVE_LOOT\",\r\n        experience,\r\n        coins,\r\n        accountId\r\n    }\r\n}\r\n\r\nlet upgradeSpell = (spellIndex, cost, newSpell, accountId) => {\r\n    return {\r\n        type: \"UPGRADE_SPELL\",\r\n        spellIndex,\r\n        cost,\r\n        newSpell,\r\n        accountId\r\n    }\r\n}\r\n\r\nlet purchaseItem = (item, accountId) => {\r\n    return {\r\n        type: \"PURCHASE_ITEM\",\r\n        item,\r\n        accountId\r\n    }\r\n}\r\n\r\nlet loadCharacter = (character, cached) => {\r\n    return {\r\n        type: \"LOAD_CHARACTER\",\r\n        character,\r\n        cached\r\n    }\r\n}\r\n\r\nlet resetCharacter = () => {\r\n    return {\r\n        type: \"RESET_CHARACTER\"\r\n    }\r\n}\r\n\r\nlet setAccountId = (accountId = null) => {\r\n    return {\r\n        type: \"SET_ACCOUNT_ID\",\r\n        accountId\r\n    }\r\n}\r\n\r\nexport {\r\n    showCharacterCreation,\r\n    showCredits,\r\n    showArena,\r\n    showStore,\r\n    showCharacter,\r\n    setClass,\r\n    giveLoot,\r\n    upgradeSpell,\r\n    purchaseItem,\r\n    loadCharacter,\r\n    resetCharacter,\r\n    setAccountId\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nimport { showCharacterCreation, showCredits, showArena, showStore, showCharacter } from \"../../actions/actions\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"navigation\">\r\n        <img className=\"logo\" src={\"/images/arena2.png\"} alt=\"\" />\r\n        <ul>\r\n          <li className={ this.props.navigation.showCharacterCreation ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCharacterCreation())}>Characters</button>\r\n          </li>\r\n          <li className={ this.props.navigation.showCharacter ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCharacter())} disabled={this.props.characterClass === null}>My Character</button>\r\n          </li>\r\n          <li className={ this.props.navigation.showArena ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showArena())} disabled={this.props.characterClass === null}>Into The Arena</button>\r\n          </li>\r\n          <li className={ this.props.navigation.showStore ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showStore())} disabled={this.props.characterClass === null}>Store</button>\r\n          </li>\r\n          <li className={ this.props.navigation.showCredits ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCredits())}>Credits</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navigation: state.navigation,\r\n    characterClass: state.character.class\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","const spells = [\r\n    {\r\n        id: 0,\r\n        name: \"Attack\",\r\n        icon: \"icons/spells/attack.png\",\r\n        description: \"Attack your enemy for [d] damage.\",\r\n        secondaryDescription: \"Also restores 10% of your maximum resources.\",\r\n        resourceCost: 0,\r\n        baseDamage: 15,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 2, 3]\r\n    }, {\r\n        id: 1,\r\n        name: \"Heal\",\r\n        icon: \"icons/spells/heal.png\",\r\n        description: \"Cast a heal on yourself, restoring [h] health points.\",\r\n        secondaryDescription: null,\r\n        resourceCost: 15,\r\n        baseDamage: 0,\r\n        baseHealing: 30,\r\n        rank: 1,\r\n        rankModifier: [1, 2, 3.5]\r\n    }, {\r\n        id: 2,\r\n        name: \"Charged Arrow\",\r\n        icon: \"icons/spells/charged_arrow.png\",\r\n        description: \"Launches a charged arrow at your enemy, dealing [d] damage.\",\r\n        secondaryDescription: null,\r\n        resourceCost: 30,\r\n        baseDamage: 35,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.5, 2.5]\r\n    }, {\r\n        id: 3,\r\n        name: \"Piercing Shot\",\r\n        icon: \"icons/spells/piercing_shot.png\",\r\n        description: \"An extremely strong arrow pierces your enemy, instantly dealing [d] damage.\",\r\n        secondaryDescription: \"Has a 20% chance to deal 100% increased damage.\",\r\n        resourceCost: 10,\r\n        baseDamage: 25,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.5, 2.15]\r\n    }, {\r\n        id: 4,\r\n        name: \"Quick Strike\",\r\n        icon: \"icons/spells/quick_strike.png\",\r\n        description: \"A quick attack that deals [d] damage.\",\r\n        secondaryDescription: \"Has a 20% chance to deal 100% increased damage.\",\r\n        resourceCost: 10,\r\n        baseDamage: 20,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 2.1, 3.15]\r\n    }, {\r\n        id: 5,\r\n        name: \"Skull Bash\",\r\n        icon: \"icons/spells/skull_bash.png\",\r\n        description: \"A brutal slam that deals [d] damage.\",\r\n        secondaryDescription: null,\r\n        resourceCost: 35,\r\n        baseDamage: 30,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 2, 2.95]\r\n    }, {\r\n        id: 6,\r\n        name: \"Ambush\",\r\n        icon: \"icons/spells/ambush.png\",\r\n        description: \"Stab your target from behind, dealing [d] damage.\",\r\n        secondaryDescription: \"Has a 20% chance to deal 100% increased damage.\",\r\n        resourceCost: 15,\r\n        baseDamage: 25,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.75, 2.15]\r\n    }, {\r\n        id: 7,\r\n        name: \"Venomous Vial\",\r\n        icon: \"icons/spells/venomous_vial.png\",\r\n        description: \"Throw a vial of poison at your target, dealing [d] damage.\",\r\n        secondaryDescription: null,\r\n        resourceCost: 25,\r\n        baseDamage: 30,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.55, 2.25]\r\n    }, {\r\n        id: 8,\r\n        name: \"Incinerate\",\r\n        icon: \"icons/spells/incinerate.png\",\r\n        description: \"Set your target ablaze, dealing [d] damage.\",\r\n        secondaryDescription: \"Has a 20% chance to deal 100% increased damage.\",\r\n        resourceCost: 20,\r\n        baseDamage: 25,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.55, 2.25]\r\n    }, {\r\n        id: 9,\r\n        name: \"Transfusion\",\r\n        icon: \"icons/spells/transfusion.png\",\r\n        description: \"Fuse your energy with the enemy, dealing [d] damage, and restoring [h] health points to you.\",\r\n        secondaryDescription: null,\r\n        resourceCost: 60,\r\n        baseDamage: 20,\r\n        baseHealing: 20,\r\n        rank: 1,\r\n        rankModifier: [1, 1.55, 2.25]\r\n    }, {\r\n        id: 10,\r\n        name: \"Health Potion\",\r\n        icon: \"icons/spells/health_potion.png\",\r\n        description: \"Drink a health potion, restoring [h] health points.\",\r\n        secondaryDescription: null,\r\n        resourceCost: 0,\r\n        baseDamage: 0,\r\n        baseHealing: 20,\r\n        rank: 1,\r\n        rankModifier: [1, 2.5, 4.5]\r\n    }\r\n];\r\n\r\nexport default spells;","class Spell {\r\n    constructor(spell) {\r\n        this._id = spell.id;\r\n        this._name = spell.name;\r\n        this._icon = spell.icon;\r\n        this._description = spell.description;\r\n        this._secondaryDescription = spell.secondaryDescription;\r\n        this._resourceCost = spell.resourceCost;\r\n        this._baseDamage = spell.baseDamage;\r\n        this._baseHealing = spell.baseHealing;\r\n        this._rank = spell.rank;\r\n        this._rankModifier = spell.rankModifier;\r\n    }\r\n\r\n    get properties() {\r\n        return {\r\n            id: this._id,\r\n            name: this._name,\r\n            icon: this._icon,\r\n            description: this._description,\r\n            secondaryDescription: this._secondaryDescription,\r\n            resourceCost: this._resourceCost,\r\n            baseDamage: this._baseDamage,\r\n            baseHealing: this._baseHealing,\r\n            rank: this._rank,\r\n            rankModifier: [...this._rankModifier]\r\n        };\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get icon() {\r\n        return this._icon;\r\n    }\r\n\r\n    get resourceCost() {\r\n        return this._resourceCost;\r\n    }\r\n\r\n    get rankModifier() {\r\n        return this._rankModifier;\r\n    }\r\n\r\n    get description() {\r\n        let description = this._description;\r\n        description = description.replace(/\\[d\\]/g, `${Math.floor(this.damage*0.9)}-${Math.floor(this.damage*1.1)}`);\r\n        description = description.replace(/\\[h\\]/g, `${Math.floor(this.healing*0.9)}-${Math.floor(this.healing*1.1)}`);\r\n        return description;\r\n    }\r\n\r\n    get secondaryDescription() {\r\n        return this._secondaryDescription;\r\n    }\r\n\r\n    get damage() {\r\n        return Math.floor(this._baseDamage * this.rankModifier[this._rank-1]);\r\n    }\r\n\r\n    get healing() {\r\n        return Math.floor(this._baseHealing * this.rankModifier[this._rank-1]);\r\n    }\r\n\r\n    get rank() {\r\n        return this._rank;\r\n    }\r\n\r\n    set rank(newRank) {\r\n        this._rank = newRank;\r\n    }\r\n}\r\n\r\nexport default Spell;","const classes = [\r\n    {\r\n        id: 0,\r\n        name: \"Warrior\",\r\n        description: \"A warrior is a brutal and tough class, warriors have a high health pool and moderate damage.\",\r\n        icon: \"icons/classes/warrior.png\",\r\n        resourceType: \"Energy\",\r\n        healthModifier: 1.9,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.5,\r\n        healingModifier: 1,\r\n        spells: [0, 4, 5, 10]\r\n    }, {\r\n        id: 1,\r\n        name: \"Archer\",\r\n        description: \"An archer is an agile and fast-paced class, archers have a moderate health pool and damage.\",\r\n        icon: \"icons/classes/archer.png\",\r\n        resourceType: \"Mana\",\r\n        healthModifier: 1.5,\r\n        resourceModifier: 1.3,\r\n        damageModifier: 1.5,\r\n        healingModifier: 1.5,\r\n        spells: [0, 3, 2, 1]\r\n    }, {\r\n        id: 2,\r\n        name: \"Rogue\",\r\n        description: \"A rogue is a silent but deadly class, rogues have a low health pool and high damage.\",\r\n        icon: \"icons/classes/rogue.png\",\r\n        resourceType: \"Energy\",\r\n        healthModifier: 1.3,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.8,\r\n        healingModifier: 1,\r\n        spells: [0, 6, 7, 10]\r\n    }, {\r\n        id: 3,\r\n        name: \"Wizard\",\r\n        description: \"A wizard is an extremely dangerous class, wizards have a very low health pool and extremely high damage.\",\r\n        icon: \"icons/classes/wizard.png\",\r\n        resourceType: \"Mana\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1.8,\r\n        damageModifier: 2,\r\n        healingModifier: 2,\r\n        spells: [0, 8, 9, 1]\r\n    }, \r\n];\r\n\r\nexport default classes;","import React, { Component } from \"react\";\r\nimport \"./newCharacter.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setClass } from \"../../actions/actions\";\r\n\r\nimport spells from \"../../states/spells\";\r\nimport Spell from \"../../classes/spell\";\r\n\r\nimport classes from \"../../states/classes\";\r\n\r\nclass NewCharacter extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedId: 0,\r\n            characterName: \"\",\r\n            nameError: false,\r\n            spells: []\r\n        }\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let spellArray = spells.map(spell => new Spell(spell));\r\n        this.setState({ spells: spellArray });\r\n    }\r\n\r\n    selectClass(selectedClass) {\r\n        let spells = this.getAvailableSpells(selectedClass.spells);\r\n        this.props.dispatch(setClass(selectedClass, spells, this.state.characterName, this.props.accountId));\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        let reg = /^[a-z]+$/i;\r\n        let name = event.target.value;\r\n        if(name.length < 2) {\r\n            this.setState({ nameError: true});\r\n        }\r\n        else if(name.match(reg)) {\r\n            this.setState({ characterName: name, nameError: false });\r\n        }\r\n        else {\r\n            this.setState({ nameError: true });\r\n        }\r\n    }\r\n\r\n    getAvailableSpells(spellList) {\r\n        let availableSpells = [];\r\n\r\n        spellList.forEach(availableSpell => {\r\n            this.state.spells.forEach(spell => {\r\n                if(spell.id === availableSpell) {\r\n                    availableSpells.push(spell);\r\n                }\r\n            });\r\n        });\r\n\r\n        return availableSpells;\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"newCharacter\">\r\n        <h3>ChOOse A Name</h3>\r\n        <div className=\"characterName\">\r\n            <input maxLength=\"16\" type=\"text\" placeholder=\"Name\" onChange={ this.handleNameChange } className={this.state.nameError ? \"error\" : null} />\r\n            { this.state.nameError && <p className=\"nameError\">Your name must be between 2 and 16 characters and contain only letters.</p> }\r\n        </div>\r\n        <h3 className=\"classesHeader\">Select yOUr Class</h3>\r\n        <div className=\"classes\">\r\n            {classes.map(currentClass => (\r\n                <div key={currentClass.id} className={this.state.selectedId === currentClass.id ? \"classframe selected hoverable\" : \"classframe hoverable\"} onClick={() => this.setState({ selectedId: currentClass.id })}>\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + currentClass.icon} alt=\"\" />\r\n                </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"classList\">\r\n            {classes.map(currentClass => (\r\n            <div className={ this.state.selectedId === currentClass.id ? \"class selected\" : \"class\"} key={currentClass.id}>\r\n                <div className=\"header\">\r\n                <div className=\"classframe\">\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + currentClass.icon} alt=\"\" />\r\n                </div>\r\n                    <h3>{currentClass.name}</h3>\r\n                </div>\r\n                <p className=\"description\">{currentClass.description}</p>\r\n                <h4>Spells</h4>\r\n                <div className=\"spells\">\r\n                {this.getAvailableSpells(currentClass.spells).map(spell => (\r\n                    <div key={spell.id} className=\"spell\">\r\n                        <div className=\"spellframe\">\r\n                            <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                            <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                            <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                            <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"spellDescription\">\r\n                            <div>\r\n                                <div>\r\n                                    <p className=\"spellName\">{spell.name}</p>\r\n                                    { spell.resourceCost !== 0 && \r\n                                        <p className=\"resourceCost\">{spell.resourceCost} {currentClass.resourceType.toLowerCase()}</p>\r\n                                    }\r\n                                </div>\r\n                                <p>Rank {spell.rank}</p>\r\n                            </div>\r\n                            <p>{spell.description}</p>\r\n                            {spell.secondaryDescription && <p className=\"secondaryDescription\">{spell.secondaryDescription}</p>}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                <div className=\"selectBtnContainer\">\r\n                    <button className=\"selectBtn\" onClick={() => this.selectClass(currentClass)} disabled={(this.state.nameError || this.state.characterName.length < 2)}></button>\r\n                    {(this.state.nameError || this.state.characterName.length < 2) && <p className=\"nameError\">You must choose a valid name to continue.</p>}\r\n                </div>\r\n            </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    accountId: state.accountId\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NewCharacter);\r\n","class Equipment {\r\n    constructor(equipment) {\r\n        this._id = equipment.id;\r\n        this._name = equipment.name;\r\n        this._icon = equipment.icon;\r\n        this._description = equipment.description;\r\n        this._healthModifier = equipment.healthModifier;\r\n        this._resourceModifier = equipment.resourceModifier;\r\n        this._damageModifier = equipment.damageModifier;\r\n        this._healingModifier = equipment.healingModifier;\r\n        this._cost = equipment.cost;\r\n        this._requiredLevel = equipment.requiredLevel;\r\n        this._availableClasses = equipment.availableClasses;\r\n    }\r\n\r\n    get properties() {\r\n        return {\r\n            id: this._id,\r\n            name: this._name,\r\n            icon: this._icon,\r\n            description: this._description,\r\n            healthModifier: this._healthModifier,\r\n            resourceModifier: this._resourceModifier,\r\n            damageModifier: this._damageModifier,\r\n            healingModifier: this._healingModifier,\r\n            cost: this._cost,\r\n            requiredLevel: this._requiredLevel,\r\n            availableClasses: [...this._availableClasses]\r\n        };\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get icon() {\r\n        return this._icon;\r\n    }\r\n\r\n    get description() {\r\n        let description = this._description;\r\n        description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n        description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n        description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n        description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n        return description;\r\n    }\r\n\r\n    get healthModifier() {\r\n        return this._healthModifier;\r\n    }\r\n\r\n    get resourceModifier() {\r\n        return this._resourceModifier;\r\n    }\r\n\r\n    get damageModifier() {\r\n        return this._damageModifier;\r\n    }\r\n\r\n    get healingModifier() {\r\n        return this._healingModifier;\r\n    }\r\n\r\n    get cost() {\r\n        return this._cost;\r\n    }\r\n\r\n    get requiredLevel() {\r\n        return this._requiredLevel;\r\n    }\r\n\r\n    get availableClasses() {\r\n        return this._availableClasses; \r\n    }\r\n}\r\n\r\nexport default Equipment;","let settings = {\r\n    baseHealthPerLevel: [100, 120, 200, 250, 300, 400, 475, 550, 700, 900, 1200, 1350, 1500, 1650, 1900],\r\n    baseResourcesPerLevel: [200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330, 350],\r\n    requiredExperience: [100, 200, 400, 700, 1000, 1400, 1900, 2500, 2900, 3700, 4600, 5500, 7250, 9000]\r\n};\r\n\r\nexport default settings;","import React, { Component } from \"react\";\r\nimport \"./loadCharacter.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loadCharacter, resetCharacter } from \"../../actions/actions\";\r\n\r\nimport Spell from \"../../classes/spell\";\r\nimport Equipment from \"../../classes/equipment\";\r\n\r\nimport settings from \"../../states/settings\";\r\n\r\nclass LoadCharacter extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            characters: [],\r\n            loadingFinished: false,\r\n            errorOccured: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:4000/characters/get/\" + this.props.accountId, {\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"get\"\r\n        })\r\n        .then(res => {\r\n            res.json().then(characters => {\r\n                characters = characters.map(character => {\r\n                    character.spells = character.spells.map(spell => {\r\n                        return new Spell(spell);\r\n                    });\r\n                    character.equipment = character.equipment.map(equipment => {\r\n                        return new Equipment(equipment);\r\n                    });\r\n                    return character;\r\n                });\r\n\r\n                if(characters.length > 0) {\r\n                    this.setState({ characters, loadingFinished: true, errorOccured: false });\r\n                }\r\n                else {\r\n                    this.setState({ status: \"No characters found...\", loadingFinished: true, errorOccured: false });\r\n                }\r\n            });\r\n        })\r\n        .catch(err => {\r\n            this.setState({ errorOccured: true });\r\n        });\r\n    }\r\n\r\n    deleteFromDatabase(uid, index) {\r\n        fetch(\"http://localhost:4000/characters/delete/\" + uid, {\r\n            method: \"delete\"\r\n        })\r\n        .then(res => {\r\n            res.json()\r\n            .then(res => {\r\n                if(uid === this.props.character.uid) {\r\n                    this.props.dispatch(resetCharacter());\r\n                }\r\n                else {\r\n                    let newCharacters = [...this.state.characters];\r\n                    newCharacters.splice(index, 1);\r\n                    this.setState({ characters: newCharacters });\r\n                }\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"loadCharacter\">\r\n                {!this.state.loadingFinished && !this.state.errorOccured && <p>Loading characters...</p>}\r\n                {this.state.errorOccured && <p>An error occured while loading characters...</p>}\r\n                {this.state.status && <p>{this.state.status}</p>}\r\n                {this.state.characters.length > 0 && \r\n                    <div className=\"characters\">\r\n                        {this.state.characters.map((character, index) => {\r\n                            return (\r\n                                <div className=\"character\" key={character.uid}>\r\n                                    <div>\r\n                                        <div className=\"classframe\">\r\n                                            <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                                            <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                                            <img className=\"frame_icon\" src={\"/images/\" + character.class.icon} alt=\"\" />\r\n                                        </div>\r\n                                        <div className=\"name\">\r\n                                            <h4>{character.name}</h4>\r\n                                            <p>Level {character.level} <span>{character.class.name}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"stats\">\r\n                                            <div>\r\n                                                <h5>Health</h5>\r\n                                                <p>{Math.round(character.equipment.reduce((previous, current) => previous * current.healthModifier, 1) * character.class.healthModifier * settings.baseHealthPerLevel[character.level-1])}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <h5>{character.class.resourceType}</h5>\r\n                                                <p>{Math.round(character.equipment.reduce((previous, current) => previous * current.resourceModifier, 1) * character.class.resourceModifier * settings.baseResourcesPerLevel[character.level-1])}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <h5>Damage</h5>\r\n                                                <p>{(character.equipment.reduce((previous, current) => previous * current.damageModifier, 1) * character.class.damageModifier).toFixed(2)}x</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <h5>Healing</h5>\r\n                                                <p>{(character.equipment.reduce((previous, current) => previous * current.healingModifier, 1) * character.class.healingModifier).toFixed(2)}x</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"spells\">\r\n                                            {character.spells.map(spell => {\r\n                                                return (\r\n                                                    <div key={spell.id}>\r\n                                                        <h5>{spell.name}</h5>\r\n                                                        <div className=\"spellRanks\">\r\n                                                            {spell.rankModifier.map((modifier, index) => <div key={index} className={spell.rank > index ? \"learned\": \"notLearned\"}></div>)}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"actionButtons\">\r\n                                        <button className=\"load\" onClick={() => this.props.dispatch(loadCharacter(character))}></button>\r\n                                        <button className=\"delete\" onClick={() => this.deleteFromDatabase(character.uid, index)}></button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    accountId: state.accountId\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoadCharacter);\r\n","import React, { Component } from \"react\";\r\nimport \"./characterCreation.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NewCharacter from \"./newCharacter\";\r\nimport LoadCharacter from \"./loadCharacter\";\r\n\r\nclass CharacterCreation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            view: \"\",\r\n            refresh: this.props.refresh\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        // Forcing update when clicking \"New Character\" in navigation to refresh and set view to 0 again\r\n        if(nextProps.refresh !== this.props.refresh) {\r\n            this.setState({ view: \"\" });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"characterCreation\">\r\n                {this.state.view === \"\" && \r\n                <div className=\"select\">\r\n                <div onClick={() => this.setState({ view: \"CREATE\" })}><h3>Create New</h3></div>\r\n                <div className=\"or\"><h1>OR</h1></div>\r\n                <div onClick={() => this.setState({ view: \"SAVED\" })}><h3>Load Existing</h3></div>\r\n                </div>\r\n                }\r\n                {this.state.view === \"CREATE\" && <NewCharacter />}\r\n                {this.state.view === \"SAVED\" && <LoadCharacter />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    classes: state.classes,\r\n    spells: state.spells,\r\n    refresh: state.navigation.refresh,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CharacterCreation);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./credits.css\";\r\n\r\nclass Credits extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"credits\">\r\n        <div>\r\n        <h2>Special thanks to</h2>\r\n        <p>Delapouite (<a href=\"https://delapouite.com\">https://delapouite.com</a>), Wjb (<a href=\"http://wjbstories.blogspot.com\">http://wjbstories.blogspot.com</a>) \r\n        and Lorc (<a href=\"http://lorcblog.blogspot.com\">http://lorcblog.blogspot.com</a>) from <a href=\"https://game-icons.net\">https://game-icons.net</a> for the icons</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Credits;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./character.css\";\r\n\r\nimport settings from \"../../states/settings\";\r\n\r\nclass Character extends Component {\r\n  render() {\r\n    return (\r\n        <div id=\"character\">\r\n            <div className=\"class\">\r\n                <h3>{this.props.character.name}</h3>\r\n                <div className=\"classframe\">\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + this.props.character.class.icon} alt=\"\" />\r\n                </div>\r\n                <h3>Level {this.props.character.level}</h3>\r\n            </div>\r\n            <h4 className=\"className\">{this.props.character.class.name}</h4>\r\n            <div className=\"stats\">\r\n                <div>\r\n                    <h5>Health</h5>\r\n                    <p>{Math.round(this.props.character.equipment.reduce((previous, current) => previous * current.healthModifier, 1) * this.props.character.class.healthModifier * settings.baseHealthPerLevel[this.props.character.level-1])}</p>\r\n                </div>\r\n                <div>\r\n                    <h5>{this.props.character.class.resourceType}</h5>\r\n                    <p>{Math.round(this.props.character.equipment.reduce((previous, current) => previous * current.resourceModifier, 1) * this.props.character.class.resourceModifier * settings.baseResourcesPerLevel[this.props.character.level-1])}</p>\r\n                </div>\r\n                <div>\r\n                    <h5>Damage</h5>\r\n                    <p>{(this.props.character.equipment.reduce((previous, current) => previous * current.damageModifier, 1) * this.props.character.class.damageModifier).toFixed(2)}x</p>\r\n                </div>\r\n                <div>\r\n                    <h5>Healing</h5>\r\n                    <p>{(this.props.character.equipment.reduce((previous, current) => previous * current.healingModifier, 1) * this.props.character.class.healingModifier).toFixed(2)}x</p>\r\n                </div>\r\n            </div>\r\n            <h4 className=\"spellsHeader\">Spells</h4>\r\n            <div className=\"spells\">{this.props.character.spells.map(spell => (\r\n                    <div key={spell.id} className=\"spell\">\r\n                        <div className=\"spellframe\">\r\n                            <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                            <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                            <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                            <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"spellDescription\">\r\n                            <div>\r\n                                <div>\r\n                                    <p className=\"spellName\">{spell.name}</p>\r\n                                    { spell.resourceCost !== 0 && <p className=\"resourceCost\">{spell.resourceCost} {this.props.character.class.resourceType.toLowerCase()}</p>}\r\n                                </div>\r\n                                <p>Rank {spell.rank}</p>\r\n                            </div>\r\n                            <p>{spell.description}</p>\r\n                            {spell.secondaryDescription && <p className=\"secondaryDescription\">{spell.secondaryDescription}</p>}\r\n                        </div>\r\n                        <div className=\"spellRanks\">\r\n                            {spell.rankModifier.map((modifier, index) => <div key={index} className={spell.rank > index ? \"learned\": \"notLearned\"}></div>)}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <h4 className=\"equipmentHeader\">Equipment</h4>\r\n            <div className=\"equipment\">\r\n                {this.props.character.equipment.length === 0 \r\n                    ? <p>You have not purchased any equipment.</p> \r\n                    : this.props.character.equipment.map(item => (\r\n                        <div key={item.id} className=\"item\">\r\n                            <div className=\"header\">\r\n                                <div className=\"spellframe\">\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + item.icon} alt=\"\" />\r\n                                </div>\r\n                                <h4>{item.name}</h4>\r\n                            </div>\r\n                            <p className=\"description\">{item.description}</p>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    accountId: state.accountId\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Character);\r\n","class Player {\r\n    constructor(data, baseHealthPerLevel, baseResourcesPerLevel, experienceToNextLevel) {\r\n        this.maxHealth = baseHealthPerLevel[data.level-1] * data.class.healthModifier;\r\n        this.maxResources = baseResourcesPerLevel[data.level-1] * data.class.resourceModifier;\r\n        this.damageModifier = data.class.damageModifier;\r\n        this.healingModifier = data.class.healingModifier;\r\n        this.icon = data.class.icon;\r\n        this.name = data.name;\r\n        this.spells = data.spells;\r\n        this.equipment = data.equipment;\r\n        this.resourceType = data.class.resourceType;\r\n        this.className = data.class.name;\r\n        this.experience = data.experience;\r\n        this.experienceToNextLevel = experienceToNextLevel;\r\n        this.level = data.level;\r\n\r\n        data.equipment.forEach(item => {\r\n            this.damageModifier *= item.damageModifier;\r\n            this.healingModifier *= item.healingModifier;\r\n            this.maxHealth *= item.healthModifier;\r\n            this.maxResources *= item.resourceModifier;\r\n        });\r\n\r\n        this.currentHealth = this.maxHealth;\r\n        this.currentResources = this.maxResources;\r\n    }\r\n\r\n    attack(spellIndex) {\r\n        let spell = this.spells[spellIndex];\r\n        let randomizer = (Math.floor(Math.random() * 21) + 90)/100;\r\n\r\n        if(this.currentResources >= spell.resourceCost) {\r\n            this.currentResources -= spell.resourceCost;\r\n            \r\n            let damage = Math.floor(spell.damage * this.damageModifier * randomizer);\r\n            let healing = Math.floor(spell.healing * this.healingModifier * randomizer);\r\n            let crit = false;\r\n\r\n            if(spellIndex === 0) {\r\n                this.receiveResources(this.maxResources*0.1);\r\n            }\r\n            else if(spellIndex === 1) {\r\n                // Secondary attack has a 10% chance to critically hit for 100% additional damage.\r\n                let chance = Math.random();\r\n                if(chance >= 0 && chance <= 0.2) {\r\n                    damage *= 2;\r\n                    crit = true;\r\n                }\r\n            }\r\n            return [damage, healing, crit];\r\n        }\r\n        return [0, 0];\r\n    }\r\n\r\n    receiveAttack(damage) {\r\n        if(this.currentHealth - damage <= 0) {\r\n            this.currentHealth = 0;\r\n        } \r\n        else {\r\n            this.currentHealth -= damage;\r\n        }\r\n    }\r\n\r\n    receiveHeal(healing) {\r\n        if(this.currentHealth + healing >= this.maxHealth) {\r\n            this.currentHealth = this.maxHealth;\r\n        }\r\n        else {\r\n            this.currentHealth += healing;\r\n        }\r\n    }\r\n\r\n    receiveResources(resources) {\r\n        if(this.currentResources + resources >= this.maxResources) {\r\n            this.currentResources = this.maxResources;\r\n        }\r\n        else {\r\n            this.currentResources += resources;\r\n        }\r\n    }\r\n\r\n    get getMaxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get getRemainingHealth() {\r\n        return this.currentHealth;\r\n    }\r\n\r\n    get getRemainingHealthPercentage() {\r\n        return (this.currentHealth / this.maxHealth) * 100;\r\n    }\r\n\r\n    get getMaxResources() {\r\n        return this.maxResources;\r\n    }\r\n\r\n    get getRemainingResources() {\r\n        return this.currentResources;\r\n    }\r\n\r\n    get getRemainingResourcesPercentage() {\r\n        return (this.currentResources / this.maxResources) * 100;\r\n    }\r\n\r\n    get getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    get getIcon() {\r\n        return this.icon;\r\n    }\r\n\r\n    get getResourceType() {\r\n        return this.resourceType;\r\n    }\r\n\r\n    get getClass() {\r\n        return this.className;\r\n    }\r\n\r\n    get getExperience() {\r\n        return this.experience;\r\n    }\r\n\r\n    get getExperienceToNextLevel() {\r\n        return this.experienceToNextLevel;\r\n    }\r\n\r\n    get getSpells() {\r\n        return this.spells;\r\n    }\r\n}\r\n\r\nexport default Player;","class Enemy {\r\n    constructor(data, baseHealthPerLevel) {\r\n        this.maxHealth = baseHealthPerLevel[data.level-1] * data.healthModifier;\r\n        this.currentHealth = this.maxHealth;\r\n        this.damageModifier = data.damageModifier;\r\n        this.icon = data.icon;\r\n        this.name = data.name;\r\n        this.level = data.level;\r\n    }\r\n\r\n    attack() {\r\n        let damage = Math.floor(50 * this.damageModifier * (Math.floor(Math.random() * 21) + 90) / 100);\r\n        return [damage, 0];\r\n    }\r\n\r\n    receiveAttack(damage) {\r\n        if(this.currentHealth - damage <= 0) {\r\n            this.currentHealth = 0;\r\n        } \r\n        else {\r\n            this.currentHealth -= damage;\r\n        }\r\n    }\r\n\r\n    get getMaxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get getRemainingHealth() {\r\n        return this.currentHealth;\r\n    }\r\n\r\n    get getRemainingHealthPercentage() {\r\n        return (this.currentHealth / this.maxHealth) * 100;\r\n    }\r\n\r\n    get getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    get getIcon() {\r\n        return this.icon;\r\n    }\r\n}\r\n\r\nexport default Enemy;","const enemies = [\r\n    {\r\n        id: 0,\r\n        name: \"Evil Imp\",\r\n        icon: \"icons/enemies/evil_imp.png\",\r\n        level: 1,\r\n        healthModifier: 1,\r\n        damageModifier: 1\r\n    }, {\r\n        id: 1,\r\n        name: \"Twin Hydras\",\r\n        icon: \"icons/enemies/twin_hydras.png\",\r\n        level: 2,\r\n        healthModifier: 1.25,\r\n        damageModifier: 0.85\r\n    },{\r\n        id: 2,\r\n        name: \"Gnarly Goblin\",\r\n        icon: \"icons/enemies/gnarly_goblin.png\",\r\n        level: 4,\r\n        healthModifier: 1.5,\r\n        damageModifier: 0.7\r\n    }, {\r\n        id: 3,\r\n        name: \"Spark Spirit\",\r\n        icon: \"icons/enemies/spark_spirit.png\",\r\n        level: 6,\r\n        healthModifier: 1,\r\n        damageModifier: 1.7\r\n    }, {\r\n        id: 4,\r\n        name: \"Greater Demon\",\r\n        icon: \"icons/enemies/greater_demon.png\",\r\n        level: 8,\r\n        healthModifier: 2.1,\r\n        damageModifier: 1.9\r\n    }, {\r\n        id: 5,\r\n        name: \"The Beast\",\r\n        icon: \"icons/enemies/the_beast.png\",\r\n        level: 10,\r\n        healthModifier: 2.5,\r\n        damageModifier: 3\r\n    }\r\n];\r\n\r\nexport default enemies;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Player from \"../../classes/player\";\r\nimport Enemy from \"../../classes/enemy\";\r\n\r\nimport enemies from \"../../states/enemies\";\r\nimport settings from \"../../states/settings\";\r\n\r\nimport \"./arena.css\";\r\nimport { giveLoot } from \"../../actions/actions\";\r\n\r\nclass Arena extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            arenaLevel: 1,\r\n            playerTurn: true,\r\n            latestAction: \"Your Venomous Vial hit Enemy for 40 damage.\",\r\n            showLatestAction: false,\r\n            player: null,\r\n            enemy: null,\r\n            status: \"WAITING\", // WINNER, LOSER, INPROGRESS, WAITING\r\n            loot: {\r\n                experience: 0,\r\n                coins: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    startArena() {\r\n        let enemy = new Enemy(enemies[this.state.arenaLevel-1], settings.baseHealthPerLevel);\r\n        let player = new Player(this.props.character, settings.baseHealthPerLevel, \r\n            settings.baseResourcesPerLevel, settings.requiredExperience[this.props.character.level-1]);\r\n        this.setState({ enemy, player}, () => {\r\n            this.addSpellEventListeners();\r\n            this.setState({ status: \"INPROGRESS\" });\r\n        });\r\n    }\r\n\r\n    checkForWinner() {\r\n        if(this.state.enemy.getRemainingHealth <= 0) {\r\n            this.distributeLoot();\r\n            return true;\r\n        }\r\n        else if(this.state.player.getRemainingHealth <= 0) {\r\n            this.setState({ status: \"LOSER\" });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    distributeLoot() {\r\n        if(this.state.loot.experience === 0 && this.state.loot.coins === 0) { \r\n            let experience = Math.floor(this.state.enemy.getLevel * 50 * ((Math.floor(Math.random() * 50) + 75) / 100));\r\n            let coins = Math.floor(this.state.enemy.getLevel * 15 * ((Math.floor(Math.random() * 50) + 75) / 100));\r\n            this.setState({ loot: { experience, coins }, status: \"WINNER\" }, () => {\r\n                this.props.dispatch(giveLoot(experience, coins, this.props.accountId));\r\n            });\r\n        }\r\n    }\r\n\r\n    resetArena() {\r\n        this.setState({ playerTurn: true, showLatestAction: false, arenaLevel: 1 }, () => {\r\n            this.startArena();\r\n        });\r\n    }\r\n\r\n    startNextLevel() {\r\n        let nextLevel = this.state.arenaLevel + 1;\r\n        this.setState({ playerTurn: true, showLatestAction: false, arenaLevel: nextLevel, loot: { experience: 0, coins: 0} }, () => {\r\n            this.startArena();\r\n        });\r\n    }\r\n\r\n    handlePlayerAttack(index) {\r\n        if(this.checkForWinner()) {\r\n            return;\r\n        }\r\n        else if(this.state.status === \"INPROGRESS\") {\r\n            if(!this.state.playerTurn) {\r\n                return\r\n            }\r\n\r\n            let values = this.state.player.attack(index);\r\n            let damage = values[0];\r\n            let healing = values[1];\r\n            let crit = values[2];\r\n            let actionText;\r\n\r\n            if(damage > 0 && healing > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} hit ${this.state.enemy.getName} for ${damage} damage and restored \r\n                ${healing} health points to you`;\r\n            }\r\n            else if(damage > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} ${crit ? \"critically\" : \"\"} hit ${this.state.enemy.getName} for ${damage} damage`;\r\n            }\r\n            else if(healing > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} healed you ${healing} health points`;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n\r\n            this.setState({ playerTurn: false });\r\n            this.state.enemy.receiveAttack(damage);\r\n            this.state.player.receiveHeal(healing);\r\n\r\n            this.setState({ showLatestAction: true, latestAction: actionText });\r\n            window.setTimeout(() => {\r\n                this.setState({ showLatestAction: false });\r\n                this.handleEnemyAttack();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    handleEnemyAttack() {\r\n        if(this.checkForWinner()) {\r\n            return;\r\n        }\r\n        else if(this.state.status === \"INPROGRESS\") {\r\n            let damage = this.state.enemy.attack()[0];\r\n            let actionText = `${this.state.enemy.getName} hit you for ${damage} damage`;\r\n\r\n            this.state.player.receiveAttack(damage);\r\n\r\n            this.setState({ showLatestAction: true, latestAction: actionText });\r\n            window.setTimeout(() => {\r\n                this.setState({ showLatestAction: false, playerTurn: true });\r\n                this.checkForWinner();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    addSpellEventListeners() {\r\n        window.addEventListener(\"keydown\", event => {\r\n            let container = document.getElementById(\"spells\"); \r\n\r\n            if(event.key === \"1\") {\r\n                let spell = container.children[0].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"2\") {\r\n                let spell = container.children[1].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"3\") {\r\n                let spell = container.children[2].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"4\") {\r\n                let spell = container.children[3].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"keyup\", event => {\r\n            let container = document.getElementById(\"spells\");\r\n\r\n            if(event.key === \"1\") {\r\n                let spell = container.children[0].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(0);\r\n            } else if(event.key === \"2\") {\r\n                let spell = container.children[1].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(1);\r\n            } else if(event.key === \"3\") {\r\n                let spell = container.children[2].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(2);\r\n            } else if(event.key === \"4\") {\r\n                let spell = container.children[3].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(3);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"arena\">\r\n                { this.state.status === \"WAITING\" && \r\n                    <div className=\"introduction\">\r\n                        <h2>The Arena</h2>\r\n                        <p>Welcome, {this.props.character.name}. \r\n                        <br/>\r\n                        The arena consists of 6 stages. For each stage you complete you will be facing a tougher enemy. \r\n                        Should an enemy prove too difficult of a challenge, spell and armor upgrades can be bought in the shop.\r\n                        Beat the 6th and final enemy to prove your worth.\r\n                        <br/>\r\n                        <br/>\r\n                        Whenever you're ready, hit the button below to fight your first enemy.\r\n                        </p>\r\n                        <div>\r\n                            <button className=\"startBtn\" onClick={() => this.startArena()}></button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                { this.state.status !== \"WAITING\" && <React.Fragment>\r\n                    <div className=\"enemyFrame\">\r\n                        <div className=\"enemy\">\r\n                            <div className=\"enemyProfile\">\r\n                                <div className=\"enemyUnitFrame\">\r\n                                    <img className=\"frame\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + this.state.enemy.getIcon} alt=\"\" />\r\n                                </div>\r\n                                <h3 className=\"enemyName\">{this.state.enemy.getName}</h3>\r\n                            </div>\r\n                            <div className=\"levelIndicatorFrame\">\r\n                                <img className=\"container\" src={\"/images/level_indicator_container.png\"} alt=\"\" />\r\n                                {[0, 1, 2, 3, 4,5 ].map(n => {\r\n                                    let left = (n * 32) + 3 + \"px\";\r\n                                    let indicatorStyle = {\r\n                                        left \r\n                                    }\r\n                                    return (<img key={n} style={indicatorStyle} className={this.state.arenaLevel > n ? \"indicator\" : \"indicator hidden\"} src={\"/images/level_indicator.png\"} alt=\"\" />)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <p className=\"level\">Level {this.state.enemy.getLevel}</p>\r\n                            <p className=\"health\">{Math.floor(this.state.enemy.getRemainingHealth)}/{Math.floor(this.state.enemy.getMaxHealth)} HP</p>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.enemy.getRemainingHealthPercentage * 4.94) + \"px\"}} className=\"frame_filler_health\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"statusFrame\">\r\n                        {!this.state.showLatestAction && this.state.status === \"INPROGRESS\" && <h3>It Is Your Turn!</h3>}\r\n                        {this.state.showLatestAction && this.state.status === \"INPROGRESS\" && <h4>{this.state.latestAction}</h4>}\r\n                        {this.state.status === \"WINNER\" && \r\n                            <div>\r\n                                <h2>Victory</h2>\r\n                                <div className=\"loot\">\r\n                                    <h5>Rewards</h5>\r\n                                    <p className=\"expGain\">+{this.state.loot.experience} experience</p>\r\n                                    <p className=\"coinGain\">+{this.state.loot.coins} <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/></p>\r\n                                </div>\r\n                                {this.state.arenaLevel !== 6 && <button className=\"continueBtn\" onClick={() => this.startNextLevel()}></button>}\r\n                                {this.state.arenaLevel === 6 && <h3>Congratulations hero, You beat the final enemy!</h3>}\r\n                            </div>\r\n                        }\r\n                        {this.state.status === \"LOSER\" && \r\n                            <div>\r\n                                <h2>Defeat</h2>\r\n                                <button className=\"restartBtn\" onClick={() => this.resetArena()}></button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"playerFrame\">\r\n                        <div id=\"spells\">\r\n                            { this.state.player.getSpells.map( (spell, index) =>\r\n                            <div key={spell.id} className=\"spell\" onClick={() => this.handlePlayerAttack(index)}>\r\n                                <div className={this.state.playerTurn && (this.state.player.getRemainingResources >= spell.resourceCost) ? \"spellframe clickable\" : \"spellframe disabled\"}>\r\n                                    <p className=\"bind\">{index+1}</p>\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"spellDescription\">\r\n                                    <div>\r\n                                        <div>\r\n                                            <p className=\"spellName\">{spell.name}</p>\r\n                                            { spell.resourceCost !== 0 && <p className={spell.resourceCost > this.state.player.getRemainingResources ? \"resourceCost lowMana\" : \"resourceCost\"}>{spell.resourceCost} {this.state.player.getResourceType}</p>}\r\n                                        </div>\r\n                                        <p>Rank {spell.rank}</p>\r\n                                    </div>\r\n                                    <p>{spell.description}</p>\r\n                                    {spell.secondaryDescription && <p className=\"secondaryDescription\">{spell.secondaryDescription}</p>}\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <div className=\"playerInfo\">\r\n                                <div>\r\n                                    <h4>{this.state.player.getName}</h4>\r\n                                    <div className=\"playerCoins\">\r\n                                        <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/>\r\n                                        <p>{this.props.character.coins}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p>Level {this.state.player.getLevel} <span>{this.state.player.getClass}</span></p>\r\n                                    <p>{Math.floor(this.state.player.getRemainingHealth)}/{Math.floor(this.state.player.getMaxHealth)} HP</p>\r\n                                    <p>{Math.floor(this.state.player.getRemainingResources)}/{Math.floor(this.state.player.getMaxResources)} {this.state.player.getResourceType}</p>\r\n                                </div>\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.player.getRemainingHealthPercentage * 4.94) + \"px\"}} className=\"frame_filler_health\"></div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.player.getRemainingResourcesPercentage * 4.94) + \"px\"}} className={\"frame_filler_\" + this.state.player.getResourceType.toLowerCase()}></div>\r\n                        </div>\r\n                        {/* <div className=\"resourcebar\">\r\n                            <div className=\"playerExp\">\r\n                                {this.state.player.getLevel === 15 && <p>Max Level</p>}\r\n                                {this.state.player.getLevel < 15 && <p>{this.state.player.getExperience}/{this.state.player.getExperienceToNextLevel} Experience</p>}\r\n                                {this.state.player.getLevel < 15 && <p>{this.state.player.getExperienceToNextLevel - this.state.player.getExperience} exp to level {this.state.player.getLevel + 1}</p>}\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            {this.state.player.getLevel < 15 && <div style={{width: ((this.state.player.getExperience/settings.requiredExperience[this.state.player.getLevel-1]) * 494) + \"px\"}} className=\"frame_filler_experience\"></div>}\r\n                        </div> */}\r\n                        <div className=\"resourcebar\">\r\n                            <div className=\"playerExp\">\r\n                                {this.props.character.level === 15 && <p>Max Level</p>}\r\n                                {this.props.character.level < 15 && <p>{this.props.character.experience}/{settings.requiredExperience[this.props.character.level-1]} Experience</p>}\r\n                                {this.props.character.level < 15 && <p>{settings.requiredExperience[this.props.character.level-1] - this.props.character.experience} exp to level {this.props.character.level + 1}</p>}\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            {this.props.character.level < 15 && <div style={{width: ((this.props.character.experience/settings.requiredExperience[this.props.character.level-1]) * 494) + \"px\"}} className=\"frame_filler_experience\"></div>}\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    accountId: state.accountId,\r\n    character: state.character\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Arena);\r\n","const equipment = [\r\n    {\r\n        id: 0,\r\n        name: \"Scroll Of Knowledge\",\r\n        description: \"Increases your max resources by [r]%.\",\r\n        icon: \"icons/equipment/scroll_of_knowledge.png\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1.2,\r\n        damageModifier: 1,\r\n        healingModifier: 1,\r\n        cost: 100,\r\n        requiredLevel: 3,\r\n        availableClasses: [3]\r\n    }, {\r\n        id: 1,\r\n        name: \"Robe of Wizardry\",\r\n        description: \"Increases your damage by [d]%, healing by [h]% and health by [hp]%.\",\r\n        icon: \"icons/equipment/robe_of_wizardry.png\",\r\n        healthModifier: 1.15,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.175,\r\n        healingModifier: 1.15,\r\n        cost: 300,\r\n        requiredLevel: 4,\r\n        availableClasses: [1, 3]\r\n    }, {\r\n        id: 2,\r\n        name: \"Hat of Wizardry\",\r\n        description: \"Increases your damage and healing by [d]%.\",\r\n        icon: \"icons/equipment/hat_of_wizardry.png\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.25,\r\n        healingModifier: 1.25,\r\n        cost: 250,\r\n        requiredLevel: 2,\r\n        availableClasses: [1, 3]\r\n    }, {\r\n        id: 3,\r\n        name: \"Azariah's Chain of Vitality\",\r\n        description: \"Increases your health by [hp]%.\",\r\n        icon: \"icons/equipment/azariahs_chain_of_vitality.png\",\r\n        healthModifier: 1.35,\r\n        resourceModifier: 1,\r\n        damageModifier: 1,\r\n        healingModifier: 1,\r\n        cost: 200,\r\n        requiredLevel: 4,\r\n        availableClasses: [0, 1, 2]\r\n    }, {\r\n        id: 4,\r\n        name: \"Bulwark\",\r\n        description: \"Increases your health by [hp]%.\",\r\n        icon: \"icons/equipment/bulwark.png\",\r\n        healthModifier: 1.2,\r\n        resourceModifier: 1,\r\n        damageModifier: 1,\r\n        healingModifier: 1,\r\n        cost: 100,\r\n        requiredLevel: 2,\r\n        availableClasses: [0, 2]\r\n    }, {\r\n        id: 5,\r\n        name: \"Chainmail of Endurance\",\r\n        description: \"Increases your damage by [d]% and health by [hp]%.\",\r\n        icon: \"icons/equipment/chainmail_of_endurance.png\",\r\n        healthModifier: 1.5,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.25,\r\n        healingModifier: 1,\r\n        cost: 400,\r\n        requiredLevel: 6,\r\n        availableClasses: [0, 2]\r\n    }, {\r\n        id: 6,\r\n        name: \"Elven Headguard\",\r\n        description: \"Increases your damage, healing and health by [d]%.\",\r\n        icon: \"icons/equipment/elven_headguard.png\",\r\n        healthModifier: 1.25,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.25,\r\n        healingModifier: 1.25,\r\n        cost: 500,\r\n        requiredLevel: 8,\r\n        availableClasses: [1, 2]\r\n    }, {\r\n        id: 7,\r\n        name: \"Jeweled Chalice\",\r\n        description: \"Increases your damage, healing and health by [d]%.\",\r\n        icon: \"icons/equipment/jeweled_chalice.png\",\r\n        healthModifier: 1.25,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.25,\r\n        healingModifier: 1.25,\r\n        cost: 500,\r\n        requiredLevel: 8,\r\n        availableClasses: [1, 2, 3]\r\n    }, {\r\n        id: 8,\r\n        name: \"Signet of Death\",\r\n        description: \"Increases your damage by [d]%.\",\r\n        icon: \"icons/equipment/signet_of_death.png\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.4,\r\n        healingModifier: 1,\r\n        cost: 700,\r\n        requiredLevel: 10,\r\n        availableClasses: [0, 1, 2]\r\n    }, {\r\n        id: 9,\r\n        name: \"Tribal Pendant\",\r\n        description: \"Increases your healing by [h]%.\",\r\n        icon: \"icons/equipment/tribal_pendant.png\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1,\r\n        damageModifier: 1,\r\n        healingModifier: 1.6,\r\n        cost: 700,\r\n        requiredLevel: 10,\r\n        availableClasses: [0, 2]\r\n    }\r\n];\r\n\r\nexport default equipment;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./store.css\";\r\n\r\nimport { upgradeSpell, purchaseItem } from \"../../actions/actions\";\r\n\r\nimport equipment from \"../../states/equipment\";\r\nimport Equipment from \"../../classes/equipment\";\r\nimport Spell from \"../../classes/spell\";\r\n\r\nclass Store extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            view: \"equipment\",\r\n            equipment: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let equipmentArray;\r\n        equipmentArray = equipment.map(equipment => new Equipment(equipment));\r\n\r\n        this.setState({ equipment: equipmentArray });\r\n    }\r\n\r\n    characterHasItem(itemId) {\r\n        return this.props.character.equipment.find(item => item.id === itemId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"store\">\r\n            <div className=\"sidebar\">\r\n                <h3>Shop {this.state.view === \"spells\" ? \"Spells\" : \"Equipment\"}</h3>\r\n                <div>\r\n                    <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/>\r\n                    <p>{this.props.character.coins}</p>\r\n                </div>\r\n                <button className={this.state.view === \"equipment\" ? \"active equipmentBtn\" : \"equipmentBtn\"} onClick={() => { this.setState({ view: \"equipment\" })}}></button>\r\n                <button className={this.state.view === \"spells\" ? \"active spellsBtn\" : \"spellsBtn\"} onClick={() => { this.setState({ view: \"spells\"})}}></button>\r\n            </div>\r\n            { this.state.view === \"equipment\" && <div className=\"items\">\r\n                {this.state.equipment.sort((a, b) => (a.requiredLevel > b.requiredLevel) ? 1 : ((b.requiredLevel > a.requiredLevel) ? -1 : 0)).map(item => {\r\n                    if(item.availableClasses.includes(this.props.character.class.id)) {\r\n                        return (<div key={item.id} className={this.characterHasItem(item.id) ? \"itemContainer owned\" : \"itemContainer\"}>\r\n                            <div>\r\n                                <div className=\"header\">\r\n                                    <div className=\"spellframe\">\r\n                                        <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                        <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                        <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                        <img className=\"frame_icon\" src={\"/images/\" + item.icon} alt=\"\" />\r\n                                    </div>\r\n                                    <h4>{item.name}</h4>\r\n                                </div>\r\n                                <p className=\"description\">{this.characterHasItem(item.id) ? \"You already own this item.\" : item.description}</p>\r\n                            </div>\r\n                            <div className={this.props.character.level < item.requiredLevel || this.props.character.coins < item.cost ? \"buyItem disabled\" : \"buyItem\"}>\r\n                                <div className=\"itemInfo\">\r\n                                    <p className={this.props.character.level < item.requiredLevel ? \"lowLevel\" : null}>Level {item.requiredLevel}+</p>\r\n                                    <h5 className=\"coinContainer\">Cost: <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/> <span className={this.props.character.coins < item.cost ? \"lowCoins\" : null}>{item.cost}</span></h5>\r\n                                </div>\r\n                                <button className=\"buyBtn\" onClick={() => {\r\n                                    if(!this.characterHasItem(item)) {\r\n                                        this.props.dispatch(purchaseItem(item, this.props.accountId));\r\n                                }}}></button>\r\n                            </div>\r\n                        </div>)\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                })}\r\n            </div>}\r\n            { this.state.view === \"spells\" && <div className=\"spells\">\r\n                {this.props.character.spells.map((spell, index) => {\r\n                    let storeSpell = new Spell(spell.properties);\r\n\r\n                    if(storeSpell.rank < 3) {\r\n                        storeSpell.rank = (storeSpell.rank + 1);\r\n                    }\r\n\r\n                    return (\r\n                        <div key={storeSpell.id} className={spell.rank === 3 ? \"spellContainer owned\" : \"spellContainer\"}>\r\n                            <div>\r\n                                <div className=\"header\">\r\n                                    <div className=\"spellframe\">\r\n                                        <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                        <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                        <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                        <img className=\"frame_icon\" src={\"/images/\" + storeSpell.icon} alt=\"\" />\r\n                                    </div>\r\n                                    <h4>{storeSpell.name}</h4>\r\n                                </div>\r\n                                <p className=\"description\">{spell.rank === 3 ? \"You have already upgraded this spell to the highest rank.\": storeSpell.description}</p>\r\n                                {storeSpell.secondaryDescription && <p className=\"secondaryDescription\">{storeSpell.secondaryDescription}</p>}\r\n                            </div>\r\n                            <div className={this.props.character.coins < (100*storeSpell.rank) ? \"buyItem disabled\" : \"buyItem\"}>\r\n                                <div className=\"itemInfo\">\r\n                                    { spell.rank === 3 ? <p>Max Rank</p> : <p>Buy Rank {storeSpell.rank} / 3</p> }\r\n                                    <h5 className=\"coinContainer\">Cost: <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/> <span className={this.props.character.coins < (100*storeSpell.rank) ? \"lowCoins\" : null}>{100*(storeSpell.rank)}</span></h5>\r\n                                </div>\r\n                                <button className=\"upgradeBtn\" onClick={() => {\r\n                                    if(spell.rank < 3) {\r\n                                        this.props.dispatch(upgradeSpell(index, (100*storeSpell.rank), storeSpell.properties, this.props.accountId));\r\n                                    }\r\n                                }}></button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    equipment: state.equipment,\r\n    spells: state.spells,\r\n    accountId: state.accountId\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Store);\r\n","import React, { Component } from \"react\";\n\nimport Navigation from \"./components/navigation/navigation\";\nimport CharacterCreation from \"./components/characterCreation/characterCreation\";\nimport Credits from \"./components/credits/credits\";\nimport Character from \"./components/character/character\";\nimport Arena from \"./components/arena/arena\";\nimport Store from \"./components/store/store\";\nimport \"./App.css\";\n\nimport { connect } from \"react-redux\";\n\nimport { showCharacterCreation, loadCharacter, setAccountId } from \"./actions/actions\";\nimport Spell from \"./classes/spell\";\nimport Equipment from \"./classes/equipment\";\n\nclass App extends Component {\n    storageAvailable(type) {\n        try {\n            var storage = window[type],\n                x = '__storage_test__';\n            storage.setItem(x, x);\n            storage.removeItem(x);\n            return true;\n        }\n        catch(e) {\n            return e instanceof DOMException && (\n                // everything except Firefox\n                e.code === 22 ||\n                // Firefox\n                e.code === 1014 ||\n                // test name field too, because code might not be present\n                // everything except Firefox\n                e.name === 'QuotaExceededError' ||\n                // Firefox\n                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n                // acknowledge QuotaExceededError only if there's something already stored\n                storage.length !== 0;\n        }\n    }\n\n    getCachedCharacter() {\n        let cachedCharacter = JSON.parse(localStorage.getItem(\"character\"));\n        if(cachedCharacter) {\n            cachedCharacter.spells = cachedCharacter.spells.map(spell => new Spell(spell));\n            cachedCharacter.equipment = cachedCharacter.equipment.map(equipment => new Equipment(equipment));\n            this.props.dispatch(loadCharacter(cachedCharacter, true));\n        }\n    }\n\n    componentDidMount() {\n        if(this.storageAvailable('localStorage')) {\n            this.getCachedCharacter();\n\n            let accountId = localStorage.getItem(\"accountId\");\n            if(!accountId) {\n                this.props.dispatch(setAccountId());\n            }\n            else {\n                this.props.dispatch(setAccountId(accountId));\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"app\">\n                <Navigation />\n                { this.props.navigation.showIntroduction && (\n                    <div className=\"introduction\">\n                        <h2>Welcome, adventurer!</h2>\n                        <p>\n                        This is the arena. A web-based fighting game where you can create a\n                        character and use it to fight enemies in one-versus-one combat. Shall\n                        you win, you will be rewarded with experience points as well as\n                        coins, which you can use to purchase upgraded spells and\n                        abilities.\n                        <br />\n                        <br />\n                        Ready to create your character? \n                        </p>\n                        <div>\n                            <button className=\"createBtn\" onClick={() => this.props.dispatch(showCharacterCreation())}></button>\n                        </div>\n                    </div>\n                )}\n                { this.props.navigation.showCharacterCreation && <CharacterCreation /> }\n                { this.props.navigation.showCredits && <Credits /> }\n                { this.props.navigation.showCharacter && <Character /> }\n                { this.props.navigation.showArena && <Arena /> }\n                { this.props.navigation.showStore && <Store /> }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    navigation: state.navigation,\n    character: state.character\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\r\nimport Spell from \"../classes/spell\";\r\nimport settings from \"../states/settings\";\r\n// import Equipment from \"../classes/equipment\";\r\nconst uuid = require('uuid/v4');\r\n\r\nfunction saveToLocalStorage(character) {\r\n    let local = {\r\n        class: character.class,\r\n        name: character.name,\r\n        level: character.level,\r\n        coins: character.coins,\r\n        experience: character.experience,\r\n        uid: character.uid\r\n    }\r\n\r\n    local.spells = character.spells.map(spell => spell.properties);\r\n    local.equipment = character.equipment.map(equipment => equipment.properties);\r\n    localStorage.setItem(\"character\", JSON.stringify(local));\r\n}\r\n\r\nfunction removeFromLocalStorage() {\r\n    localStorage.removeItem(\"character\");\r\n}\r\n\r\nfunction saveToDatabase(character, accountId) {\r\n    let saveableCharacter = {\r\n        ...character,\r\n        accountId\r\n    }\r\n\r\n    saveableCharacter.spells = character.spells.map(spell => spell.properties);\r\n    saveableCharacter.equipment = character.equipment.map(equipment => equipment.properties);\r\n\r\n    fetch(\"http://localhost:4000/characters/save\", {\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"post\",\r\n        body: JSON.stringify(saveableCharacter)\r\n    }).then(res => {\r\n        res.json()\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        });\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nlet characterReducer = (state={}, action) => {\r\n    let newState = {...state};\r\n\r\n    switch(action.type) {\r\n        case \"SET_CLASS\":\r\n            newState.class = action.selectedClass;\r\n            newState.spells = action.spells;\r\n            newState.equipment = [];\r\n            newState.name = action.name;\r\n            newState.level = 1;\r\n            newState.coins = 0;\r\n            newState.experience = 0;\r\n            newState.uid = uuid();\r\n\r\n            saveToLocalStorage(newState);\r\n            saveToDatabase(newState, action.accountId);\r\n            return newState;\r\n        case \"GIVE_LOOT\":\r\n            newState.experience += action.experience;\r\n            newState.coins += action.coins;\r\n\r\n            if(newState.level === 15) {\r\n                newState.experience = 0;\r\n            }\r\n            else if(newState.experience > settings.requiredExperience[newState.level-1]) {\r\n                newState.level += 1;\r\n                if(newState.level === 15) {\r\n                    newState.experience = 0;\r\n                }\r\n                newState.experience -= settings.requiredExperience[newState.level-2];\r\n            }\r\n\r\n            saveToLocalStorage(newState);\r\n            saveToDatabase(newState, action.accountId);\r\n            return newState;\r\n        case \"UPGRADE_SPELL\":\r\n            if(newState.coins >= action.cost) {\r\n                newState.spells[action.spellIndex] = new Spell(action.newSpell);\r\n                newState.coins -= action.cost;\r\n            }\r\n            \r\n            saveToLocalStorage(newState);\r\n            saveToDatabase(newState, action.accountId);\r\n            return newState;\r\n        case \"PURCHASE_ITEM\":\r\n            if(newState.coins >= action.item.cost) {\r\n                newState.equipment.push(action.item);\r\n                newState.coins -= action.item.cost;\r\n            }\r\n\r\n            saveToLocalStorage(newState);\r\n            saveToDatabase(newState, action.accountId);\r\n            return newState;\r\n        case \"LOAD_CHARACTER\":\r\n            if(action.cached !== true) {\r\n                saveToLocalStorage(action.character);\r\n            }\r\n\r\n            newState = action.character;\r\n            return newState;\r\n        case \"RESET_CHARACTER\":\r\n            newState = {\r\n                class: null,\r\n                coins: 0,\r\n                level: 1,\r\n                experience: 0,\r\n                spells: [],\r\n                equipment: [],\r\n                name: \"\",\r\n                uid: null\r\n            }\r\n\r\n            removeFromLocalStorage();\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nlet navigationReducer = (state={}, action) => {\r\n    let newState = {\r\n        showCharacterCreation: false,\r\n        showCredits: false,\r\n        showArena: false,\r\n        showCharacter: false,\r\n        showIntroduction: false,\r\n        refresh: !state.refresh\r\n    };\r\n\r\n    switch(action.type) {\r\n        case \"SHOW_CHARACTER_CREATION\":\r\n            newState.showCharacterCreation = true;\r\n            return newState;\r\n        case \"SHOW_CREDITS\":\r\n            newState.showCredits = true;\r\n            return newState;\r\n        case \"SHOW_ARENA\":\r\n            newState.showArena = true;        \r\n            return newState;\r\n        case \"SHOW_STORE\":\r\n            newState.showStore = true;      \r\n            return newState;\r\n        case \"SHOW_CHARACTER\":\r\n            newState.showCharacter = true;            \r\n            return newState;\r\n        case \"RESET_CHARACTER\":\r\n            newState.showIntroduction = true;\r\n            return newState;\r\n        case \"LOAD_CHARACTER\":\r\n            newState.showCharacter = true;\r\n            return newState;\r\n        case \"SET_CLASS\":\r\n            newState.showCharacter = true;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nlet accountReducer = (state=\"\", action) => {\r\n    switch(action.type) {\r\n        case \"SET_ACCOUNT_ID\":\r\n            if(action.accountId) {\r\n                state = action.accountId;\r\n            }\r\n            else {\r\n                state = uuid();\r\n                localStorage.setItem(\"accountId\", state);\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n    character: characterReducer,\r\n    navigation: navigationReducer,\r\n    accountId: accountReducer\r\n});\r\n\r\nexport default rootReducer;","const initialState = {\r\n    navigation: {\r\n        showIntroduction: true,\r\n        showCharacterCreation: false,\r\n        showCredits: false,\r\n        showStore: false,\r\n        showArena: false,\r\n        showCharacter: false,\r\n        refresh: false\r\n    },\r\n    character: {\r\n        class: null,\r\n        coins: 0,\r\n        level: 1,\r\n        experience: 0,\r\n        spells: [],\r\n        equipment: [],\r\n        name: \"\",\r\n        uid: null\r\n    },\r\n    accountId: null\r\n}\r\n\r\nexport default initialState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from \"./reducers/reducers.js\";\n\nimport initialState from \"./states/initialState.js\";\n\nconst store = createStore(rootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render((<Provider store={store}><App /></Provider>), document.getElementById('root'));"],"sourceRoot":""}