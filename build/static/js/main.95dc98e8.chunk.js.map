{"version":3,"sources":["actions/actions.js","components/navigation/navigation.js","components/characterCreation/newCharacter.js","components/characterCreation/loadCharacter.js","components/characterCreation/characterCreation.js","components/credits/credits.js","components/character/character.js","components/arena/player.js","components/arena/enemy.js","components/arena/arena.js","components/store/store.js","App.js","reducers/reducers.js","states/classes.js","states/enemies.js","states/spells.js","states/equipment.js","states/initialState.js","index.js"],"names":["loadCharacter","character","cached","type","Navigation","_this","this","react_default","a","createElement","id","className","src","alt","props","showCharacterCreation","onClick","dispatch","showCharacter","disabled","characterClass","showArena","showStore","showCredits","Component","connect","state","class","NewCharacter","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedId","characterName","nameError","handleNameChange","bind","assertThisInitialized","selectedClass","spells","getAvailableSpells","name","setClass","event","target","value","match","setState","spellList","_this2","availableSpells","forEach","availableSpell","spell","push","_this3","maxLength","placeholder","onChange","classes","map","currentClass","key","icon","description","resourceCost","resourceType","toLowerCase","rank","selectClass","length","gameSettings","LoadCharacter","characters","loadingFinished","errorOccured","fetch","headers","Accept","Content-Type","method","then","res","json","newSpell","find","stateSpell","equipment","item","catch","err","uid","selectCharacter","level","coins","experience","CharacterCreation","view","refresh","nextProps","components_characterCreation_newCharacter","components_characterCreation_loadCharacter","Credits","href","Character","body","JSON","stringify","console","log","rankModifier","modifier","index","Player","data","baseHealthPerLevel","baseResourcesPerLevel","experienceToNextLevel","maxHealth","healthModifier","maxResources","resourceModifier","damageModifier","healingModifier","currentHealth","currentResources","spellIndex","randomizer","Math","floor","random","damage","healing","Enemy","Arena","arenaLevel","playerTurn","latestAction","showLatestAction","player","enemy","status","loot","enemies","requiredExperience","addSpellEventListeners","getRemainingHealth","distributeLoot","getLevel","winnings","giveLoot","_this4","startArena","_this5","nextLevel","_this6","checkForWinner","actionText","values","attack","concat","getSpells","getName","receiveAttack","receiveHeal","window","setTimeout","handleEnemyAttack","_this7","_this8","addEventListener","container","document","getElementById","children","classList","contains","add","remove","handlePlayerAttack","_this9","Fragment","getIcon","n","indicatorStyle","left","style","getMaxHealth","width","getRemainingHealthPercentage","startNextLevel","resetArena","getRemainingResources","getResourceType","getClass","getMaxResources","getRemainingResourcesPercentage","getExperience","getExperienceToNextLevel","Store","itemId","sort","b","requiredLevel","availableClasses","includes","characterHasItem","cost","purchaseItem","temp","objectSpread","App","storage","x","setItem","removeItem","e","DOMException","code","cachedCharacter","parse","localStorage","getItem","storageAvailable","getCachedCharacter","navigation_navigation","showIntroduction","characterCreation_characterCreation","credits_credits","components_character_character","arena_arena","store_store","uuid","require","rootReducer","action","newState","toConsumableArray","newCharacter","_description","replace","baseDamage","baseHealing","_rank","initialState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0"],"mappings":"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","file":"static/js/main.95dc98e8.chunk.js","sourcesContent":["let showCharacterCreation = () => {\r\n    return {\r\n        type: \"SHOW_CHARACTER_CREATION\"\r\n    }\r\n}\r\n\r\nlet showCredits = () => {\r\n    return {\r\n        type: \"SHOW_CREDITS\"\r\n    }\r\n}\r\n\r\nlet showArena = () => {\r\n    return {\r\n        type: \"SHOW_ARENA\"\r\n    }\r\n}\r\n\r\nlet showStore = () => {\r\n    return {\r\n        type: \"SHOW_STORE\"\r\n    }\r\n}\r\n\r\nlet showCharacter = () => {\r\n    return {\r\n        type: \"SHOW_CHARACTER\"\r\n    }\r\n}\r\n\r\nlet setClass = (selectedClass, spells, name) => {\r\n    return {\r\n        type: \"SET_CLASS\",\r\n        selectedClass,\r\n        spells,\r\n        name\r\n    }\r\n}\r\n\r\nlet giveLoot = (experience, coins) => {\r\n    return {\r\n        type: \"GIVE_LOOT\",\r\n        experience,\r\n        coins\r\n    }\r\n}\r\n\r\nlet upgradeSpell = (spellIndex, cost) => {\r\n    return {\r\n        type: \"UPGRADE_SPELL\",\r\n        spellIndex,\r\n        cost\r\n    }\r\n}\r\n\r\nlet purchaseItem = (item) => {\r\n    return {\r\n        type: \"PURCHASE_ITEM\",\r\n        item\r\n    }\r\n}\r\n\r\nlet loadCharacter = (character, cached) => {\r\n    return {\r\n        type: \"LOAD_CHARACTER\",\r\n        character,\r\n        cached\r\n    }\r\n}\r\n\r\nexport {\r\n    showCharacterCreation,\r\n    showCredits,\r\n    showArena,\r\n    showStore,\r\n    showCharacter,\r\n    setClass,\r\n    giveLoot,\r\n    upgradeSpell,\r\n    purchaseItem,\r\n    loadCharacter\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nimport { showCharacterCreation, showCredits, showArena, showStore, showCharacter } from \"../../actions/actions\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"navigation\">\r\n        <img className=\"logo\" src={\"/images/arena2.png\"} alt=\"\" />\r\n        <ul>\r\n          <li className={ this.props.showCharacterCreation ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCharacterCreation())}>New Character</button>\r\n          </li>\r\n          <li className={ this.props.showCharacter ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCharacter())} disabled={this.props.characterClass === null}>My Character</button>\r\n          </li>\r\n          <li className={ this.props.showArena ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showArena())} disabled={this.props.characterClass === null}>Into The Arena</button>\r\n          </li>\r\n          <li className={ this.props.showStore ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showStore())} disabled={this.props.characterClass === null}>Store</button>\r\n          </li>\r\n          <li className={ this.props.showCredits ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCredits())}>Credits</button>\r\n          </li>\r\n        </ul>\r\n        <div className=\"border\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showCharacterCreation: state.showCharacterCreation,\r\n    showCredits: state.showCredits,\r\n    showArena: state.showArena,\r\n    showStore: state.showStore,\r\n    showCharacter: state.showCharacter, \r\n    characterClass: state.character.class\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React, { Component } from \"react\";\r\nimport \"./newCharacter.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setClass } from \"../../actions/actions\";\r\n\r\nclass NewCharacter extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedId: 0,\r\n            characterName: \"\",\r\n            nameError: false,\r\n        }\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    selectClass(selectedClass) {\r\n        let spells = this.getAvailableSpells(selectedClass.spells);\r\n        this.props.dispatch(setClass(selectedClass, spells, this.state.characterName));\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        let reg = /^[a-z]+$/i;\r\n        let name = event.target.value;\r\n        if(name.match(reg)) {\r\n            this.setState({ characterName: name, nameError: false });\r\n        }\r\n        else {\r\n            this.setState({ nameError: true });\r\n        }\r\n    }\r\n\r\n    getAvailableSpells(spellList) {\r\n        let availableSpells = [];\r\n\r\n        spellList.forEach(availableSpell => {\r\n        this.props.spells.forEach(spell => {\r\n            if (spell.id === availableSpell) {\r\n            availableSpells.push(spell);\r\n            }\r\n        });\r\n        });\r\n\r\n        return availableSpells;\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"newCharacter\">\r\n        <h3>ChOOse A Name</h3>\r\n        <div className=\"characterName\">\r\n            <input maxLength=\"16\" type=\"text\" placeholder=\"Name\" onChange={ this.handleNameChange } className={this.state.nameError ? \"error\" : null} />\r\n            { this.state.nameError && <p className=\"nameError\">Your name must be between 2 and 16 characters and contain only letters.</p> }\r\n        </div>\r\n        <h3 className=\"classesHeader\">Select yOUr Class</h3>\r\n        <div className=\"classes\">\r\n            {this.props.classes.map(currentClass => (\r\n                <div key={currentClass.id} className={this.state.selectedId === currentClass.id ? \"classframe selected hoverable\" : \"classframe hoverable\"} onClick={() => this.setState({ selectedId: currentClass.id })}>\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + currentClass.icon} alt=\"\" />\r\n                </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"classList\">\r\n            {this.props.classes.map(currentClass => (\r\n            <div className={ this.state.selectedId === currentClass.id ? \"class selected\" : \"class\"} key={currentClass.id}>\r\n                <div className=\"header\">\r\n                <div className=\"classframe\">\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + currentClass.icon} alt=\"\" />\r\n                </div>\r\n                    <h3>{currentClass.name}</h3>\r\n                </div>\r\n                <p className=\"description\">{currentClass.description}</p>\r\n                <h4>Spells</h4>\r\n                <div className=\"spells\">\r\n                {this.getAvailableSpells(currentClass.spells).map(spell => (\r\n                    <div key={spell.id} className=\"spell\">\r\n                        <div className=\"spellframe\">\r\n                            <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                            <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                            <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                            <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"spellDescription\">\r\n                            <div>\r\n                                <div>\r\n                                    <p className=\"spellName\">{spell.name}</p>\r\n                                    { spell.resourceCost !== 0 && \r\n                                        <p className=\"resourceCost\">{spell.resourceCost} {currentClass.resourceType.toLowerCase()}</p>\r\n                                    }\r\n                                </div>\r\n                                <p>Rank {spell.rank}</p>\r\n                            </div>\r\n                            <p>\r\n                                {spell.description}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                <div className=\"selectBtnContainer\">\r\n                    <button className=\"selectBtn\" onClick={() => this.selectClass(currentClass)} disabled={this.state.characterName.length < 2}></button>\r\n                </div>\r\n            </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    classes: state.classes,\r\n    spells: state.spells,\r\n    gameSettings: state.gameSettings\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NewCharacter);\r\n","import React, { Component } from \"react\";\r\nimport \"./loadCharacter.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loadCharacter } from \"../../actions/actions\";\r\n\r\nclass LoadCharacter extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            characters: [],\r\n            loadingFinished: false,\r\n            errorOccured: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/characters/get\", {\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"get\"\r\n        })\r\n        .then(res => {\r\n            res.json().then(characters => {\r\n                characters = characters.map(character => {\r\n                    character.spells = character.spells.map(spell => {\r\n                        let newSpell = this.props.spells.find(stateSpell => stateSpell.id === spell.id);\r\n                        newSpell.rank = (spell.rank - 1);\r\n                        return newSpell;\r\n                    });\r\n                    character.equipment = character.equipment.map(item => {\r\n                        return this.props.equipment.find(equipment => equipment.id === item);\r\n                    });\r\n                    return character;\r\n                });\r\n\r\n                if(characters.length > 0) {\r\n                    this.setState({ characters, loadingFinished: true, errorOccured: false });\r\n                }\r\n                else {\r\n                    this.setState({ errorOccured: true });\r\n                }\r\n            });\r\n        })\r\n        .catch(err => {\r\n            this.setState({ errorOccured: true });\r\n        });\r\n    }\r\n\r\n    selectCharacter(character) {\r\n        this.props.dispatch(loadCharacter(character));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"loadCharacter\">\r\n                {!this.state.loadingFinished && <p>Loading characters...</p>}\r\n                {this.state.errorOccured && <p>An error occured while loading characters...</p>}\r\n                {this.state.characters.length > 0 && this.state.characters.map(character => {\r\n                    return (\r\n                    <div key={character.uid} onClick={() => this.selectCharacter(character)}>\r\n                        <p>{character.name} L{character.level} {character.coins}C {character.experience} exp</p>\r\n                        <p>{character.class.name}</p>\r\n                    </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    spells: state.spells,\r\n    equipment: state.equipment\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoadCharacter);\r\n","import React, { Component } from \"react\";\r\nimport \"./characterCreation.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NewCharacter from \"./newCharacter\";\r\nimport LoadCharacter from \"./loadCharacter\";\r\n\r\nclass CharacterCreation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            view: \"\",\r\n            refresh: this.props.refresh\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        // Forcing update when clicking \"New Character\" in navigation to refresh and set view to 0 again\r\n        if(nextProps.refresh !== this.props.refresh) {\r\n            this.setState({ view: \"\" });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"characterCreation\">\r\n                {this.state.view === \"\" && \r\n                <div className=\"select\">\r\n                <div onClick={() => this.setState({ view: \"CREATE\" })}><h3>Create New</h3></div>\r\n                <div className=\"or\"><h1>OR</h1></div>\r\n                <div onClick={() => this.setState({ view: \"SAVED\" })}><h3>Load Existing</h3></div>\r\n                </div>\r\n                }\r\n                {this.state.view === \"CREATE\" && <NewCharacter />}\r\n                {this.state.view === \"SAVED\" && <LoadCharacter />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    classes: state.classes,\r\n    spells: state.spells,\r\n    gameSettings: state.gameSettings,\r\n    refresh: state.refresh,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CharacterCreation);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./credits.css\";\r\n\r\nclass Credits extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"credits\">\r\n        <div>\r\n        <h2>Special thanks to</h2>\r\n        <p>Delapouite (<a href=\"https://delapouite.com\">https://delapouite.com</a>), Wjb (<a href=\"http://wjbstories.blogspot.com\">http://wjbstories.blogspot.com</a>) \r\n        and Lorc (<a href=\"http://lorcblog.blogspot.com\">http://lorcblog.blogspot.com</a>) from <a href=\"https://game-icons.net\">https://game-icons.net</a> for the icons</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Credits;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./character.css\";\r\n\r\nclass Character extends Component {\r\n    saveToDatabase(character) {\r\n        fetch(\"/characters/save\", {\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"post\",\r\n            body: JSON.stringify(character)\r\n        }).then(res => {\r\n            res.json().then(res => console.log(res));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div id=\"character\">\r\n            <div className=\"class\">\r\n                <h3>{this.props.character.name}</h3>\r\n                <div className=\"classframe\">\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + this.props.character.class.icon} alt=\"\" />\r\n                </div>\r\n                <h3>Level {this.props.character.level}</h3>\r\n            </div>\r\n            <h4 className=\"className\">{this.props.character.class.name}</h4>\r\n            {/* <div className=\"resourcebar\">\r\n                <div className=\"playerInfo\">\r\n                    <h3>{this.props.character.name}</h3>\r\n                    <p>Level {this.props.character.level} <span>{this.props.character.class.name}</span></p>\r\n                </div>\r\n                <p className=\"experience\">{this.props.character.experience}/{this.props.gameSettings.requiredExperience[this.props.character.level-1]} experience</p>\r\n                <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                <div style={{width: ((this.props.character.experience/this.props.gameSettings.requiredExperience[this.props.character.level-1]) * 494) + \"px\"}} className=\"frame_filler_experience\"></div>\r\n            </div> */}\r\n            <h4 className=\"spellsHeader\">Spells</h4>\r\n            <div className=\"spells\">{this.props.character.spells.map(spell => (\r\n                    <div key={spell.id} className=\"spell\">\r\n                        <div className=\"spellframe\">\r\n                            <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                            <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                            <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                            <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"spellDescription\">\r\n                            <div>\r\n                                <div>\r\n                                    <p className=\"spellName\">{spell.name}</p>\r\n                                    { spell.resourceCost !== 0 && <p className=\"resourceCost\">{spell.resourceCost} {this.props.character.class.resourceType.toLowerCase()}</p>}\r\n                                </div>\r\n                                <p>Rank {spell.rank}</p>\r\n                            </div>\r\n                            <p>{spell.description}</p>\r\n                        </div>\r\n                        <div className=\"spellRanks\">\r\n                            {spell.rankModifier.map((modifier, index) => <div key={index} className={spell.rank > index ? \"learned\": \"notLearned\"}></div>)}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <h4 className=\"equipmentHeader\">Equipment</h4>\r\n            <div className=\"equipment\">\r\n                {this.props.character.equipment.length === 0 \r\n                    ? <p>You have not purchased any equipment.</p> \r\n                    : this.props.character.equipment.map(item => (\r\n                        <div key={item.id} className=\"item\">\r\n                            <div className=\"header\">\r\n                                <div className=\"spellframe\">\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + item.icon} alt=\"\" />\r\n                                </div>\r\n                                <h4>{item.name}</h4>\r\n                            </div>\r\n                            <p className=\"description\">{item.description}</p>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    gameSettings: state.gameSettings\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Character);\r\n","class Player {\r\n    constructor(data, baseHealthPerLevel, baseResourcesPerLevel, experienceToNextLevel) {\r\n        this.maxHealth = baseHealthPerLevel[data.level-1] * data.class.healthModifier;\r\n        this.maxResources = baseResourcesPerLevel[data.level-1] * data.class.resourceModifier;\r\n        this.damageModifier = data.class.damageModifier;\r\n        this.healingModifier = data.class.healingModifier;\r\n        this.icon = data.class.icon;\r\n        this.name = data.name;\r\n        this.spells = data.spells;\r\n        this.equipment = data.equipment;\r\n        this.resourceType = data.class.resourceType;\r\n        this.className = data.class.name;\r\n        this.experience = data.experience;\r\n        this.experienceToNextLevel = experienceToNextLevel;\r\n        this.level = data.level;\r\n\r\n        data.equipment.forEach(item => {\r\n            this.damageModifier *= item.damageModifier;\r\n            this.healingModifier *= item.healingModifier;\r\n            this.maxHealth *= item.healthModifier;\r\n            this.maxResources *= item.resourceModifier;\r\n        });\r\n\r\n        this.currentHealth = this.maxHealth;\r\n        this.currentResources = this.maxResources;\r\n    }\r\n\r\n    attack(spellIndex) {\r\n        let spell = this.spells[spellIndex];\r\n        let randomizer = (Math.floor(Math.random() * 21) + 90)/100;\r\n\r\n        if(this.currentResources >= spell.resourceCost) {\r\n            this.currentResources -= spell.resourceCost;\r\n            \r\n            let damage = Math.floor(spell.damage * this.damageModifier * randomizer);\r\n            let healing = Math.floor(spell.healing * this.healingModifier * randomizer);\r\n            return [damage, healing];\r\n        }\r\n        return [0, 0];\r\n    }\r\n\r\n    receiveAttack(damage) {\r\n        if(this.currentHealth - damage <= 0) {\r\n            this.currentHealth = 0;\r\n        } \r\n        else {\r\n            this.currentHealth -= damage;\r\n        }\r\n    }\r\n\r\n    receiveHeal(healing) {\r\n        if(this.currentHealth + healing >= this.maxHealth) {\r\n            this.currentHealth = this.maxHealth;\r\n        }\r\n        else {\r\n            this.currentHealth += healing;\r\n        }\r\n    }\r\n\r\n    get getMaxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get getRemainingHealth() {\r\n        return this.currentHealth;\r\n    }\r\n\r\n    get getRemainingHealthPercentage() {\r\n        return (this.currentHealth / this.maxHealth) * 100;\r\n    }\r\n\r\n    get getMaxResources() {\r\n        return this.maxResources;\r\n    }\r\n\r\n    get getRemainingResources() {\r\n        return this.currentResources;\r\n    }\r\n\r\n    get getRemainingResourcesPercentage() {\r\n        return (this.currentResources / this.maxResources) * 100;\r\n    }\r\n\r\n    get getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    get getIcon() {\r\n        return this.icon;\r\n    }\r\n\r\n    get getResourceType() {\r\n        return this.resourceType;\r\n    }\r\n\r\n    get getClass() {\r\n        return this.className;\r\n    }\r\n\r\n    get getExperience() {\r\n        return this.experience;\r\n    }\r\n\r\n    get getExperienceToNextLevel() {\r\n        return this.experienceToNextLevel;\r\n    }\r\n\r\n    get getSpells() {\r\n        return this.spells;\r\n    }\r\n}\r\n\r\nexport default Player;","class Enemy {\r\n    constructor(data, baseHealthPerLevel) {\r\n        this.maxHealth = baseHealthPerLevel[data.level-1] * data.healthModifier;\r\n        this.currentHealth = this.maxHealth;\r\n        this.damageModifier = data.damageModifier;\r\n        this.icon = data.icon;\r\n        this.name = data.name;\r\n        this.level = data.level;\r\n    }\r\n\r\n    attack() {\r\n        let damage = Math.floor(50 * this.damageModifier * (Math.floor(Math.random() * 21) + 90) / 100);\r\n        return [damage, 0];\r\n    }\r\n\r\n    receiveAttack(damage) {\r\n        if(this.currentHealth - damage <= 0) {\r\n            this.currentHealth = 0;\r\n        } \r\n        else {\r\n            this.currentHealth -= damage;\r\n        }\r\n    }\r\n\r\n    get getMaxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get getRemainingHealth() {\r\n        return this.currentHealth;\r\n    }\r\n\r\n    get getRemainingHealthPercentage() {\r\n        return (this.currentHealth / this.maxHealth) * 100;\r\n    }\r\n\r\n    get getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    get getIcon() {\r\n        return this.icon;\r\n    }\r\n}\r\n\r\nexport default Enemy;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Player from \"./player\";\r\nimport Enemy from \"./enemy\";\r\n\r\nimport \"./arena.css\";\r\nimport { giveLoot } from \"../../actions/actions\";\r\n\r\nclass Arena extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            arenaLevel: 1,\r\n            playerTurn: true,\r\n            latestAction: \"Your Venomous Vial hit Enemy for 40 damage.\",\r\n            showLatestAction: false,\r\n            player: null,\r\n            enemy: null,\r\n            status: \"WAITING\", // WINNER, LOSER, INPROGRESS, WAITING\r\n            loot: {\r\n                experience: 0,\r\n                coins: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    startArena() {\r\n        let enemy = new Enemy(this.props.enemies[this.state.arenaLevel-1], this.props.gameSettings.baseHealthPerLevel);\r\n        let player = new Player(this.props.character, this.props.gameSettings.baseHealthPerLevel, \r\n            this.props.gameSettings.baseResourcesPerLevel, this.props.gameSettings.requiredExperience[this.props.character.level-1]);\r\n        this.setState({ enemy, player}, () => {\r\n            this.addSpellEventListeners();\r\n            this.setState({ status: \"INPROGRESS\" });\r\n        });\r\n    }\r\n\r\n    checkForWinner() {\r\n        if(this.state.enemy.getRemainingHealth <= 0) {\r\n            this.distributeLoot();\r\n            return true;\r\n        }\r\n        else if(this.state.player.getRemainingHealth <= 0) {\r\n            this.setState({ status: \"LOSER\" });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    distributeLoot() {\r\n        let experience = Math.floor(this.state.enemy.getLevel * 50 * ((Math.floor(Math.random() * 50) + 75) / 100));\r\n        let coins = Math.floor(this.state.enemy.getLevel * 15 * ((Math.floor(Math.random() * 50) + 75) / 100));\r\n        this.setState({ winnings: { experience, coins }, status: \"WINNER\" }, () => {\r\n            this.props.dispatch(giveLoot(experience, coins));\r\n        });\r\n    }\r\n\r\n    resetArena() {\r\n        this.setState({ playerTurn: true, showLatestAction: false, arenaLevel: 1 }, () => {\r\n            this.startArena();\r\n        });\r\n    }\r\n\r\n    startNextLevel() {\r\n        let nextLevel = this.state.arenaLevel + 1;\r\n        this.setState({ playerTurn: true, showLatestAction: false, arenaLevel: nextLevel }, () => {\r\n            this.startArena();\r\n        });\r\n    }\r\n\r\n    handlePlayerAttack(index) {\r\n        if(this.checkForWinner()) {\r\n            return;\r\n        }\r\n        else if(this.state.status === \"INPROGRESS\") {\r\n            if(!this.state.playerTurn) {\r\n                return\r\n            }\r\n\r\n            let values = this.state.player.attack(index);\r\n            let damage = values[0];\r\n            let healing = values[1];\r\n            let actionText;\r\n\r\n            if(damage > 0 && healing > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} hit ${this.state.enemy.getName} ${damage} damage and restored \r\n                ${healing} health points to you.`; \r\n            }\r\n            else if(damage > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} hit ${this.state.enemy.getName} ${damage} damage.`;\r\n            }\r\n            else if(healing > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} healed you ${healing} health points.`;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n\r\n            this.setState({ playerTurn: false });\r\n            this.state.enemy.receiveAttack(damage);\r\n            this.state.player.receiveHeal(healing);\r\n\r\n            this.setState({ showLatestAction: true, latestAction: actionText });\r\n            window.setTimeout(() => {\r\n                this.setState({ showLatestAction: false });\r\n                this.handleEnemyAttack();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    handleEnemyAttack() {\r\n        if(this.checkForWinner()) {\r\n            return;\r\n        }\r\n        else if(this.state.status === \"INPROGRESS\") {\r\n            let damage = this.state.enemy.attack()[0];\r\n            let actionText = `${this.state.enemy.getName} hit you for ${damage} damage.`;\r\n\r\n            this.state.player.receiveAttack(damage);\r\n\r\n            this.setState({ showLatestAction: true, latestAction: actionText });\r\n            window.setTimeout(() => {\r\n                this.setState({ showLatestAction: false, playerTurn: true });\r\n                this.checkForWinner();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    addSpellEventListeners() {\r\n        window.addEventListener(\"keydown\", event => {\r\n            let container = document.getElementById(\"spells\"); \r\n\r\n            if(event.key === \"1\") {\r\n                let spell = container.children[0].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"2\") {\r\n                let spell = container.children[1].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"3\") {\r\n                let spell = container.children[2].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"4\") {\r\n                let spell = container.children[3].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"keyup\", event => {\r\n            let container = document.getElementById(\"spells\");\r\n\r\n            if(event.key === \"1\") {\r\n                let spell = container.children[0].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(0);\r\n            } else if(event.key === \"2\") {\r\n                let spell = container.children[1].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(1);\r\n            } else if(event.key === \"3\") {\r\n                let spell = container.children[2].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(2);\r\n            } else if(event.key === \"4\") {\r\n                let spell = container.children[3].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(3);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"arena\">\r\n                { this.state.status === \"WAITING\" && \r\n                    <div className=\"introduction\">\r\n                        <h2>The Arena</h2>\r\n                        <p>Welcome, {this.props.character.name}. \r\n                        <br/>\r\n                        The arena consists of 6 stages. For each stage you complete you will be facing a tougher enemy. \r\n                        Should an enemy prove too difficult of a challenge, spell and armor upgrades can be bought in the shop.\r\n                        Beat the 6th and final enemy to prove your worth.\r\n                        <br/>\r\n                        <br/>\r\n                        Whenever you're ready, hit the button below to fight your first enemy.\r\n                        </p>\r\n                        <div>\r\n                            <button className=\"startBtn\" onClick={() => this.startArena()}></button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                { this.state.status !== \"WAITING\" && <React.Fragment>\r\n                    <div className=\"enemyFrame\">\r\n                        <div className=\"enemy\">\r\n                            <div className=\"enemyProfile\">\r\n                                <div className=\"enemyUnitFrame\">\r\n                                    <img className=\"frame\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + this.state.enemy.getIcon} alt=\"\" />\r\n                                </div>\r\n                                <h3 className=\"enemyName\">{this.state.enemy.getName}</h3>\r\n                            </div>\r\n                            <div className=\"levelIndicatorFrame\">\r\n                                <img className=\"container\" src={\"/images/level_indicator_container.png\"} alt=\"\" />\r\n                                {[0, 1, 2, 3, 4,5 ].map(n => {\r\n                                    let left = (n * 32) + 3 + \"px\";\r\n                                    let indicatorStyle = {\r\n                                        left \r\n                                    }\r\n                                    return (<img key={n} style={indicatorStyle} className={this.state.arenaLevel > n ? \"indicator\" : \"indicator hidden\"} src={\"/images/level_indicator.png\"} alt=\"\" />)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <p className=\"level\">Level {this.state.enemy.getLevel}</p>\r\n                            <p className=\"health\">{Math.floor(this.state.enemy.getRemainingHealth)}/{Math.floor(this.state.enemy.getMaxHealth)} HP</p>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.enemy.getRemainingHealthPercentage * 4.94) + \"px\"}} className=\"frame_filler_health\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"statusFrame\">\r\n                        {!this.state.showLatestAction && this.state.status === \"INPROGRESS\" && <h3>It Is Your Turn!</h3>}\r\n                        {this.state.showLatestAction && this.state.status === \"INPROGRESS\" && <h4>{this.state.latestAction}</h4>}\r\n                        {this.state.status === \"WINNER\" && \r\n                            <div>\r\n                                <h2>Victory</h2>\r\n                                <div className=\"loot\">\r\n                                    <h5>Rewards</h5>\r\n                                    <p className=\"expGain\">+{this.state.winnings.experience} experience</p>\r\n                                    <p className=\"coinGain\">+{this.state.winnings.coins} <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/></p>\r\n                                </div>\r\n                                {this.state.arenaLevel !== 6 && <button className=\"continueBtn\" onClick={() => this.startNextLevel()}></button>}\r\n                                {this.state.arenaLevel === 6 && <h3>Congratulations hero, You beat the final enemy!</h3>}\r\n                            </div>\r\n                        }\r\n                        {this.state.status === \"LOSER\" && \r\n                            <div>\r\n                                <h2>Defeat</h2>\r\n                                <button className=\"restartBtn\" onClick={() => this.resetArena()}></button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"playerFrame\">\r\n                        <div id=\"spells\">\r\n                            { this.state.player.getSpells.map( (spell, index) =>\r\n                            <div key={spell.id} className=\"spell\" onClick={() => this.handlePlayerAttack(index)}>\r\n                                <div className={this.state.playerTurn && (this.state.player.getRemainingResources >= spell.resourceCost) ? \"spellframe clickable\" : \"spellframe disabled\"}>\r\n                                    <p className=\"bind\">{index+1}</p>\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"spellDescription\">\r\n                                    <div>\r\n                                        <div>\r\n                                            <p className=\"spellName\">{spell.name}</p>\r\n                                            { spell.resourceCost !== 0 && <p className={spell.resourceCost > this.state.player.getRemainingResources ? \"resourceCost lowMana\" : \"resourceCost\"}>{spell.resourceCost} {this.state.player.getResourceType}</p>}\r\n                                        </div>\r\n                                        <p>Rank {spell.rank}</p>\r\n                                    </div>\r\n                                    <p>{spell.description}</p>\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <div className=\"playerInfo\">\r\n                                <h4>{this.state.player.getName}</h4>\r\n                                <div>\r\n                                    <p>Level {this.state.player.getLevel} <span>{this.state.player.getClass}</span></p>\r\n                                    <p>{Math.floor(this.state.player.getRemainingHealth)}/{Math.floor(this.state.player.getMaxHealth)} HP</p>\r\n                                    <p>{Math.floor(this.state.player.getRemainingResources)}/{Math.floor(this.state.player.getMaxResources)} {this.state.player.getResourceType}</p>\r\n                                </div>\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.player.getRemainingHealthPercentage * 4.94) + \"px\"}} className=\"frame_filler_health\"></div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.player.getRemainingResourcesPercentage * 4.94) + \"px\"}} className={\"frame_filler_\" + this.state.player.getResourceType.toLowerCase()}></div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <div className=\"playerExp\">\r\n                                <p>{this.state.player.getExperience}/{this.state.player.getExperienceToNextLevel} Experience</p>\r\n                                <p>{this.state.player.getExperienceToNextLevel - this.state.player.getExperience} exp to level {this.state.player.getLevel + 1}</p>\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: ((this.state.player.getExperience/this.props.gameSettings.requiredExperience[this.state.player.getLevel-1]) * 494) + \"px\"}} className=\"frame_filler_experience\"></div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    gameSettings: state.gameSettings,\r\n    enemies: state.enemies,\r\n    state: state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Arena);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./store.css\";\r\n\r\nimport { upgradeSpell, purchaseItem } from \"../../actions/actions\";\r\n\r\nclass Store extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            view: \"equipment\"\r\n        }\r\n    }\r\n\r\n    characterHasItem(itemId) {\r\n        return this.props.character.equipment.find(item => item.id === itemId);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"store\">\r\n        <div className=\"sidebar\">\r\n            <h3>Shop {this.state.view === \"spells\" ? \"Spells\" : \"Equipment\"}</h3>\r\n            <div>\r\n                <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/>\r\n                <p>{this.props.character.coins}</p>\r\n            </div>\r\n            <button className={this.state.view === \"equipment\" ? \"active equipmentBtn\" : \"equipmentBtn\"} onClick={() => { this.setState({ view: \"equipment\" })}}></button>\r\n            <button className={this.state.view === \"spells\" ? \"active spellsBtn\" : \"spellsBtn\"} onClick={() => { this.setState({ view: \"spells\"})}}></button>\r\n        </div>\r\n        { this.state.view === \"equipment\" && <div className=\"items\">\r\n            {this.props.equipment.sort((a, b) => (a.requiredLevel > b.requiredLevel) ? 1 : ((b.requiredLevel > a.requiredLevel) ? -1 : 0)).map(item => {\r\n                if(item.availableClasses.includes(this.props.character.class.id)) {\r\n                    return (<div key={item.id} className={this.characterHasItem(item.id) ? \"itemContainer owned\" : \"itemContainer\"}>\r\n                        <div>\r\n                            <div className=\"header\">\r\n                                <div className=\"spellframe\">\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + item.icon} alt=\"\" />\r\n                                </div>\r\n                                <h4>{item.name}</h4>\r\n                            </div>\r\n                            <p className=\"description\">{this.characterHasItem(item.id) ? \"You already own this item.\" : item.description}</p>\r\n                        </div>\r\n                        <div className={this.props.character.level < item.requiredLevel || this.props.character.coins < item.cost ? \"buyItem disabled\" : \"buyItem\"}>\r\n                            <div className=\"itemInfo\">\r\n                                <p className={this.props.character.level < item.requiredLevel ? \"lowLevel\" : null}>Level {item.requiredLevel}+</p>\r\n                                <h5 className=\"coinContainer\">Cost: <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/> <span className={this.props.character.coins < item.cost ? \"lowCoins\" : null}>{item.cost}</span></h5>\r\n                            </div>\r\n                            <button className=\"buyBtn\" onClick={() => {\r\n                                if(!this.characterHasItem(item)) {\r\n                                    this.props.dispatch(purchaseItem(item));\r\n                            }}}></button>\r\n                        </div>\r\n                    </div>)\r\n                } else {\r\n                    return null;\r\n                }\r\n            })}\r\n        </div>}\r\n        { this.state.view === \"spells\" && <div className=\"spells\">\r\n            {this.props.character.spells.map((spell, index) => {\r\n                let temp;\r\n                if(spell.rank < 3) {\r\n                    spell.rank = 1;\r\n                    temp = {...spell};\r\n                    spell.rank = -1;\r\n                }\r\n                else {\r\n                    temp = {...spell};\r\n                }\r\n                return (<div key={temp.id} className={spell.rank === 3 ? \"spellContainer owned\" : \"spellContainer\"}>\r\n                            <div>\r\n                                <div className=\"header\">\r\n                                    <div className=\"spellframe\">\r\n                                        <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                        <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                        <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                        <img className=\"frame_icon\" src={\"/images/\" + temp.icon} alt=\"\" />\r\n                                    </div>\r\n                                    <h4>{temp.name}</h4>\r\n                                </div>\r\n                                <p className=\"description\">{spell.rank === 3 ? \"You have already upgraded this spell to the highest rank.\": temp.description}</p>\r\n                            </div>\r\n                            <div className={this.props.character.coins < (100*temp.rank) ? \"buyItem disabled\" : \"buyItem\"}>\r\n                                <div className=\"itemInfo\">\r\n                                    <p>Rank {temp.rank} / 3</p>\r\n                                    <h5 className=\"coinContainer\">Cost: <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/> <span className={this.props.character.coins < (100*temp.rank) ? \"lowCoins\" : null}>{100*(temp.rank)}</span></h5>\r\n                                </div>\r\n                                <button className=\"upgradeBtn\" onClick={() => {\r\n                                    if(spell.rank < 3) {\r\n                                        this.props.dispatch(upgradeSpell(index, (100*temp.rank)));\r\n                                    }\r\n                                }}></button>\r\n                            </div>\r\n                        </div>)\r\n            })}\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    equipment: state.equipment,\r\n    spells: state.spells\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Store);\r\n","import React, { Component } from \"react\";\n\nimport Navigation from \"./components/navigation/navigation\";\nimport CharacterCreation from \"./components/characterCreation/characterCreation\";\nimport Credits from \"./components/credits/credits\";\nimport Character from \"./components/character/character\";\nimport Arena from \"./components/arena/arena\";\nimport Store from \"./components/store/store\";\nimport \"./App.css\";\n\nimport { connect } from \"react-redux\";\n\nimport { showCharacterCreation, loadCharacter } from \"./actions/actions\";\n\nclass App extends Component {\n    storageAvailable(type) {\n        try {\n            var storage = window[type],\n                x = '__storage_test__';\n            storage.setItem(x, x);\n            storage.removeItem(x);\n            return true;\n        }\n        catch(e) {\n            return e instanceof DOMException && (\n                // everything except Firefox\n                e.code === 22 ||\n                // Firefox\n                e.code === 1014 ||\n                // test name field too, because code might not be present\n                // everything except Firefox\n                e.name === 'QuotaExceededError' ||\n                // Firefox\n                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n                // acknowledge QuotaExceededError only if there's something already stored\n                storage.length !== 0;\n        }\n    }\n\n    getCachedCharacter() {\n        let cachedCharacter = JSON.parse(localStorage.getItem(\"character\"));\n        if(cachedCharacter) {\n            this.props.dispatch(loadCharacter(cachedCharacter, true));\n        }\n    }\n\n    componentDidMount() {\n        if(this.storageAvailable('localStorage')) {\n            this.getCachedCharacter();\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"app\">\n                <Navigation />\n                { this.props.showIntroduction && (\n                <div className=\"introduction\">\n                    <h2>Welcome, adventurer!</h2>\n                    <p>\n                    This is the arena. A web-based fighting game where you can create a\n                    character and use it to fight enemies in one-versus-one combat. Shall\n                    you win, you will be rewarded with experience points as well as\n                    coins, which you can use to purchase upgraded spells and\n                    abilities.\n                    <br />\n                    <br />\n                    Ready to create your character? \n                    </p>\n                    <div>\n                        <button className=\"createBtn\" onClick={() => this.props.dispatch(showCharacterCreation())}></button>\n                    </div>\n                </div>\n                )}\n                { this.props.showCharacterCreation && <CharacterCreation /> }\n                { this.props.showCredits && <Credits /> }\n                { this.props.showCharacter && <Character /> }\n                { this.props.showArena && <Arena /> }\n                { this.props.showStore && <Store /> }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showCharacterCreation: state.showCharacterCreation,\n    showCredits: state.showCredits,\n    showArena: state.showArena,\n    showStore: state.showStore,\n    showCharacter: state.showCharacter,\n    showIntroduction: state.showIntroduction,\n    character: state.character\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","const uuid = require('uuid/v4');\r\n\r\nlet rootReducer = (state, action) => {\r\n    let newState = {...state };\r\n    let spells = [], equipment = [];\r\n\r\n    if(newState.character.spells.length !== 0) {\r\n        spells = [...newState.character.spells];\r\n    }\r\n    if(newState.character.equipment.length !== 0) {\r\n        equipment = [...newState.character.equipment];\r\n    }\r\n    let newCharacter = {...newState.character, spells, equipment};\r\n\r\n    switch(action.type) {\r\n        case \"SHOW_CHARACTER_CREATION\":\r\n            newState.showCharacterCreation = true;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n\r\n            newState.refresh = !newState.refresh;\r\n\r\n            return newState;\r\n        case \"SHOW_CREDITS\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = true;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_ARENA\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = true;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_STORE\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = true;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_CHARACTER\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = true;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SET_CLASS\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = true;\r\n            newState.showIntroduction = false;\r\n\r\n            newCharacter.class = action.selectedClass;\r\n            newCharacter.spells = action.spells;\r\n            newCharacter.equipment = [];\r\n            newCharacter.name = action.name;\r\n            newCharacter.level = 1;\r\n            newCharacter.coins = 0;\r\n            newCharacter.experience = 0;\r\n            newCharacter.uid = uuid();\r\n\r\n            localStorage.setItem(\"character\", JSON.stringify(newCharacter));\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"GIVE_LOOT\":\r\n            newCharacter.experience += action.experience;\r\n            newCharacter.coins += action.coins;\r\n\r\n            if(newCharacter.experience > newState.gameSettings.requiredExperience[newState.character.level-1]) {\r\n                newCharacter.experience -= newState.gameSettings.requiredExperience[newState.character.level-1];\r\n                newCharacter.level += 1;\r\n            }\r\n\r\n            localStorage.setItem(\"character\", JSON.stringify(newCharacter));\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"UPGRADE_SPELL\":\r\n            if(newCharacter.coins >= action.cost) {\r\n                newCharacter.spells[action.spellIndex].rank = 1;\r\n                newCharacter.coins -= action.cost;\r\n            }\r\n            \r\n            localStorage.setItem(\"character\", JSON.stringify(newCharacter));\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"PURCHASE_ITEM\":\r\n            if(newCharacter.coins >= action.item.cost) {\r\n                newCharacter.equipment.push(action.item);\r\n                newCharacter.coins -= action.item.cost;\r\n            }\r\n\r\n            localStorage.setItem(\"character\", JSON.stringify(newCharacter));\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"LOAD_CHARACTER\":\r\n            if(action.cached !== true) {\r\n                localStorage.setItem(\"character\", JSON.stringify(action.character));\r\n            }\r\n            \r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = true;\r\n            newState.showIntroduction = false;\r\n\r\n            newCharacter = action.character;\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","const classes = {\r\n    classes: [\r\n        {\r\n            id: 0,\r\n            name: \"Warrior\",\r\n            description: \"A warrior is a brutal and tough class, warriors have a high health pool and moderate damage.\",\r\n            icon: \"icons/classes/warrior.png\",\r\n            resourceType: \"Energy\",\r\n            healthModifier: 1.9,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.5,\r\n            healingModifier: 1,\r\n            spells: [0, 4, 5, 10]\r\n        }, {\r\n            id: 1,\r\n            name: \"Archer\",\r\n            description: \"An archer is an agile and fast-paced class, archers have a moderate health pool and damage.\",\r\n            icon: \"icons/classes/archer.png\",\r\n            resourceType: \"Mana\",\r\n            healthModifier: 1.5,\r\n            resourceModifier: 1.3,\r\n            damageModifier: 1.5,\r\n            healingModifier: 1.5,\r\n            spells: [0, 3, 2, 1]\r\n        }, {\r\n            id: 2,\r\n            name: \"Rogue\",\r\n            description: \"A rogue is a silent but deadly class, rogues have a low health pool and high damage.\",\r\n            icon: \"icons/classes/rogue.png\",\r\n            resourceType: \"Energy\",\r\n            healthModifier: 1.3,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.8,\r\n            healingModifier: 1,\r\n            spells: [0, 6, 7, 10]\r\n        }, {\r\n            id: 3,\r\n            name: \"Wizard\",\r\n            description: \"A wizard is an extremely dangerous class, wizards have a very low health pool and extremely high damage.\",\r\n            icon: \"icons/classes/wizard.png\",\r\n            resourceType: \"Mana\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1.8,\r\n            damageModifier: 2,\r\n            healingModifier: 2,\r\n            spells: [0, 8, 9, 1]\r\n        }, \r\n    ]\r\n}\r\n\r\nexport default classes;","const enemies = {\r\n    enemies: [\r\n        {\r\n            id: 0,\r\n            name: \"Evil Imp\",\r\n            icon: \"icons/enemies/evil_imp.png\",\r\n            level: 1,\r\n            healthModifier: 1,\r\n            damageModifier: 1\r\n        }, {\r\n            id: 1,\r\n            name: \"Twin Hydras\",\r\n            icon: \"icons/enemies/twin_hydras.png\",\r\n            level: 2,\r\n            healthModifier: 1.25,\r\n            damageModifier: 0.85\r\n        },{\r\n            id: 2,\r\n            name: \"Gnarly Goblin\",\r\n            icon: \"icons/enemies/gnarly_goblin.png\",\r\n            level: 4,\r\n            healthModifier: 1.5,\r\n            damageModifier: 0.7\r\n        }, {\r\n            id: 3,\r\n            name: \"Spark Spirit\",\r\n            icon: \"icons/enemies/spark_spirit.png\",\r\n            level: 6,\r\n            healthModifier: 1,\r\n            damageModifier: 1.7\r\n        }, {\r\n            id: 4,\r\n            name: \"Greater Demon\",\r\n            icon: \"icons/enemies/greater_demon.png\",\r\n            level: 8,\r\n            healthModifier: 2.1,\r\n            damageModifier: 1.9\r\n        }, {\r\n            id: 5,\r\n            name: \"The Beast\",\r\n            icon: \"icons/enemies/the_beast.png\",\r\n            level: 10,\r\n            healthModifier: 2.5,\r\n            damageModifier: 3\r\n        }\r\n    ]\r\n}\r\n\r\nexport default enemies;","const spells = {\r\n    spells: [\r\n        {\r\n            id: 0,\r\n            name: \"Attack\",\r\n            icon: \"icons/spells/attack.png\",\r\n            _description: \"Attack your enemy for [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 0,\r\n            baseDamage: 15,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 2, 4]\r\n        }, {\r\n            id: 1,\r\n            name: \"Heal\",\r\n            icon: \"icons/spells/heal.png\",\r\n            _description: \"Cast a heal on yourself, restoring [h] health points.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 15,\r\n            baseDamage: 0,\r\n            baseHealing: 30,\r\n            _rank: 1,\r\n            rankModifier: [1, 2, 3.5]\r\n        }, {\r\n            id: 2,\r\n            name: \"Charged Arrow\",\r\n            icon: \"icons/spells/charged_arrow.png\",\r\n            _description: \"Launches a charged arrow at your enemy, dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 30,\r\n            baseDamage: 35,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.5, 2.5]\r\n        }, {\r\n            id: 3,\r\n            name: \"Piercing Shot\",\r\n            icon: \"icons/spells/piercing_shot.png\",\r\n            _description: \"An extremely strong arrow pierces your enemy, instantly dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 10,\r\n            baseDamage: 25,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.5, 2.15]\r\n        }, {\r\n            id: 4,\r\n            name: \"Quick Strike\",\r\n            icon: \"icons/spells/quick_strike.png\",\r\n            _description: \"A quick attack that deals [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 10,\r\n            baseDamage: 20,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.55, 2.15]\r\n        }, {\r\n            id: 5,\r\n            name: \"Skull Bash\",\r\n            icon: \"icons/spells/skull_bash.png\",\r\n            _description: \"A brutal slam that deals [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 35,\r\n            baseDamage: 30,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.65, 2.5]\r\n        }, {\r\n            id: 6,\r\n            name: \"Ambush\",\r\n            icon: \"icons/spells/ambush.png\",\r\n            _description: \"Stab your target from behind, dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 15,\r\n            baseDamage: 25,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.75, 2.15]\r\n        }, {\r\n            id: 7,\r\n            name: \"Venomous Vial\",\r\n            icon: \"icons/spells/venomous_vial.png\",\r\n            _description: \"Throw a vial of poison at your target, dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 25,\r\n            baseDamage: 30,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.55, 1.85]\r\n        }, {\r\n            id: 8,\r\n            name: \"Incinerate\",\r\n            icon: \"icons/spells/incinerate.png\",\r\n            _description: \"Set your target ablaze, dealing [d] damage.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 20,\r\n            baseDamage: 30,\r\n            baseHealing: 0,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.55, 2.25]\r\n        }, {\r\n            id: 9,\r\n            name: \"Transfusion\",\r\n            icon: \"icons/spells/transfusion.png\",\r\n            _description: \"Fuse your energy with the enemy, dealing [d] damage, and restoring [h] health points to you.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 60,\r\n            baseDamage: 20,\r\n            baseHealing: 20,\r\n            _rank: 1,\r\n            rankModifier: [1, 1.55, 2.25]\r\n        }, {\r\n            id: 10,\r\n            name: \"Health Potion\",\r\n            icon: \"icons/spells/health_potion.png\",\r\n            _description: \"Drink a health potion, restoring [h] health points.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[d\\]/g, this.damage);\r\n                description = description.replace(/\\[h\\]/g, this.healing);\r\n                return description;\r\n            },\r\n            get damage() {\r\n                return Math.floor(this.baseDamage * this.rankModifier[this.rank-1]);\r\n            },\r\n            get healing() {\r\n                return Math.floor(this.baseHealing * this.rankModifier[this.rank-1]);\r\n            },\r\n            get rank() {\r\n                return this._rank;\r\n            },\r\n            set rank(n) {\r\n                this._rank += n;\r\n            },\r\n            resourceCost: 0,\r\n            baseDamage: 0,\r\n            baseHealing: 20,\r\n            _rank: 1,\r\n            rankModifier: [1, 2.5, 4.5]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default spells;","const equipment = {\r\n    equipment: [\r\n        {\r\n            id: 0,\r\n            name: \"Scroll Of Knowledge\",\r\n            _description: \"Increases your max resources by [r]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/scroll_of_knowledge.png\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1.2,\r\n            damageModifier: 1,\r\n            healingModifier: 1,\r\n            cost: 100,\r\n            requiredLevel: 3,\r\n            availableClasses: [3]\r\n        }, {\r\n            id: 1,\r\n            name: \"Robe of Wizardry\",\r\n            _description: \"Increases your damage by [d]%, healing by [h]% and health by [hp]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/robe_of_wizardry.png\",\r\n            healthModifier: 1.15,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.175,\r\n            healingModifier: 1.15,\r\n            cost: 300,\r\n            requiredLevel: 4,\r\n            availableClasses: [1, 3]\r\n        }, {\r\n            id: 2,\r\n            name: \"Hat of Wizardry\",\r\n            _description: \"Increases your damage and healing by [d]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/hat_of_wizardry.png\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.25,\r\n            healingModifier: 1.25,\r\n            cost: 250,\r\n            requiredLevel: 2,\r\n            availableClasses: [1, 3]\r\n        }, {\r\n            id: 3,\r\n            name: \"Azariah's Chain of Vitality\",\r\n            _description: \"Increases your health by [hp]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/azariahs_chain_of_vitality.png\",\r\n            healthModifier: 1.35,\r\n            resourceModifier: 1,\r\n            damageModifier: 1,\r\n            healingModifier: 1,\r\n            cost: 200,\r\n            requiredLevel: 4,\r\n            availableClasses: [0, 1, 2, 3]\r\n        }, {\r\n            id: 4,\r\n            name: \"Bulwark\",\r\n            _description: \"Increases your health by [hp]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/bulwark.png\",\r\n            healthModifier: 1.2,\r\n            resourceModifier: 1,\r\n            damageModifier: 1,\r\n            healingModifier: 1,\r\n            cost: 100,\r\n            requiredLevel: 2,\r\n            availableClasses: [0, 2]\r\n        }, {\r\n            id: 5,\r\n            name: \"Chainmail of Endurance\",\r\n            _description: \"Increases your damage by [d]% and health by [hp]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/chainmail_of_endurance.png\",\r\n            healthModifier: 1.5,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.25,\r\n            healingModifier: 1,\r\n            cost: 400,\r\n            requiredLevel: 6,\r\n            availableClasses: [0, 2]\r\n        }, {\r\n            id: 6,\r\n            name: \"Elven Headguard\",\r\n            _description: \"Increases your damage, healing and health by [d]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/elven_headguard.png\",\r\n            healthModifier: 1.25,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.25,\r\n            healingModifier: 1.25,\r\n            cost: 500,\r\n            requiredLevel: 8,\r\n            availableClasses: [1, 2]\r\n        }, {\r\n            id: 7,\r\n            name: \"Jeweled Chalice\",\r\n            _description: \"Increases your damage, healing and health by [d]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/jeweled_chalice.png\",\r\n            healthModifier: 1.25,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.25,\r\n            healingModifier: 1.25,\r\n            cost: 500,\r\n            requiredLevel: 8,\r\n            availableClasses: [3, 4]\r\n        }, {\r\n            id: 8,\r\n            name: \"Signet of Death\",\r\n            _description: \"Increases your damage by [d]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/signet_of_death.png\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1,\r\n            damageModifier: 1.4,\r\n            healingModifier: 1,\r\n            cost: 700,\r\n            requiredLevel: 10,\r\n            availableClasses: [0, 1, 2, 3]\r\n        }, {\r\n            id: 9,\r\n            name: \"Tribal Pendant\",\r\n            _description: \"Increases your healing by [h]%.\",\r\n            get description() {\r\n                let description = this._description;\r\n                description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n                description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n                description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n                description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n                return description;\r\n            },\r\n            icon: \"icons/equipment/tribal_pendant.png\",\r\n            healthModifier: 1,\r\n            resourceModifier: 1,\r\n            damageModifier: 1,\r\n            healingModifier: 1.6,\r\n            cost: 700,\r\n            requiredLevel: 10,\r\n            availableClasses: [0, 1, 2, 3]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default equipment;","import classes from \"./classes\";\r\nimport enemies from \"./enemies\";\r\nimport spells from \"./spells\";\r\nimport equipment from \"./equipment\";\r\n\r\nconst initialState = {\r\n    showIntroduction: true,\r\n    showCharacterCreation: false,\r\n    showCredits: false,\r\n    showStore: false,\r\n    showArena: false,\r\n    showCharacter: false,\r\n    ...enemies,\r\n    ...classes,\r\n    ...spells,\r\n    ...equipment,\r\n    gameSettings: {\r\n        baseHealthPerLevel: [100, 120, 200, 250, 300, 400, 475, 550, 700, 900, 1200, 1350, 1500, 1650],\r\n        baseResourcesPerLevel: [200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330],\r\n        requiredExperience: [100, 200, 400, 700, 1000, 1400, 1900, 2500, 2900, 3700, 4600, 5500, 7250, 9000]\r\n    },\r\n    character: {\r\n        class: null,\r\n        coins: 0,\r\n        level: 1,\r\n        experience: 0,\r\n        spells: [],\r\n        equipment: [],\r\n        name: \"\",\r\n        uid: \"\"\r\n    }\r\n}\r\n\r\nexport default initialState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from \"./reducers/reducers.js\";\n\nimport initialState from \"./states/initialState.js\";\n\nconst store = createStore(rootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render((<Provider store={store}><App /></Provider>), document.getElementById('root'));"],"sourceRoot":""}