{"version":3,"sources":["actions/actions.js","components/navigation/navigation.js","states/spells.js","classes/spell.js","states/classes.js","components/characterCreation/newCharacter.js","classes/equipment.js","components/characterCreation/loadCharacter.js","components/characterCreation/characterCreation.js","components/credits/credits.js","components/character/character.js","classes/player.js","classes/enemy.js","states/enemies.js","components/arena/arena.js","states/equipment.js","components/store/store.js","App.js","reducers/reducers.js","states/initialState.js","index.js"],"names":["setAccountId","type","accountId","arguments","length","undefined","Navigation","_this","this","react_default","a","createElement","id","className","src","alt","props","showCharacterCreation","onClick","dispatch","showCharacter","disabled","characterClass","showArena","showStore","showCredits","Component","connect","state","character","class","spells","name","icon","description","resourceCost","baseDamage","baseHealing","rank","rankModifier","Spell","spell","Object","classCallCheck","_id","_name","_icon","_description","_resourceCost","_baseDamage","_baseHealing","_rank","_rankModifier","toConsumableArray","replace","concat","Math","floor","damage","healing","newRank","classes","resourceType","healthModifier","resourceModifier","damageModifier","healingModifier","NewCharacter","possibleConstructorReturn","getPrototypeOf","call","selectedId","characterName","nameError","handleNameChange","bind","assertThisInitialized","spellArray","map","setState","selectedClass","getAvailableSpells","setClass","event","target","value","match","spellList","_this2","availableSpells","forEach","availableSpell","push","_this3","maxLength","placeholder","onChange","currentClass","key","toLowerCase","selectClass","settings","Equipment","equipment","_healthModifier","_resourceModifier","_damageModifier","_healingModifier","_cost","cost","_requiredLevel","requiredLevel","_availableClasses","availableClasses","LoadCharacter","characters","loadingFinished","errorOccured","fetch","headers","Accept","Content-Type","method","then","res","json","status","catch","err","uid","level","round","reduce","previous","current","baseHealthPerLevel","baseResourcesPerLevel","toFixed","modifier","index","cached","loadCharacter","CharacterCreation","view","refresh","nextProps","components_characterCreation_newCharacter","components_characterCreation_loadCharacter","Credits","href","Character","saved","saveableCharacter","objectSpread","properties","body","JSON","stringify","setTimeout","console","log","_this4","saveToDatabase","deleteFromDatabase","item","Player","data","experienceToNextLevel","maxHealth","maxResources","experience","currentHealth","currentResources","spellIndex","randomizer","random","Enemy","enemies","Arena","arenaLevel","playerTurn","latestAction","showLatestAction","player","enemy","loot","coins","requiredExperience","addSpellEventListeners","getRemainingHealth","distributeLoot","getLevel","giveLoot","startArena","_this5","nextLevel","_this6","checkForWinner","actionText","values","attack","getSpells","getName","receiveAttack","receiveHeal","window","handleEnemyAttack","_this7","_this8","addEventListener","container","document","getElementById","children","classList","contains","add","remove","handlePlayerAttack","_this9","Fragment","getIcon","n","indicatorStyle","left","style","getMaxHealth","width","getRemainingHealthPercentage","startNextLevel","resetArena","getRemainingResources","getResourceType","getClass","getMaxResources","getRemainingResourcesPercentage","getExperience","getExperienceToNextLevel","Store","equipmentArray","itemId","find","sort","b","includes","characterHasItem","purchaseItem","storeSpell","newSpell","App","storage","x","setItem","removeItem","e","DOMException","code","storageAvailable","localStorage","getItem","navigation_navigation","showIntroduction","characterCreation_characterCreation","credits_credits","components_character_character","arena_arena","store_store","uuid","require","rootReducer","action","newState","newCharacter","initialState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0"],"mappings":"6aA6EIA,SAAe,WACf,MAAO,CACHC,KAAM,iBACNC,UAHiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QCtE1BG,mLACK,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAK,qBAAsBC,IAAI,KACrDN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMC,sBAAwB,SAAW,MAC5DR,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMX,EAAKS,MAAMG,SDbnC,CACHlB,KAAM,8BCYF,eAEFQ,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMI,cAAgB,SAAW,MACpDX,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMX,EAAKS,MAAMG,SDQnC,CACHlB,KAAM,oBCT2DoB,SAAwC,OAA9Bb,KAAKQ,MAAMM,gBAAlF,iBAEFb,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMO,UAAY,SAAW,MAChDd,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMX,EAAKS,MAAMG,SDPnC,CACHlB,KAAM,gBCMuDoB,SAAwC,OAA9Bb,KAAKQ,MAAMM,gBAA9E,mBAEFb,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMQ,UAAY,SAAW,MAChDf,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMX,EAAKS,MAAMG,SDJnC,CACHlB,KAAM,gBCGuDoB,SAAwC,OAA9Bb,KAAKQ,MAAMM,gBAA9E,UAEFb,EAAAC,EAAAC,cAAA,MAAIE,UAAYL,KAAKQ,MAAMS,YAAc,SAAW,MAClDhB,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMX,EAAKS,MAAMG,SDnBnC,CACHlB,KAAM,mBCkBF,qBAnBayB,aAsCVC,cAXS,SAAAC,GACtB,MAAO,CACLX,sBAAuBW,EAAMX,sBAC7BQ,YAAaG,EAAMH,YACnBF,UAAWK,EAAML,UACjBC,UAAWI,EAAMJ,UACjBJ,cAAeQ,EAAMR,cACrBE,eAAgBM,EAAMC,UAAUC,QAIrBH,CAAyBrB,kBCqEzByB,SAlHA,CACX,CACInB,GAAI,EACJoB,KAAM,SACNC,KAAM,0BACNC,YAAa,oCACbC,aAAc,EACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,EAAG,IACtB,CACC3B,GAAI,EACJoB,KAAM,OACNC,KAAM,wBACNC,YAAa,wDACbC,aAAc,GACdC,WAAY,EACZC,YAAa,GACbC,KAAM,EACNC,aAAc,CAAC,EAAG,EAAG,MACtB,CACC3B,GAAI,EACJoB,KAAM,gBACNC,KAAM,iCACNC,YAAa,8DACbC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,IAAK,MACxB,CACC3B,GAAI,EACJoB,KAAM,gBACNC,KAAM,iCACNC,YAAa,8EACbC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,IAAK,OACxB,CACC3B,GAAI,EACJoB,KAAM,eACNC,KAAM,gCACNC,YAAa,wCACbC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,IAAK,OACxB,CACC3B,GAAI,EACJoB,KAAM,aACNC,KAAM,8BACNC,YAAa,uCACbC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,EAAG,OACtB,CACC3B,GAAI,EACJoB,KAAM,SACNC,KAAM,0BACNC,YAAa,oDACbC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,KAAM,OACzB,CACC3B,GAAI,EACJoB,KAAM,gBACNC,KAAM,iCACNC,YAAa,6DACbC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,KAAM,OACzB,CACC3B,GAAI,EACJoB,KAAM,aACNC,KAAM,8BACNC,YAAa,8CACbC,aAAc,GACdC,WAAY,GACZC,YAAa,EACbC,KAAM,EACNC,aAAc,CAAC,EAAG,KAAM,OACzB,CACC3B,GAAI,EACJoB,KAAM,cACNC,KAAM,+BACNC,YAAa,+FACbC,aAAc,GACdC,WAAY,GACZC,YAAa,GACbC,KAAM,EACNC,aAAc,CAAC,EAAG,KAAM,OACzB,CACC3B,GAAI,GACJoB,KAAM,gBACNC,KAAM,iCACNC,YAAa,sDACbC,aAAc,EACdC,WAAY,EACZC,YAAa,GACbC,KAAM,EACNC,aAAc,CAAC,EAAG,IAAK,gBCvChBC,aAtEX,SAAAA,EAAYC,GAAQC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAgC,GAChBhC,KAAKoC,IAAMH,EAAM7B,GACjBJ,KAAKqC,MAAQJ,EAAMT,KACnBxB,KAAKsC,MAAQL,EAAMR,KACnBzB,KAAKuC,aAAeN,EAAMP,YAC1B1B,KAAKwC,cAAgBP,EAAMN,aAC3B3B,KAAKyC,YAAcR,EAAML,WACzB5B,KAAK0C,aAAeT,EAAMJ,YAC1B7B,KAAK2C,MAAQV,EAAMH,KACnB9B,KAAK4C,cAAgBX,EAAMF,oEAI3B,MAAO,CACH3B,GAAIJ,KAAKoC,IACTZ,KAAMxB,KAAKqC,MACXZ,KAAMzB,KAAKsC,MACXZ,YAAa1B,KAAKuC,aAClBZ,aAAc3B,KAAKwC,cACnBZ,WAAY5B,KAAKyC,YACjBZ,YAAa7B,KAAK0C,aAClBZ,KAAM9B,KAAK2C,MACXZ,aAAaG,OAAAW,EAAA,EAAAX,CAAKlC,KAAK4C,2CAK3B,OAAO5C,KAAKoC,iCAIZ,OAAOpC,KAAKqC,mCAIZ,OAAOrC,KAAKsC,2CAIZ,OAAOtC,KAAKwC,mDAIZ,OAAOxC,KAAK4C,kDAIZ,IAAIlB,EAAc1B,KAAKuC,aAGvB,OADAb,GADAA,EAAcA,EAAYoB,QAAQ,SAApB,GAAAC,OAAiCC,KAAKC,MAAkB,GAAZjD,KAAKkD,QAAjD,KAAAH,OAAgEC,KAAKC,MAAkB,IAAZjD,KAAKkD,WACpEJ,QAAQ,SAApB,GAAAC,OAAiCC,KAAKC,MAAmB,GAAbjD,KAAKmD,SAAjD,KAAAJ,OAAiEC,KAAKC,MAAmB,IAAbjD,KAAKmD,0CAK/F,OAAOH,KAAKC,MAAMjD,KAAKyC,YAAczC,KAAK+B,aAAa/B,KAAK2C,MAAM,oCAIlE,OAAOK,KAAKC,MAAMjD,KAAK0C,aAAe1C,KAAK+B,aAAa/B,KAAK2C,MAAM,iCAInE,OAAO3C,KAAK2C,oBAGPS,GACLpD,KAAK2C,MAAQS,WCnBNC,EAhDC,CACZ,CACIjD,GAAI,EACJoB,KAAM,UACNE,YAAa,+FACbD,KAAM,4BACN6B,aAAc,SACdC,eAAgB,IAChBC,iBAAkB,EAClBC,eAAgB,IAChBC,gBAAiB,EACjBnC,OAAQ,CAAC,EAAG,EAAG,EAAG,KACnB,CACCnB,GAAI,EACJoB,KAAM,SACNE,YAAa,8FACbD,KAAM,2BACN6B,aAAc,OACdC,eAAgB,IAChBC,iBAAkB,IAClBC,eAAgB,IAChBC,gBAAiB,IACjBnC,OAAQ,CAAC,EAAG,EAAG,EAAG,IACnB,CACCnB,GAAI,EACJoB,KAAM,QACNE,YAAa,uFACbD,KAAM,0BACN6B,aAAc,SACdC,eAAgB,IAChBC,iBAAkB,EAClBC,eAAgB,IAChBC,gBAAiB,EACjBnC,OAAQ,CAAC,EAAG,EAAG,EAAG,KACnB,CACCnB,GAAI,EACJoB,KAAM,SACNE,YAAa,2GACbD,KAAM,2BACN6B,aAAc,OACdC,eAAgB,EAChBC,iBAAkB,IAClBC,eAAgB,EAChBC,gBAAiB,EACjBnC,OAAQ,CAAC,EAAG,EAAG,EAAG,KCjCpBoC,cACF,SAAAA,IAAc,IAAA5D,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA2D,IACV5D,EAAAmC,OAAA0B,EAAA,EAAA1B,CAAAlC,KAAAkC,OAAA2B,EAAA,EAAA3B,CAAAyB,GAAAG,KAAA9D,QAEKoB,MAAQ,CACT2C,WAAY,EACZC,cAAe,GACfC,WAAW,EACX1C,OAAQ,IAGZxB,EAAKmE,iBAAmBnE,EAAKmE,iBAAiBC,KAAtBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAnC,KAVdA,mFAcV,IAAIsE,EAAa9C,EAAO+C,IAAI,SAAArC,GAAK,OAAI,IAAID,EAAMC,KAC/CjC,KAAKuE,SAAS,CAAEhD,OAAQ8C,wCAGhBG,GACR,IAAIjD,EAASvB,KAAKyE,mBAAmBD,EAAcjD,QACnDvB,KAAKQ,MAAMG,SLFJ,SAAC6D,EAAejD,EAAQC,GACnC,MAAO,CACH/B,KAAM,YACN+E,gBACAjD,SACAC,QKHoBkD,CAASF,EAAejD,EAAQvB,KAAKoB,MAAM4C,yDAGlDW,GACb,IACInD,EAAOmD,EAAMC,OAAOC,MACrBrD,EAAKsD,MAFE,aAGN9E,KAAKuE,SAAS,CAAEP,cAAexC,EAAMyC,WAAW,IAGhDjE,KAAKuE,SAAS,CAAEN,WAAW,+CAIhBc,GAAW,IAAAC,EAAAhF,KACtBiF,EAAkB,GAUtB,OARAF,EAAUG,QAAQ,SAAAC,GACdH,EAAK5D,MAAMG,OAAO2D,QAAQ,SAAAjD,GACnBA,EAAM7B,KAAO+E,GACZF,EAAgBG,KAAKnD,OAK1BgD,mCAGJ,IAAAI,EAAArF,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACNH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,SAAOmF,UAAU,KAAK7F,KAAK,OAAO8F,YAAY,OAAOC,SAAWxF,KAAKkE,iBAAmB7D,UAAWL,KAAKoB,MAAM6C,UAAY,QAAU,OAClIjE,KAAKoB,MAAM6C,WAAahE,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,4EAE9BJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,qBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACVgD,EAAQiB,IAAI,SAAAmB,GAAY,OACrBxF,EAAAC,EAAAC,cAAA,OAAKuF,IAAKD,EAAarF,GAAIC,UAAWgF,EAAKjE,MAAM2C,aAAe0B,EAAarF,GAAK,gCAAkC,uBAAwBM,QAAS,kBAAM2E,EAAKd,SAAS,CAAER,WAAY0B,EAAarF,OAChMH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,IAAK,2CAA4CC,IAAI,KACnFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAamF,EAAahE,KAAMlB,IAAI,SAIjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVgD,EAAQiB,IAAI,SAAAmB,GAAY,OACzBxF,EAAAC,EAAAC,cAAA,OAAKE,UAAYgF,EAAKjE,MAAM2C,aAAe0B,EAAarF,GAAK,iBAAmB,QAASsF,IAAKD,EAAarF,IACvGH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,IAAK,2CAA4CC,IAAI,KACnFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAamF,EAAahE,KAAMlB,IAAI,MAErEN,EAAAC,EAAAC,cAAA,UAAKsF,EAAajE,OAEtBvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeoF,EAAa/D,aACzCzB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACdgF,EAAKZ,mBAAmBgB,EAAalE,QAAQ+C,IAAI,SAAArC,GAAK,OACnDhC,EAAAC,EAAAC,cAAA,OAAKuF,IAAKzD,EAAM7B,GAAIC,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAa2B,EAAMR,KAAMlB,IAAI,MAElEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAa4B,EAAMT,MACP,IAAvBS,EAAMN,cACJ1B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgB4B,EAAMN,aAAnC,IAAkD8D,EAAanC,aAAaqC,gBAGpF1F,EAAAC,EAAAC,cAAA,iBAAS8B,EAAMH,OAEnB7B,EAAAC,EAAAC,cAAA,SACK8B,EAAMP,kBAMvBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYK,QAAS,kBAAM2E,EAAKO,YAAYH,IAAe5E,SAAUwE,EAAKjE,MAAM4C,cAAcpE,OAAS,iBA3GlHsB,aA2HZC,cANS,SAAAC,GACtB,MAAO,CACLyE,SAAUzE,EAAMyE,WAIL1E,CAAyBwC,GCrDzBmC,oBAhFX,SAAAA,EAAYC,GAAY7D,OAAAC,EAAA,EAAAD,CAAAlC,KAAA8F,GACpB9F,KAAKoC,IAAM2D,EAAU3F,GACrBJ,KAAKqC,MAAQ0D,EAAUvE,KACvBxB,KAAKsC,MAAQyD,EAAUtE,KACvBzB,KAAKuC,aAAewD,EAAUrE,YAC9B1B,KAAKgG,gBAAkBD,EAAUxC,eACjCvD,KAAKiG,kBAAoBF,EAAUvC,iBACnCxD,KAAKkG,gBAAkBH,EAAUtC,eACjCzD,KAAKmG,iBAAmBJ,EAAUrC,gBAClC1D,KAAKoG,MAAQL,EAAUM,KACvBrG,KAAKsG,eAAiBP,EAAUQ,cAChCvG,KAAKwG,kBAAoBT,EAAUU,wEAInC,MAAO,CACHrG,GAAIJ,KAAKoC,IACTZ,KAAMxB,KAAKqC,MACXZ,KAAMzB,KAAKsC,MACXZ,YAAa1B,KAAKuC,aAClBgB,eAAgBvD,KAAKgG,gBACrBxC,iBAAkBxD,KAAKiG,kBACvBxC,eAAgBzD,KAAKkG,gBACrBxC,gBAAiB1D,KAAKmG,iBACtBE,KAAMrG,KAAKoG,MACXG,cAAevG,KAAKsG,eACpBG,iBAAiBvE,OAAAW,EAAA,EAAAX,CAAKlC,KAAKwG,+CAK/B,OAAOxG,KAAKoC,iCAIZ,OAAOpC,KAAKqC,mCAIZ,OAAOrC,KAAKsC,0CAIZ,IAAIZ,EAAc1B,KAAKuC,aAKvB,OADAb,GADAA,GADAA,GADAA,EAAcA,EAAYoB,QAAQ,SAAUE,KAAKC,MAA8B,IAAxBjD,KAAKwD,kBAA0B,MAC5DV,QAAQ,UAAWE,KAAKC,MAA4B,IAAtBjD,KAAKuD,gBAAwB,MAC3DT,QAAQ,SAAUE,KAAKC,MAA4B,IAAtBjD,KAAKyD,gBAAwB,MAC1DX,QAAQ,SAAUE,KAAKC,MAA6B,IAAvBjD,KAAK0D,iBAAyB,4CAKrF,OAAO1D,KAAKgG,yDAIZ,OAAOhG,KAAKiG,yDAIZ,OAAOjG,KAAKkG,wDAIZ,OAAOlG,KAAKmG,8CAIZ,OAAOnG,KAAKoG,4CAIZ,OAAOpG,KAAKsG,wDAIZ,OAAOtG,KAAKwG,4BCpEdE,cACF,SAAAA,IAAc,IAAA3G,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA0G,IACV3G,EAAAmC,OAAA0B,EAAA,EAAA1B,CAAAlC,KAAAkC,OAAA2B,EAAA,EAAA3B,CAAAwE,GAAA5C,KAAA9D,QAEKoB,MAAQ,CACTuF,WAAY,GACZC,iBAAiB,EACjBC,cAAc,GANR9G,mFAUM,IAAAiF,EAAAhF,KAChB8G,MAAM,mBAAqB9G,KAAKQ,MAAMd,UAAW,CAC7CqH,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,OAAQ,QAEXC,KAAK,SAAAC,GACFA,EAAIC,OAAOF,KAAK,SAAAR,IACZA,EAAaA,EAAWrC,IAAI,SAAAjD,GAOxB,OANAA,EAAUE,OAASF,EAAUE,OAAO+C,IAAI,SAAArC,GACpC,OAAO,IAAID,EAAMC,KAErBZ,EAAU0E,UAAY1E,EAAU0E,UAAUzB,IAAI,SAAAyB,GAC1C,OAAO,IAAID,EAAUC,KAElB1E,KAGGzB,OAAS,EACnBoF,EAAKT,SAAS,CAAEoC,aAAYC,iBAAiB,EAAMC,cAAc,IAGjE7B,EAAKT,SAAS,CAAE+C,OAAQ,yBAA0BV,iBAAiB,EAAMC,cAAc,QAIlGU,MAAM,SAAAC,GACHxC,EAAKT,SAAS,CAAEsC,cAAc,uCAI7B,IAAAxB,EAAArF,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACFJ,KAAKoB,MAAMwF,kBAAoB5G,KAAKoB,MAAMyF,cAAgB5G,EAAAC,EAAAC,cAAA,kCAC3DH,KAAKoB,MAAMyF,cAAgB5G,EAAAC,EAAAC,cAAA,yDAC3BH,KAAKoB,MAAMkG,QAAUrH,EAAAC,EAAAC,cAAA,SAAIH,KAAKoB,MAAMkG,QACpCtH,KAAKoB,MAAMuF,WAAW/G,OAAS,GAC5BK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACVL,KAAKoB,MAAMuF,WAAWrC,IAAI,SAAAjD,GACvB,OACIpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYqF,IAAKrE,EAAUoG,KACtCxH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,IAAK,2CAA4CC,IAAI,KACnFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAae,EAAUC,MAAMG,KAAMlB,IAAI,MAE5EN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,UAAKkB,EAAUG,MACfvB,EAAAC,EAAAC,cAAA,kBAAUkB,EAAUqG,MAApB,IAA2BzH,EAAAC,EAAAC,cAAA,YAAOkB,EAAUC,MAAME,SAG1DvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAI6C,KAAK2E,MAAMtG,EAAU0E,UAAU6B,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQvE,gBAAgB,GAAKlC,EAAUC,MAAMiC,eAAiB8B,EAAK7E,MAAMqF,SAASkC,mBAAmB1G,EAAUqG,MAAM,MAErMzH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKkB,EAAUC,MAAMgC,cACrBrD,EAAAC,EAAAC,cAAA,SAAI6C,KAAK2E,MAAMtG,EAAU0E,UAAU6B,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQtE,kBAAkB,GAAKnC,EAAUC,MAAMkC,iBAAmB6B,EAAK7E,MAAMqF,SAASmC,sBAAsB3G,EAAUqG,MAAM,MAE5MzH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAKkB,EAAU0E,UAAU6B,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQrE,gBAAgB,GAAKpC,EAAUC,MAAMmC,gBAAgBwE,QAAQ,GAAvI,MAEJhI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAKkB,EAAU0E,UAAU6B,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQpE,iBAAiB,GAAKrC,EAAUC,MAAMoC,iBAAiBuE,QAAQ,GAAzI,OAGRhI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACVgB,EAAUE,OAAO+C,IAAI,SAAArC,GAClB,OACIhC,EAAAC,EAAAC,cAAA,OAAKuF,IAAKzD,EAAM7B,IACZH,EAAAC,EAAAC,cAAA,UAAK8B,EAAMT,MACXvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACV4B,EAAMF,aAAauC,IAAI,SAAC4D,EAAUC,GAAX,OAAqBlI,EAAAC,EAAAC,cAAA,OAAKuF,IAAKyC,EAAO9H,UAAW4B,EAAMH,KAAOqG,EAAQ,UAAW,uBAOjIlI,EAAAC,EAAAC,cAAA,UAAQE,UAAU,OAAOK,QAAS,kBAAM2E,EAAK7E,MAAMG,SP5CnE,SAACU,EAAW+G,GAC5B,MAAO,CACH3I,KAAM,iBACN4B,YACA+G,UOwCwFC,CAAchH,mBAlGlFH,aAqHbC,cARS,SAAAC,GACtB,MAAO,CACLC,UAAWD,EAAMC,UACjBwE,SAAUzE,EAAMyE,SAChBnG,UAAW0B,EAAM1B,YAINyB,CAAyBuF,GCtHlC4B,cACF,SAAAA,EAAY9H,GAAO,IAAAT,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAsI,IACfvI,EAAAmC,OAAA0B,EAAA,EAAA1B,CAAAlC,KAAAkC,OAAA2B,EAAA,EAAA3B,CAAAoG,GAAAxE,KAAA9D,KAAMQ,KAEDY,MAAQ,CACTmH,KAAM,GACNC,QAASzI,EAAKS,MAAMgI,SALTzI,mFASC0I,GAEbA,EAAUD,UAAYxI,KAAKQ,MAAMgI,SAChCxI,KAAKuE,SAAS,CAAEgE,KAAM,sCAIrB,IAAAvD,EAAAhF,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBACiB,KAApBJ,KAAKoB,MAAMmH,MACZtI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACfJ,EAAAC,EAAAC,cAAA,OAAKO,QAAS,kBAAMsE,EAAKT,SAAS,CAAEgE,KAAM,aAAatI,EAAAC,EAAAC,cAAA,yBACvDF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,MAAKJ,EAAAC,EAAAC,cAAA,iBACpBF,EAAAC,EAAAC,cAAA,OAAKO,QAAS,kBAAMsE,EAAKT,SAAS,CAAEgE,KAAM,YAAYtI,EAAAC,EAAAC,cAAA,6BAGjC,WAApBH,KAAKoB,MAAMmH,MAAqBtI,EAAAC,EAAAC,cAACuI,EAAD,MACZ,UAApB1I,KAAKoB,MAAMmH,MAAoBtI,EAAAC,EAAAC,cAACwI,EAAD,cA5BhBzH,aA2CjBC,cATS,SAAAC,GACtB,MAAO,CACLiC,QAASjC,EAAMiC,QACf9B,OAAQH,EAAMG,OACdsE,SAAUzE,EAAMyE,SAChB2C,QAASpH,EAAMoH,UAIJrH,CAAyBmH,GCjCzBM,0LAZX,OACE3I,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,KAAG0I,KAAK,0BAAR,0BAAf,WAAkF5I,EAAAC,EAAAC,cAAA,KAAG0I,KAAK,kCAAR,kCAAlF,eACU5I,EAAAC,EAAAC,cAAA,KAAG0I,KAAK,gCAAR,gCADV,UACwF5I,EAAAC,EAAAC,cAAA,KAAG0I,KAAK,0BAAR,0BADxF,2BANc3H,sBCGhB4H,qBACF,SAAAA,IAAc,IAAA/I,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA8I,IACV/I,EAAAmC,OAAA0B,EAAA,EAAA1B,CAAAlC,KAAAkC,OAAA2B,EAAA,EAAA3B,CAAA4G,GAAAhF,KAAA9D,QAEKoB,MAAQ,CACT2H,OAAO,GAJDhJ,8EAOCsB,GAAW,IAAA2D,EAAAhF,KAClBgJ,EAAiB9G,OAAA+G,EAAA,EAAA/G,CAAA,GACdb,EADc,CAEjB3B,UAAWM,KAAKQ,MAAMd,YAG1BsJ,EAAkBzH,OAASF,EAAUE,OAAO+C,IAAI,SAAArC,GAAK,OAAIA,EAAMiH,aAC/DF,EAAkBjD,UAAY1E,EAAU0E,UAAUzB,IAAI,SAAAyB,GAAS,OAAIA,EAAUmD,aAE7EpC,MAAM,mBAAoB,CACtBC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,OAAQ,OACRiC,KAAMC,KAAKC,UAAUL,KACtB7B,KAAK,SAAAC,GACJA,EAAIC,OACHF,KAAK,SAAAC,GAEFpC,EAAKT,SAAS,CAAEwE,OAAO,GAAQ,kBAAMO,WAAW,WAAQtE,EAAKT,SAAS,CAAEwE,OAAO,KAAW,OAC1FQ,QAAQC,IAAIpC,KAEfG,MAAM,SAAAC,GACH+B,QAAQC,IAAIhC,OAGnBD,MAAM,SAAAC,GACH+B,QAAQC,IAAIhC,gDAIDC,GAAK,IAAApC,EAAArF,KACpB8G,MAAM,sBAAwBW,EAAK,CAC/BP,OAAQ,WAEXC,KAAK,SAAAC,GACFA,EAAIC,OACHF,KAAK,SAAAC,GACF/B,EAAK7E,MAAMG,SVkBhB,CACHlB,KAAM,oBUlBE8J,QAAQC,IAAIpC,KAEfG,MAAM,SAAAC,GACH+B,QAAQC,IAAIhC,OAGnBD,MAAM,SAAAC,GACH+B,QAAQC,IAAIhC,sCAIb,IAAAiC,EAAAzJ,KACP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACHJ,KAAKoB,MAAM2H,OAAS9I,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,yBACrBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,OAAOK,QAAS,kBAAM+I,EAAKC,eAAeD,EAAKjJ,MAAMa,cACvEpB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASK,QAAS,kBAAM+I,EAAKE,mBAAmBF,EAAKjJ,MAAMa,UAAUoG,SAE3FxH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,UAAKH,KAAKQ,MAAMa,UAAUG,MAC1BvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,IAAK,2CAA4CC,IAAI,KACnFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAaN,KAAKQ,MAAMa,UAAUC,MAAMG,KAAMlB,IAAI,MAEvFN,EAAAC,EAAAC,cAAA,mBAAWH,KAAKQ,MAAMa,UAAUqG,QAEpCzH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaL,KAAKQ,MAAMa,UAAUC,MAAME,MACtDvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAI6C,KAAK2E,MAAM3H,KAAKQ,MAAMa,UAAU0E,UAAU6B,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQvE,gBAAgB,GAAKvD,KAAKQ,MAAMa,UAAUC,MAAMiC,eAAiBvD,KAAKQ,MAAMqF,SAASkC,mBAAmB/H,KAAKQ,MAAMa,UAAUqG,MAAM,MAEtOzH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKH,KAAKQ,MAAMa,UAAUC,MAAMgC,cAChCrD,EAAAC,EAAAC,cAAA,SAAI6C,KAAK2E,MAAM3H,KAAKQ,MAAMa,UAAU0E,UAAU6B,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQtE,kBAAkB,GAAKxD,KAAKQ,MAAMa,UAAUC,MAAMkC,iBAAmBxD,KAAKQ,MAAMqF,SAASmC,sBAAsBhI,KAAKQ,MAAMa,UAAUqG,MAAM,MAE7OzH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKQ,MAAMa,UAAU0E,UAAU6B,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQrE,gBAAgB,GAAKzD,KAAKQ,MAAMa,UAAUC,MAAMmC,gBAAgBwE,QAAQ,GAA7J,MAEJhI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKQ,MAAMa,UAAU0E,UAAU6B,OAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQpE,iBAAiB,GAAK1D,KAAKQ,MAAMa,UAAUC,MAAMoC,iBAAiBuE,QAAQ,GAA/J,OAGRhI,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAd,UACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAUL,KAAKQ,MAAMa,UAAUE,OAAO+C,IAAI,SAAArC,GAAK,OACtDhC,EAAAC,EAAAC,cAAA,OAAKuF,IAAKzD,EAAM7B,GAAIC,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAa2B,EAAMR,KAAMlB,IAAI,MAElEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAa4B,EAAMT,MACP,IAAvBS,EAAMN,cAAsB1B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgB4B,EAAMN,aAAnC,IAAkD8H,EAAKjJ,MAAMa,UAAUC,MAAMgC,aAAaqC,gBAE5H1F,EAAAC,EAAAC,cAAA,iBAAS8B,EAAMH,OAEnB7B,EAAAC,EAAAC,cAAA,SAAI8B,EAAMP,cAEdzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACV4B,EAAMF,aAAauC,IAAI,SAAC4D,EAAUC,GAAX,OAAqBlI,EAAAC,EAAAC,cAAA,OAAKuF,IAAKyC,EAAO9H,UAAW4B,EAAMH,KAAOqG,EAAQ,UAAW,sBAKzHlI,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAd,aACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACgC,IAA1CL,KAAKQ,MAAMa,UAAU0E,UAAUnG,OAC1BK,EAAAC,EAAAC,cAAA,kDACAH,KAAKQ,MAAMa,UAAU0E,UAAUzB,IAAI,SAAAsF,GAAI,OACrC3J,EAAAC,EAAAC,cAAA,OAAKuF,IAAKkE,EAAKxJ,GAAIC,UAAU,QACzBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAasJ,EAAKnI,KAAMlB,IAAI,MAEjEN,EAAAC,EAAAC,cAAA,UAAKyJ,EAAKpI,OAEdvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeuJ,EAAKlI,yBAvIrCR,cAyJTC,cARS,SAAAC,GACtB,MAAO,CACLC,UAAWD,EAAMC,UACjBwE,SAAUzE,EAAMyE,SAChBnG,UAAW0B,EAAM1B,YAINyB,CAAyB2H,GC5CzBe,aAnHX,SAAAA,EAAYC,EAAM/B,EAAoBC,EAAuB+B,GAAuB,IAAAhK,EAAAC,KAAAkC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA6J,GAChF7J,KAAKgK,UAAYjC,EAAmB+B,EAAKpC,MAAM,GAAKoC,EAAKxI,MAAMiC,eAC/DvD,KAAKiK,aAAejC,EAAsB8B,EAAKpC,MAAM,GAAKoC,EAAKxI,MAAMkC,iBACrExD,KAAKyD,eAAiBqG,EAAKxI,MAAMmC,eACjCzD,KAAK0D,gBAAkBoG,EAAKxI,MAAMoC,gBAClC1D,KAAKyB,KAAOqI,EAAKxI,MAAMG,KACvBzB,KAAKwB,KAAOsI,EAAKtI,KACjBxB,KAAKuB,OAASuI,EAAKvI,OACnBvB,KAAK+F,UAAY+D,EAAK/D,UACtB/F,KAAKsD,aAAewG,EAAKxI,MAAMgC,aAC/BtD,KAAKK,UAAYyJ,EAAKxI,MAAME,KAC5BxB,KAAKkK,WAAaJ,EAAKI,WACvBlK,KAAK+J,sBAAwBA,EAC7B/J,KAAK0H,MAAQoC,EAAKpC,MAElBoC,EAAK/D,UAAUb,QAAQ,SAAA0E,GACnB7J,EAAK0D,gBAAkBmG,EAAKnG,eAC5B1D,EAAK2D,iBAAmBkG,EAAKlG,gBAC7B3D,EAAKiK,WAAaJ,EAAKrG,eACvBxD,EAAKkK,cAAgBL,EAAKpG,mBAG9BxD,KAAKmK,cAAgBnK,KAAKgK,UAC1BhK,KAAKoK,iBAAmBpK,KAAKiK,gEAG1BI,GACH,IAAIpI,EAAQjC,KAAKuB,OAAO8I,GACpBC,GAActH,KAAKC,MAAsB,GAAhBD,KAAKuH,UAAiB,IAAI,IAEvD,OAAGvK,KAAKoK,kBAAoBnI,EAAMN,cAC9B3B,KAAKoK,kBAAoBnI,EAAMN,aAIxB,CAFMqB,KAAKC,MAAMhB,EAAMiB,OAASlD,KAAKyD,eAAiB6G,GAC/CtH,KAAKC,MAAMhB,EAAMkB,QAAUnD,KAAK0D,gBAAkB4G,KAG7D,CAAC,EAAG,yCAGDpH,GACPlD,KAAKmK,cAAgBjH,GAAU,EAC9BlD,KAAKmK,cAAgB,EAGrBnK,KAAKmK,eAAiBjH,sCAIlBC,GACLnD,KAAKmK,cAAgBhH,GAAWnD,KAAKgK,UACpChK,KAAKmK,cAAgBnK,KAAKgK,UAG1BhK,KAAKmK,eAAiBhH,uCAK1B,OAAOnD,KAAKgK,qDAIZ,OAAOhK,KAAKmK,mEAIZ,OAAQnK,KAAKmK,cAAgBnK,KAAKgK,UAAa,4CAI/C,OAAOhK,KAAKiK,2DAIZ,OAAOjK,KAAKoK,yEAIZ,OAAQpK,KAAKoK,iBAAmBpK,KAAKiK,aAAgB,oCAIrD,OAAOjK,KAAKwB,sCAIZ,OAAOxB,KAAK0H,sCAIZ,OAAO1H,KAAKyB,6CAIZ,OAAOzB,KAAKsD,8CAIZ,OAAOtD,KAAKK,gDAIZ,OAAOL,KAAKkK,4DAIZ,OAAOlK,KAAK+J,wDAIZ,OAAO/J,KAAKuB,gBC/DLiJ,aAhDX,SAAAA,EAAYV,EAAM/B,GAAqB7F,OAAAC,EAAA,EAAAD,CAAAlC,KAAAwK,GACnCxK,KAAKgK,UAAYjC,EAAmB+B,EAAKpC,MAAM,GAAKoC,EAAKvG,eACzDvD,KAAKmK,cAAgBnK,KAAKgK,UAC1BhK,KAAKyD,eAAiBqG,EAAKrG,eAC3BzD,KAAKyB,KAAOqI,EAAKrI,KACjBzB,KAAKwB,KAAOsI,EAAKtI,KACjBxB,KAAK0H,MAAQoC,EAAKpC,2DAKlB,MAAO,CADM1E,KAAKC,MAAM,GAAKjD,KAAKyD,gBAAkBT,KAAKC,MAAsB,GAAhBD,KAAKuH,UAAiB,IAAM,KAC3E,yCAGNrH,GACPlD,KAAKmK,cAAgBjH,GAAU,EAC9BlD,KAAKmK,cAAgB,EAGrBnK,KAAKmK,eAAiBjH,uCAK1B,OAAOlD,KAAKgK,qDAIZ,OAAOhK,KAAKmK,mEAIZ,OAAQnK,KAAKmK,cAAgBnK,KAAKgK,UAAa,oCAI/C,OAAOhK,KAAKwB,sCAIZ,OAAOxB,KAAK0H,sCAIZ,OAAO1H,KAAKyB,cCCLgJ,EA9CC,CACZ,CACIrK,GAAI,EACJoB,KAAM,WACNC,KAAM,6BACNiG,MAAO,EACPnE,eAAgB,EAChBE,eAAgB,GACjB,CACCrD,GAAI,EACJoB,KAAM,cACNC,KAAM,gCACNiG,MAAO,EACPnE,eAAgB,KAChBE,eAAgB,KAClB,CACErD,GAAI,EACJoB,KAAM,gBACNC,KAAM,kCACNiG,MAAO,EACPnE,eAAgB,IAChBE,eAAgB,IACjB,CACCrD,GAAI,EACJoB,KAAM,eACNC,KAAM,iCACNiG,MAAO,EACPnE,eAAgB,EAChBE,eAAgB,KACjB,CACCrD,GAAI,EACJoB,KAAM,gBACNC,KAAM,kCACNiG,MAAO,EACPnE,eAAgB,IAChBE,eAAgB,KACjB,CACCrD,GAAI,EACJoB,KAAM,YACNC,KAAM,8BACNiG,MAAO,GACPnE,eAAgB,IAChBE,eAAgB,IC/BlBiH,qBACF,SAAAA,IAAc,IAAA3K,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA0K,IACV3K,EAAAmC,OAAA0B,EAAA,EAAA1B,CAAAlC,KAAAkC,OAAA2B,EAAA,EAAA3B,CAAAwI,GAAA5G,KAAA9D,QAEKoB,MAAQ,CACTuJ,WAAY,EACZC,YAAY,EACZC,aAAc,8CACdC,kBAAkB,EAClBC,OAAQ,KACRC,MAAO,KACP1D,OAAQ,UACR2D,KAAM,CACFf,WAAY,EACZgB,MAAO,IAbLnL,4EAkBD,IAAAiF,EAAAhF,KACLgL,EAAQ,IAAIR,EAAMC,EAAQzK,KAAKoB,MAAMuJ,WAAW,GAAI3K,KAAKQ,MAAMqF,SAASkC,oBACxEgD,EAAS,IAAIlB,EAAO7J,KAAKQ,MAAMa,UAAWrB,KAAKQ,MAAMqF,SAASkC,mBAC9D/H,KAAKQ,MAAMqF,SAASmC,sBAAuBhI,KAAKQ,MAAMqF,SAASsF,mBAAmBnL,KAAKQ,MAAMa,UAAUqG,MAAM,IACjH1H,KAAKuE,SAAS,CAAEyG,QAAOD,UAAS,WAC5B/F,EAAKoG,yBACLpG,EAAKT,SAAS,CAAE+C,OAAQ,0DAK5B,OAAGtH,KAAKoB,MAAM4J,MAAMK,oBAAsB,GACtCrL,KAAKsL,kBACE,GAEHtL,KAAKoB,MAAM2J,OAAOM,oBAAsB,IAC5CrL,KAAKuE,SAAS,CAAE+C,OAAQ,WACjB,4CAME,IAAAjC,EAAArF,KACb,GAAkC,IAA/BA,KAAKoB,MAAM6J,KAAKf,YAA8C,IAA1BlK,KAAKoB,MAAM6J,KAAKC,MAAa,CAChE,IAAIhB,EAAalH,KAAKC,MAAkC,GAA5BjD,KAAKoB,MAAM4J,MAAMO,WAAkBvI,KAAKC,MAAsB,GAAhBD,KAAKuH,UAAiB,IAAM,MAClGW,EAAQlI,KAAKC,MAAkC,GAA5BjD,KAAKoB,MAAM4J,MAAMO,WAAkBvI,KAAKC,MAAsB,GAAhBD,KAAKuH,UAAiB,IAAM,MACjGvK,KAAKuE,SAAS,CAAE0G,KAAM,CAAEf,aAAYgB,SAAS5D,OAAQ,UAAY,WAC7DjC,EAAK7E,MAAMG,SdnBZ,SAACuJ,EAAYgB,GACxB,MAAO,CACHzL,KAAM,YACNyK,aACAgB,Sce4BM,CAAStB,EAAYgB,4CAKxC,IAAAzB,EAAAzJ,KACTA,KAAKuE,SAAS,CAAEqG,YAAY,EAAME,kBAAkB,EAAOH,WAAY,GAAK,WACxElB,EAAKgC,wDAII,IAAAC,EAAA1L,KACT2L,EAAY3L,KAAKoB,MAAMuJ,WAAa,EACxC3K,KAAKuE,SAAS,CAAEqG,YAAY,EAAME,kBAAkB,EAAOH,WAAYgB,EAAWV,KAAM,CAAEf,WAAY,EAAGgB,MAAO,IAAM,WAClHQ,EAAKD,0DAIMtD,GAAO,IAAAyD,EAAA5L,KACtB,IAAGA,KAAK6L,kBAGsB,eAAtB7L,KAAKoB,MAAMkG,OAAyB,CACxC,IAAItH,KAAKoB,MAAMwJ,WACX,OAGJ,IAGIkB,EAHAC,EAAS/L,KAAKoB,MAAM2J,OAAOiB,OAAO7D,GAClCjF,EAAS6I,EAAO,GAChB5I,EAAU4I,EAAO,GAGrB,GAAG7I,EAAS,GAAKC,EAAU,EACvB2I,EAAU,QAAA/I,OAAW/C,KAAKoB,MAAM2J,OAAOkB,UAAU9D,GAAO3G,KAA9C,SAAAuB,OAA0D/C,KAAKoB,MAAM4J,MAAMkB,QAA3E,KAAAnJ,OAAsFG,EAAtF,2CAAAH,OACRI,EADQ,+BAGT,GAAGD,EAAS,EACb4I,EAAU,QAAA/I,OAAW/C,KAAKoB,MAAM2J,OAAOkB,UAAU9D,GAAO3G,KAA9C,SAAAuB,OAA0D/C,KAAKoB,MAAM4J,MAAMkB,QAA3E,KAAAnJ,OAAsFG,EAAtF,gBAET,MAAGC,EAAU,GAId,OAHA2I,EAAU,QAAA/I,OAAW/C,KAAKoB,MAAM2J,OAAOkB,UAAU9D,GAAO3G,KAA9C,gBAAAuB,OAAiEI,EAAjE,mBAMdnD,KAAKuE,SAAS,CAAEqG,YAAY,IAC5B5K,KAAKoB,MAAM4J,MAAMmB,cAAcjJ,GAC/BlD,KAAKoB,MAAM2J,OAAOqB,YAAYjJ,GAE9BnD,KAAKuE,SAAS,CAAEuG,kBAAkB,EAAMD,aAAciB,IACtDO,OAAO/C,WAAW,WACdsC,EAAKrH,SAAS,CAAEuG,kBAAkB,IAClCc,EAAKU,qBACN,kDAIS,IAAAC,EAAAvM,KAChB,IAAGA,KAAK6L,kBAGsB,eAAtB7L,KAAKoB,MAAMkG,OAAyB,CACxC,IAAIpE,EAASlD,KAAKoB,MAAM4J,MAAMgB,SAAS,GACnCF,EAAU,GAAA/I,OAAM/C,KAAKoB,MAAM4J,MAAMkB,QAAvB,iBAAAnJ,OAA8CG,EAA9C,YAEdlD,KAAKoB,MAAM2J,OAAOoB,cAAcjJ,GAEhClD,KAAKuE,SAAS,CAAEuG,kBAAkB,EAAMD,aAAciB,IACtDO,OAAO/C,WAAW,WACdiD,EAAKhI,SAAS,CAAEuG,kBAAkB,EAAOF,YAAY,IACrD2B,EAAKV,kBACN,uDAIc,IAAAW,EAAAxM,KACrBqM,OAAOI,iBAAiB,UAAW,SAAA9H,GAC/B,IAAI+H,EAAYC,SAASC,eAAe,UAExC,GAAiB,MAAdjI,EAAMe,IAAa,CAClB,IAAIzD,EAAQyK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAG5K,EAAM6K,UAAUC,SAAS,YAAa,OACzC9K,EAAM6K,UAAUE,IAAI,gBACjB,GAAiB,MAAdrI,EAAMe,IAAa,CACzB,IAAIzD,EAAQyK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAG5K,EAAM6K,UAAUC,SAAS,YAAa,OACzC9K,EAAM6K,UAAUE,IAAI,gBACjB,GAAiB,MAAdrI,EAAMe,IAAa,CACzB,IAAIzD,EAAQyK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAG5K,EAAM6K,UAAUC,SAAS,YAAa,OACzC9K,EAAM6K,UAAUE,IAAI,gBACjB,GAAiB,MAAdrI,EAAMe,IAAa,CACzB,IAAIzD,EAAQyK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAG5K,EAAM6K,UAAUC,SAAS,YAAa,OACzC9K,EAAM6K,UAAUE,IAAI,cAI5BX,OAAOI,iBAAiB,QAAS,SAAA9H,GAC7B,IAAI+H,EAAYC,SAASC,eAAe,UAExC,GAAiB,MAAdjI,EAAMe,IAAa,CAClB,IAAIzD,EAAQyK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAG5K,EAAM6K,UAAUC,SAAS,YAAa,OACzC9K,EAAM6K,UAAUG,OAAO,WACvBT,EAAKU,mBAAmB,QACrB,GAAiB,MAAdvI,EAAMe,IAAa,CACzB,IAAIzD,EAAQyK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAG5K,EAAM6K,UAAUC,SAAS,YAAa,OACzC9K,EAAM6K,UAAUG,OAAO,WACvBT,EAAKU,mBAAmB,QACrB,GAAiB,MAAdvI,EAAMe,IAAa,CACzB,IAAIzD,EAAQyK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAG5K,EAAM6K,UAAUC,SAAS,YAAa,OACzC9K,EAAM6K,UAAUG,OAAO,WACvBT,EAAKU,mBAAmB,QACrB,GAAiB,MAAdvI,EAAMe,IAAa,CACzB,IAAIzD,EAAQyK,EAAUG,SAAS,GAAGA,SAAS,GAC3C,GAAG5K,EAAM6K,UAAUC,SAAS,YAAa,OACzC9K,EAAM6K,UAAUG,OAAO,WACvBT,EAAKU,mBAAmB,uCAK3B,IAAAC,EAAAnN,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACoB,YAAtBJ,KAAKoB,MAAMkG,QACTrH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBAAaH,KAAKQ,MAAMa,UAAUG,KAAlC,IACAvB,EAAAC,EAAAC,cAAA,WADA,4PAKAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WANA,0EASAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,WAAWK,QAAS,kBAAMyM,EAAK1B,kBAIrC,YAAtBzL,KAAKoB,MAAMkG,QAAwBrH,EAAAC,EAAAC,cAACF,EAAAC,EAAMkN,SAAP,KACjCnN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,2CAA4CC,IAAI,KAC5EN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAaN,KAAKoB,MAAM4J,MAAMqC,QAAS9M,IAAI,MAEhFN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaL,KAAKoB,MAAM4J,MAAMkB,UAEhDjM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYC,IAAK,wCAAyCC,IAAI,KAC5E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAE,GAAI+D,IAAI,SAAAgJ,GACpB,IACIC,EAAiB,CACjBC,KAFY,GAAJF,EAAU,EAAI,MAI1B,OAAQrN,EAAAC,EAAAC,cAAA,OAAKuF,IAAK4H,EAAGG,MAAOF,EAAgBlN,UAAW8M,EAAK/L,MAAMuJ,WAAa2C,EAAI,YAAc,mBAAoBhN,IAAK,8BAA+BC,IAAI,SAIzKN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,SAAb,SAA4BL,KAAKoB,MAAM4J,MAAMO,UAC7CtL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAU2C,KAAKC,MAAMjD,KAAKoB,MAAM4J,MAAMK,oBAAnD,IAAyErI,KAAKC,MAAMjD,KAAKoB,MAAM4J,MAAM0C,cAArG,OACAzN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,sCAAuCC,IAAI,KACvEN,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACE,MAAwD,KAAhD3N,KAAKoB,MAAM4J,MAAM4C,6BAAuC,MAAOvN,UAAU,0BAGtGJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACTL,KAAKoB,MAAM0J,kBAA0C,eAAtB9K,KAAKoB,MAAMkG,QAA2BrH,EAAAC,EAAAC,cAAA,8BACtEH,KAAKoB,MAAM0J,kBAA0C,eAAtB9K,KAAKoB,MAAMkG,QAA2BrH,EAAAC,EAAAC,cAAA,UAAKH,KAAKoB,MAAMyJ,cAC/D,WAAtB7K,KAAKoB,MAAMkG,QACRrH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,IAAyBL,KAAKoB,MAAM6J,KAAKf,WAAzC,eACAjK,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,IAA0BL,KAAKoB,MAAM6J,KAAKC,MAA1C,IAAiDjL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,OAEjF,IAA1BP,KAAKoB,MAAMuJ,YAAoB1K,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcK,QAAS,kBAAMyM,EAAKU,oBACzD,IAA1B7N,KAAKoB,MAAMuJ,YAAoB1K,EAAAC,EAAAC,cAAA,8DAGjB,UAAtBH,KAAKoB,MAAMkG,QACRrH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAAaK,QAAS,kBAAMyM,EAAKW,kBAI/D7N,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACFJ,KAAKoB,MAAM2J,OAAOkB,UAAU3H,IAAK,SAACrC,EAAOkG,GAAR,OACnClI,EAAAC,EAAAC,cAAA,OAAKuF,IAAKzD,EAAM7B,GAAIC,UAAU,QAAQK,QAAS,kBAAMyM,EAAKD,mBAAmB/E,KACzElI,EAAAC,EAAAC,cAAA,OAAKE,UAAW8M,EAAK/L,MAAMwJ,YAAeuC,EAAK/L,MAAM2J,OAAOgD,uBAAyB9L,EAAMN,aAAgB,uBAAyB,uBAChI1B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAQ8H,EAAM,GAC3BlI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAa2B,EAAMR,KAAMlB,IAAI,MAElEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAa4B,EAAMT,MACP,IAAvBS,EAAMN,cAAsB1B,EAAAC,EAAAC,cAAA,KAAGE,UAAW4B,EAAMN,aAAewL,EAAK/L,MAAM2J,OAAOgD,sBAAwB,uBAAyB,gBAAiB9L,EAAMN,aAA7H,IAA4IwL,EAAK/L,MAAM2J,OAAOiD,kBAEhM/N,EAAAC,EAAAC,cAAA,iBAAS8B,EAAMH,OAEnB7B,EAAAC,EAAAC,cAAA,SAAI8B,EAAMP,kBAKtBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKH,KAAKoB,MAAM2J,OAAOmB,SACvBjM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,KACvDN,EAAAC,EAAAC,cAAA,SAAIH,KAAKQ,MAAMa,UAAU6J,SAGjCjL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kBAAUH,KAAKoB,MAAM2J,OAAOQ,SAA5B,IAAsCtL,EAAAC,EAAAC,cAAA,YAAOH,KAAKoB,MAAM2J,OAAOkD,WAC/DhO,EAAAC,EAAAC,cAAA,SAAI6C,KAAKC,MAAMjD,KAAKoB,MAAM2J,OAAOM,oBAAjC,IAAuDrI,KAAKC,MAAMjD,KAAKoB,MAAM2J,OAAO2C,cAApF,OACAzN,EAAAC,EAAAC,cAAA,SAAI6C,KAAKC,MAAMjD,KAAKoB,MAAM2J,OAAOgD,uBAAjC,IAA0D/K,KAAKC,MAAMjD,KAAKoB,MAAM2J,OAAOmD,iBAAvF,IAA0GlO,KAAKoB,MAAM2J,OAAOiD,mBAGpI/N,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,sCAAuCC,IAAI,KACvEN,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACE,MAAyD,KAAjD3N,KAAKoB,MAAM2J,OAAO6C,6BAAuC,MAAOvN,UAAU,yBAEnGJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,sCAAuCC,IAAI,KACvEN,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACE,MAA4D,KAApD3N,KAAKoB,MAAM2J,OAAOoD,gCAA0C,MAAO9N,UAAW,gBAAkBL,KAAKoB,MAAM2J,OAAOiD,gBAAgBrI,iBAE3J1F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACqB,KAA/BL,KAAKoB,MAAM2J,OAAOQ,UAAmBtL,EAAAC,EAAAC,cAAA,sBACrCH,KAAKoB,MAAM2J,OAAOQ,SAAW,IAAMtL,EAAAC,EAAAC,cAAA,SAAIH,KAAKoB,MAAM2J,OAAOqD,cAAtB,IAAsCpO,KAAKoB,MAAM2J,OAAOsD,yBAAxD,eACnCrO,KAAKoB,MAAM2J,OAAOQ,SAAW,IAAMtL,EAAAC,EAAAC,cAAA,SAAIH,KAAKoB,MAAM2J,OAAOsD,yBAA2BrO,KAAKoB,MAAM2J,OAAOqD,cAAnE,iBAAgGpO,KAAKoB,MAAM2J,OAAOQ,SAAW,IAErKtL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,sCAAuCC,IAAI,KACtEP,KAAKoB,MAAM2J,OAAOQ,SAAW,IAAMtL,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACE,MAAS3N,KAAKoB,MAAM2J,OAAOqD,cAAcpO,KAAKQ,MAAMqF,SAASsF,mBAAmBnL,KAAKoB,MAAM2J,OAAOQ,SAAS,GAAM,IAAO,MAAOlL,UAAU,uCAxSlMa,cA0TLC,cATS,SAAAC,GACtB,MAAO,CACLC,UAAWD,EAAMC,UACjBwE,SAAUzE,EAAMyE,SAChB4E,QAASrJ,EAAMqJ,QACfrJ,MAAOA,IAIID,CAAyBuJ,GCzMzB3E,SA5HG,CACd,CACI3F,GAAI,EACJoB,KAAM,sBACNE,YAAa,wCACbD,KAAM,0CACN8B,eAAgB,EAChBC,iBAAkB,IAClBC,eAAgB,EAChBC,gBAAiB,EACjB2C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,IACpB,CACCrG,GAAI,EACJoB,KAAM,mBACNE,YAAa,sEACbD,KAAM,uCACN8B,eAAgB,KAChBC,iBAAkB,EAClBC,eAAgB,MAChBC,gBAAiB,KACjB2C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCrG,GAAI,EACJoB,KAAM,kBACNE,YAAa,6CACbD,KAAM,sCACN8B,eAAgB,EAChBC,iBAAkB,EAClBC,eAAgB,KAChBC,gBAAiB,KACjB2C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCrG,GAAI,EACJoB,KAAM,8BACNE,YAAa,kCACbD,KAAM,iDACN8B,eAAgB,KAChBC,iBAAkB,EAClBC,eAAgB,EAChBC,gBAAiB,EACjB2C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,EAAG,EAAG,IAC7B,CACCrG,GAAI,EACJoB,KAAM,UACNE,YAAa,kCACbD,KAAM,8BACN8B,eAAgB,IAChBC,iBAAkB,EAClBC,eAAgB,EAChBC,gBAAiB,EACjB2C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCrG,GAAI,EACJoB,KAAM,yBACNE,YAAa,qDACbD,KAAM,6CACN8B,eAAgB,IAChBC,iBAAkB,EAClBC,eAAgB,KAChBC,gBAAiB,EACjB2C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCrG,GAAI,EACJoB,KAAM,kBACNE,YAAa,qDACbD,KAAM,sCACN8B,eAAgB,KAChBC,iBAAkB,EAClBC,eAAgB,KAChBC,gBAAiB,KACjB2C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCrG,GAAI,EACJoB,KAAM,kBACNE,YAAa,qDACbD,KAAM,sCACN8B,eAAgB,KAChBC,iBAAkB,EAClBC,eAAgB,KAChBC,gBAAiB,KACjB2C,KAAM,IACNE,cAAe,EACfE,iBAAkB,CAAC,EAAG,IACvB,CACCrG,GAAI,EACJoB,KAAM,kBACNE,YAAa,iCACbD,KAAM,sCACN8B,eAAgB,EAChBC,iBAAkB,EAClBC,eAAgB,IAChBC,gBAAiB,EACjB2C,KAAM,IACNE,cAAe,GACfE,iBAAkB,CAAC,EAAG,EAAG,EAAG,IAC7B,CACCrG,GAAI,EACJoB,KAAM,iBACNE,YAAa,kCACbD,KAAM,qCACN8B,eAAgB,EAChBC,iBAAkB,EAClBC,eAAgB,EAChBC,gBAAiB,IACjB2C,KAAM,IACNE,cAAe,GACfE,iBAAkB,CAAC,EAAG,EAAG,EAAG,MC7G9B6H,cACF,SAAAA,EAAY9N,GAAO,IAAAT,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAsO,IACfvO,EAAAmC,OAAA0B,EAAA,EAAA1B,CAAAlC,KAAAkC,OAAA2B,EAAA,EAAA3B,CAAAoM,GAAAxK,KAAA9D,KAAMQ,KAEDY,MAAQ,CACTmH,KAAM,YACNxC,UAAW,IALAhG,mFAUf,IAAIwO,EACJA,EAAiBxI,EAAUzB,IAAI,SAAAyB,GAAS,OAAI,IAAID,EAAUC,KAE1D/F,KAAKuE,SAAS,CAAEwB,UAAWwI,6CAGdC,GACb,OAAOxO,KAAKQ,MAAMa,UAAU0E,UAAU0I,KAAK,SAAA7E,GAAI,OAAIA,EAAKxJ,KAAOoO,qCAG1D,IAAAxJ,EAAAhF,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACRH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,kBAA8B,WAApBH,KAAKoB,MAAMmH,KAAoB,SAAW,aACpDtI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,KACvDN,EAAAC,EAAAC,cAAA,SAAIH,KAAKQ,MAAMa,UAAU6J,QAE7BjL,EAAAC,EAAAC,cAAA,UAAQE,UAA+B,cAApBL,KAAKoB,MAAMmH,KAAuB,sBAAwB,eAAgB7H,QAAS,WAAQsE,EAAKT,SAAS,CAAEgE,KAAM,iBACpItI,EAAAC,EAAAC,cAAA,UAAQE,UAA+B,WAApBL,KAAKoB,MAAMmH,KAAoB,mBAAqB,YAAa7H,QAAS,WAAQsE,EAAKT,SAAS,CAAEgE,KAAM,eAEzG,cAApBvI,KAAKoB,MAAMmH,MAAwBtI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAC/CL,KAAKoB,MAAM2E,UAAU2I,KAAK,SAACxO,EAAGyO,GAAJ,OAAWzO,EAAEqG,cAAgBoI,EAAEpI,cAAiB,EAAMoI,EAAEpI,cAAgBrG,EAAEqG,eAAkB,EAAI,IAAIjC,IAAI,SAAAsF,GAC/H,OAAGA,EAAKnD,iBAAiBmI,SAAS5J,EAAKxE,MAAMa,UAAUC,MAAMlB,IACjDH,EAAAC,EAAAC,cAAA,OAAKuF,IAAKkE,EAAKxJ,GAAIC,UAAW2E,EAAK6J,iBAAiBjF,EAAKxJ,IAAM,sBAAwB,iBAC3FH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAasJ,EAAKnI,KAAMlB,IAAI,MAEjEN,EAAAC,EAAAC,cAAA,UAAKyJ,EAAKpI,OAEdvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAe2E,EAAK6J,iBAAiBjF,EAAKxJ,IAAM,6BAA+BwJ,EAAKlI,cAErGzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW2E,EAAKxE,MAAMa,UAAUqG,MAAQkC,EAAKrD,eAAiBvB,EAAKxE,MAAMa,UAAU6J,MAAQtB,EAAKvD,KAAO,mBAAqB,WAC7HpG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,KAAGE,UAAW2E,EAAKxE,MAAMa,UAAUqG,MAAQkC,EAAKrD,cAAgB,WAAa,MAA7E,SAA0FqD,EAAKrD,cAA/F,KACAtG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,SAAoCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,KAA3F,IAAgGN,EAAAC,EAAAC,cAAA,QAAME,UAAW2E,EAAKxE,MAAMa,UAAU6J,MAAQtB,EAAKvD,KAAO,WAAa,MAAOuD,EAAKvD,QAEvLpG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASK,QAAS,WAC5BsE,EAAK6J,iBAAiBjF,IACtB5E,EAAKxE,MAAMG,ShBXhC,SAACiJ,GAChB,MAAO,CACHnK,KAAM,gBACNmK,QgBQoDkF,CAAalF,SAK1C,QAIG,WAApB5J,KAAKoB,MAAMmH,MAAqBtI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAC5CL,KAAKQ,MAAMa,UAAUE,OAAO+C,IAAI,SAACrC,EAAOkG,GACrC,IAAI4G,EAAa,IAAI/M,EAAMC,EAAMiH,YAMjC,OAJG6F,EAAWjN,KAAO,IACjBiN,EAAWjN,KAAQiN,EAAWjN,KAAO,GAIrC7B,EAAAC,EAAAC,cAAA,OAAKuF,IAAKqJ,EAAW3O,GAAIC,UAA0B,IAAf4B,EAAMH,KAAa,uBAAyB,kBAC5E7B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQC,IAAK,oCAAqCC,IAAI,KACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,IAAK,0CAA2CC,IAAI,KACjFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBC,IAAK,4CAA6CC,IAAI,KACrFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,IAAK,WAAayO,EAAWtN,KAAMlB,IAAI,MAEvEN,EAAAC,EAAAC,cAAA,UAAK4O,EAAWvN,OAEpBvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAA8B,IAAf4B,EAAMH,KAAa,4DAA6DiN,EAAWrN,cAE3HzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW2E,EAAKxE,MAAMa,UAAU6J,MAAS,IAAI6D,EAAWjN,KAAQ,mBAAqB,WACtF7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACM,IAAf4B,EAAMH,KAAa7B,EAAAC,EAAAC,cAAA,qBAAkBF,EAAAC,EAAAC,cAAA,iBAAS4O,EAAWjN,KAApB,QACvC7B,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,SAAoCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,IAAI,yBAAyBC,IAAI,KAA3F,IAAgGN,EAAAC,EAAAC,cAAA,QAAME,UAAW2E,EAAKxE,MAAMa,UAAU6J,MAAS,IAAI6D,EAAWjN,KAAQ,WAAa,MAAO,IAAKiN,EAAWjN,QAE9M7B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAAaK,QAAS,WhBxDrD,IAAC2J,EAAYhE,EAAM2I,EgByDC/M,EAAMH,KAAO,GACZkD,EAAKxE,MAAMG,UhB1D/B0J,EgB0DqDlC,EhB1DzC9B,EgB0DiD,IAAI0I,EAAWjN,KhB1D1DkN,EgB0DiED,EAAW7F,WhBzDvG,CACHzJ,KAAM,gBACN4K,aACAhE,OACA2I,8BgBzCY9N,aAmHLC,cARS,SAAAC,GACtB,MAAO,CACLC,UAAWD,EAAMC,UACjB0E,UAAW3E,EAAM2E,UACjBxE,OAAQH,EAAMG,SAIHJ,CAAyBmN,GC9GlCW,kMACexP,GACb,IACI,IAAIyP,EAAU7C,OAAO5M,GACjB0P,EAAI,mBAGR,OAFAD,EAAQE,QAAQD,EAAGA,GACnBD,EAAQG,WAAWF,IACZ,EAEX,MAAMG,GACF,OAAOA,aAAaC,eAEL,KAAXD,EAAEE,MAES,OAAXF,EAAEE,MAGS,uBAAXF,EAAE9N,MAES,+BAAX8N,EAAE9N,OAEiB,IAAnB0N,EAAQtP,oDAaA,IAAAG,EAAAC,KAChB,GAAGA,KAAKyP,iBAAiB,gBAAiB,CAGtC,IAAI/P,EAAYgQ,aAAaC,QAAQ,aACjCjQ,EAIAM,KAAKQ,MAAMG,SAASnB,EAAaE,IAHjCM,KAAKQ,MAAMG,SAASnB,KAO5B6M,OAAOI,iBAAiB,UAAW,SAAC9H,GACf,MAAdA,EAAMe,KACL6D,QAAQC,IAAIzJ,EAAKS,MAAMY,0CAK1B,IAAA4D,EAAAhF,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OACJH,EAAAC,EAAAC,cAACyP,EAAD,MACE5P,KAAKQ,MAAMqP,kBACT5P,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,yRAMAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAPA,mCAUAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYK,QAAS,kBAAMsE,EAAKxE,MAAMG,SjBvFzE,CACHlB,KAAM,iCiB0FIO,KAAKQ,MAAMC,uBAAyBR,EAAAC,EAAAC,cAAC2P,EAAD,MACpC9P,KAAKQ,MAAMS,aAAehB,EAAAC,EAAAC,cAAC4P,EAAD,MAC1B/P,KAAKQ,MAAMI,eAAiBX,EAAAC,EAAAC,cAAC6P,EAAD,MAC5BhQ,KAAKQ,MAAMO,WAAad,EAAAC,EAAAC,cAAC8P,EAAD,MACxBjQ,KAAKQ,MAAMQ,WAAaf,EAAAC,EAAAC,cAAC+P,EAAD,cAhFxBhP,cAmGHC,cAbS,SAAAC,GACtB,MAAO,CACLX,sBAAuBW,EAAMX,sBAC7BQ,YAAaG,EAAMH,YACnBF,UAAWK,EAAML,UACjBC,UAAWI,EAAMJ,UACjBJ,cAAeQ,EAAMR,cACrBiP,iBAAkBzO,EAAMyO,iBACxBxO,UAAWD,EAAMC,UACjBD,MAAOA,IAIID,CAAyB8N,WCjHlCkB,EAAOC,EAAQ,IAiLNC,EA5JG,SAACjP,EAAOkP,GACtB,IAAIC,EAAQrO,OAAA+G,EAAA,EAAA/G,CAAA,GAAOd,GACfoP,EAAYtO,OAAA+G,EAAA,EAAA/G,CAAA,GAAOqO,EAASlP,WAEhC,OAAOiP,EAAO7Q,MACV,IAAK,0BAUD,OATA8Q,EAAS9P,uBAAwB,EACjC8P,EAAStP,aAAc,EACvBsP,EAASxP,WAAY,EACrBwP,EAASvP,WAAY,EACrBuP,EAAS3P,eAAgB,EACzB2P,EAASV,kBAAmB,EAE5BU,EAAS/H,SAAW+H,EAAS/H,QAEtB+H,EACX,IAAK,eAQD,OAPAA,EAAS9P,uBAAwB,EACjC8P,EAAStP,aAAc,EACvBsP,EAASxP,WAAY,EACrBwP,EAASvP,WAAY,EACrBuP,EAAS3P,eAAgB,EACzB2P,EAASV,kBAAmB,EAErBU,EACX,IAAK,aAQD,OAPAA,EAAS9P,uBAAwB,EACjC8P,EAAStP,aAAc,EACvBsP,EAASxP,WAAY,EACrBwP,EAASvP,WAAY,EACrBuP,EAAS3P,eAAgB,EACzB2P,EAASV,kBAAmB,EAErBU,EACX,IAAK,aAQD,OAPAA,EAAS9P,uBAAwB,EACjC8P,EAAStP,aAAc,EACvBsP,EAASxP,WAAY,EACrBwP,EAASvP,WAAY,EACrBuP,EAAS3P,eAAgB,EACzB2P,EAASV,kBAAmB,EAErBU,EACX,IAAK,iBAQD,OAPAA,EAAS9P,uBAAwB,EACjC8P,EAAStP,aAAc,EACvBsP,EAASxP,WAAY,EACrBwP,EAASvP,WAAY,EACrBuP,EAAS3P,eAAgB,EACzB2P,EAASV,kBAAmB,EAErBU,EACX,IAAK,YAoBD,OAnBAA,EAAS9P,uBAAwB,EACjC8P,EAAStP,aAAc,EACvBsP,EAASxP,WAAY,EACrBwP,EAASvP,WAAY,EACrBuP,EAAS3P,eAAgB,EACzB2P,EAASV,kBAAmB,EAE5BW,EAAalP,MAAQgP,EAAO9L,cAC5BgM,EAAajP,OAAS+O,EAAO/O,OAC7BiP,EAAazK,UAAY,GACzByK,EAAahP,KAAO8O,EAAO9O,KAC3BgP,EAAa9I,MAAQ,EACrB8I,EAAatF,MAAQ,EACrBsF,EAAatG,WAAa,EAC1BsG,EAAa/I,IAAM0I,IAInBI,EAASlP,UAAYmP,EACdD,EACX,IAAK,YAiBD,OAhBAC,EAAatG,YAAcoG,EAAOpG,WAClCsG,EAAatF,OAASoF,EAAOpF,MAEH,KAAvBsF,EAAa9I,MACZ8I,EAAatG,WAAa,EAEtBsG,EAAatG,WAAaqG,EAAS1K,SAASsF,mBAAmBoF,EAASlP,UAAUqG,MAAM,KAC5F8I,EAAa9I,OAAS,EACI,KAAvB8I,EAAa9I,QACZ8I,EAAatG,WAAa,GAE9BsG,EAAatG,YAAcqG,EAAS1K,SAASsF,mBAAmBoF,EAASlP,UAAUqG,MAAM,IAI7F6I,EAASlP,UAAYmP,EACdD,EACX,IAAK,gBAQD,OAPGC,EAAatF,OAASoF,EAAOjK,OAC5BmK,EAAajP,OAAO+O,EAAOjG,YAAc,IAAIrI,EAAMsO,EAAOtB,UAC1DwB,EAAatF,OAASoF,EAAOjK,MAIjCkK,EAASlP,UAAYmP,EACdD,EACX,IAAK,gBAQD,OAPGC,EAAatF,OAASoF,EAAO1G,KAAKvD,OACjCmK,EAAazK,UAAUX,KAAKkL,EAAO1G,MACnC4G,EAAatF,OAASoF,EAAO1G,KAAKvD,MAItCkK,EAASlP,UAAYmP,EACdD,EACX,IAAK,iBAcD,OATAA,EAAS9P,uBAAwB,EACjC8P,EAAStP,aAAc,EACvBsP,EAASxP,WAAY,EACrBwP,EAASvP,WAAY,EACrBuP,EAAS3P,eAAgB,EACzB2P,EAASV,kBAAmB,EAE5BW,EAAeF,EAAOjP,UACtBkP,EAASlP,UAAYmP,EACdD,EACX,IAAK,kBAiBD,OAhBAA,EAASlP,UAAY,CACjBC,MAAO,KACP4J,MAAO,EACPxD,MAAO,EACPwC,WAAY,EACZ3I,OAAQ,GACRwE,UAAW,GACXvE,KAAM,GACNiG,IAAK,MAKT8I,EAAS3P,eAAgB,EACzB2P,EAASV,kBAAmB,EAErBU,EACX,IAAK,iBAQD,OAPGD,EAAO5Q,UACN6Q,EAAS7Q,UAAY4Q,EAAO5Q,WAG5B6Q,EAAS7Q,UAAYyQ,IACrBT,aAAaN,QAAQ,YAAamB,EAAS7Q,YAExC6Q,EACX,QACI,OAAOnP,ICtJJqP,EAzBM,CACjBZ,kBAAkB,EAClBpP,uBAAuB,EACvBQ,aAAa,EACbD,WAAW,EACXD,WAAW,EACXH,eAAe,EACfiF,SAAU,CACNkC,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAC/FC,sBAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9FmD,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEnG9J,UAAW,CACPC,MAAO,KACP4J,MAAO,EACPxD,MAAO,EACPwC,WAAY,EACZ3I,OAAQ,GACRwE,UAAW,GACXvE,KAAM,GACNiG,IAAK,MAET/H,UAAW,MCXTgR,EAAQC,YAAYN,EAAaI,EAAcpE,OAAOuE,8BAAgCvE,OAAOuE,gCAEnGC,IAASC,OAAQ7Q,EAAAC,EAAAC,cAAC4Q,EAAA,EAAD,CAAUL,MAAOA,GAAOzQ,EAAAC,EAAAC,cAAC6Q,EAAD,OAAqBrE,SAASC,eAAe","file":"static/js/main.406f6b25.chunk.js","sourcesContent":["let showCharacterCreation = () => {\r\n    return {\r\n        type: \"SHOW_CHARACTER_CREATION\"\r\n    }\r\n}\r\n\r\nlet showCredits = () => {\r\n    return {\r\n        type: \"SHOW_CREDITS\"\r\n    }\r\n}\r\n\r\nlet showArena = () => {\r\n    return {\r\n        type: \"SHOW_ARENA\"\r\n    }\r\n}\r\n\r\nlet showStore = () => {\r\n    return {\r\n        type: \"SHOW_STORE\"\r\n    }\r\n}\r\n\r\nlet showCharacter = () => {\r\n    return {\r\n        type: \"SHOW_CHARACTER\"\r\n    }\r\n}\r\n\r\nlet setClass = (selectedClass, spells, name) => {\r\n    return {\r\n        type: \"SET_CLASS\",\r\n        selectedClass,\r\n        spells,\r\n        name\r\n    }\r\n}\r\n\r\nlet giveLoot = (experience, coins) => {\r\n    return {\r\n        type: \"GIVE_LOOT\",\r\n        experience,\r\n        coins\r\n    }\r\n}\r\n\r\nlet upgradeSpell = (spellIndex, cost, newSpell) => {\r\n    return {\r\n        type: \"UPGRADE_SPELL\",\r\n        spellIndex,\r\n        cost,\r\n        newSpell\r\n    }\r\n}\r\n\r\nlet purchaseItem = (item) => {\r\n    return {\r\n        type: \"PURCHASE_ITEM\",\r\n        item\r\n    }\r\n}\r\n\r\nlet loadCharacter = (character, cached) => {\r\n    return {\r\n        type: \"LOAD_CHARACTER\",\r\n        character,\r\n        cached\r\n    }\r\n}\r\n\r\nlet resetCharacter = () => {\r\n    return {\r\n        type: \"RESET_CHARACTER\"\r\n    }\r\n}\r\n\r\nlet setAccountId = (accountId = null) => {\r\n    return {\r\n        type: \"SET_ACCOUNT_ID\",\r\n        accountId\r\n    }\r\n}\r\n\r\nexport {\r\n    showCharacterCreation,\r\n    showCredits,\r\n    showArena,\r\n    showStore,\r\n    showCharacter,\r\n    setClass,\r\n    giveLoot,\r\n    upgradeSpell,\r\n    purchaseItem,\r\n    loadCharacter,\r\n    resetCharacter,\r\n    setAccountId\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nimport { showCharacterCreation, showCredits, showArena, showStore, showCharacter } from \"../../actions/actions\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"navigation\">\r\n        <img className=\"logo\" src={\"/images/arena2.png\"} alt=\"\" />\r\n        <ul>\r\n          <li className={ this.props.showCharacterCreation ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCharacterCreation())}>Characters</button>\r\n          </li>\r\n          <li className={ this.props.showCharacter ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCharacter())} disabled={this.props.characterClass === null}>My Character</button>\r\n          </li>\r\n          <li className={ this.props.showArena ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showArena())} disabled={this.props.characterClass === null}>Into The Arena</button>\r\n          </li>\r\n          <li className={ this.props.showStore ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showStore())} disabled={this.props.characterClass === null}>Store</button>\r\n          </li>\r\n          <li className={ this.props.showCredits ? \"active\" : null }>\r\n            <button onClick={() => this.props.dispatch(showCredits())}>Credits</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showCharacterCreation: state.showCharacterCreation,\r\n    showCredits: state.showCredits,\r\n    showArena: state.showArena,\r\n    showStore: state.showStore,\r\n    showCharacter: state.showCharacter, \r\n    characterClass: state.character.class\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","const spells = [\r\n    {\r\n        id: 0,\r\n        name: \"Attack\",\r\n        icon: \"icons/spells/attack.png\",\r\n        description: \"Attack your enemy for [d] damage.\",\r\n        resourceCost: 0,\r\n        baseDamage: 15,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 2, 4]\r\n    }, {\r\n        id: 1,\r\n        name: \"Heal\",\r\n        icon: \"icons/spells/heal.png\",\r\n        description: \"Cast a heal on yourself, restoring [h] health points.\",\r\n        resourceCost: 15,\r\n        baseDamage: 0,\r\n        baseHealing: 30,\r\n        rank: 1,\r\n        rankModifier: [1, 2, 3.5]\r\n    }, {\r\n        id: 2,\r\n        name: \"Charged Arrow\",\r\n        icon: \"icons/spells/charged_arrow.png\",\r\n        description: \"Launches a charged arrow at your enemy, dealing [d] damage.\",\r\n        resourceCost: 30,\r\n        baseDamage: 35,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.5, 2.5]\r\n    }, {\r\n        id: 3,\r\n        name: \"Piercing Shot\",\r\n        icon: \"icons/spells/piercing_shot.png\",\r\n        description: \"An extremely strong arrow pierces your enemy, instantly dealing [d] damage.\",\r\n        resourceCost: 10,\r\n        baseDamage: 25,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.5, 2.15]\r\n    }, {\r\n        id: 4,\r\n        name: \"Quick Strike\",\r\n        icon: \"icons/spells/quick_strike.png\",\r\n        description: \"A quick attack that deals [d] damage.\",\r\n        resourceCost: 10,\r\n        baseDamage: 20,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 2.1, 3.15]\r\n    }, {\r\n        id: 5,\r\n        name: \"Skull Bash\",\r\n        icon: \"icons/spells/skull_bash.png\",\r\n        description: \"A brutal slam that deals [d] damage.\",\r\n        resourceCost: 35,\r\n        baseDamage: 30,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 2, 2.95]\r\n    }, {\r\n        id: 6,\r\n        name: \"Ambush\",\r\n        icon: \"icons/spells/ambush.png\",\r\n        description: \"Stab your target from behind, dealing [d] damage.\",\r\n        resourceCost: 15,\r\n        baseDamage: 25,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.75, 2.15]\r\n    }, {\r\n        id: 7,\r\n        name: \"Venomous Vial\",\r\n        icon: \"icons/spells/venomous_vial.png\",\r\n        description: \"Throw a vial of poison at your target, dealing [d] damage.\",\r\n        resourceCost: 25,\r\n        baseDamage: 30,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.55, 1.85]\r\n    }, {\r\n        id: 8,\r\n        name: \"Incinerate\",\r\n        icon: \"icons/spells/incinerate.png\",\r\n        description: \"Set your target ablaze, dealing [d] damage.\",\r\n        resourceCost: 20,\r\n        baseDamage: 30,\r\n        baseHealing: 0,\r\n        rank: 1,\r\n        rankModifier: [1, 1.55, 2.25]\r\n    }, {\r\n        id: 9,\r\n        name: \"Transfusion\",\r\n        icon: \"icons/spells/transfusion.png\",\r\n        description: \"Fuse your energy with the enemy, dealing [d] damage, and restoring [h] health points to you.\",\r\n        resourceCost: 60,\r\n        baseDamage: 20,\r\n        baseHealing: 20,\r\n        rank: 1,\r\n        rankModifier: [1, 1.55, 2.25]\r\n    }, {\r\n        id: 10,\r\n        name: \"Health Potion\",\r\n        icon: \"icons/spells/health_potion.png\",\r\n        description: \"Drink a health potion, restoring [h] health points.\",\r\n        resourceCost: 0,\r\n        baseDamage: 0,\r\n        baseHealing: 20,\r\n        rank: 1,\r\n        rankModifier: [1, 2.5, 4.5]\r\n    }\r\n];\r\n\r\nexport default spells;","class Spell {\r\n    constructor(spell) {\r\n        this._id = spell.id;\r\n        this._name = spell.name;\r\n        this._icon = spell.icon;\r\n        this._description = spell.description;\r\n        this._resourceCost = spell.resourceCost;\r\n        this._baseDamage = spell.baseDamage;\r\n        this._baseHealing = spell.baseHealing;\r\n        this._rank = spell.rank;\r\n        this._rankModifier = spell.rankModifier;\r\n    }\r\n\r\n    get properties() {\r\n        return {\r\n            id: this._id,\r\n            name: this._name,\r\n            icon: this._icon,\r\n            description: this._description,\r\n            resourceCost: this._resourceCost,\r\n            baseDamage: this._baseDamage,\r\n            baseHealing: this._baseHealing,\r\n            rank: this._rank,\r\n            rankModifier: [...this._rankModifier]\r\n        };\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get icon() {\r\n        return this._icon;\r\n    }\r\n\r\n    get resourceCost() {\r\n        return this._resourceCost;\r\n    }\r\n\r\n    get rankModifier() {\r\n        return this._rankModifier;\r\n    }\r\n\r\n    get description() {\r\n        let description = this._description;\r\n        description = description.replace(/\\[d\\]/g, `${Math.floor(this.damage*0.9)}-${Math.floor(this.damage*1.1)}`);\r\n        description = description.replace(/\\[h\\]/g, `${Math.floor(this.healing*0.9)}-${Math.floor(this.healing*1.1)}`);\r\n        return description;\r\n    }\r\n\r\n    get damage() {\r\n        return Math.floor(this._baseDamage * this.rankModifier[this._rank-1]);\r\n    }\r\n\r\n    get healing() {\r\n        return Math.floor(this._baseHealing * this.rankModifier[this._rank-1]);\r\n    }\r\n\r\n    get rank() {\r\n        return this._rank;\r\n    }\r\n\r\n    set rank(newRank) {\r\n        this._rank = newRank;\r\n    }\r\n}\r\n\r\nexport default Spell;","const classes = [\r\n    {\r\n        id: 0,\r\n        name: \"Warrior\",\r\n        description: \"A warrior is a brutal and tough class, warriors have a high health pool and moderate damage.\",\r\n        icon: \"icons/classes/warrior.png\",\r\n        resourceType: \"Energy\",\r\n        healthModifier: 1.9,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.5,\r\n        healingModifier: 1,\r\n        spells: [0, 4, 5, 10]\r\n    }, {\r\n        id: 1,\r\n        name: \"Archer\",\r\n        description: \"An archer is an agile and fast-paced class, archers have a moderate health pool and damage.\",\r\n        icon: \"icons/classes/archer.png\",\r\n        resourceType: \"Mana\",\r\n        healthModifier: 1.5,\r\n        resourceModifier: 1.3,\r\n        damageModifier: 1.5,\r\n        healingModifier: 1.5,\r\n        spells: [0, 3, 2, 1]\r\n    }, {\r\n        id: 2,\r\n        name: \"Rogue\",\r\n        description: \"A rogue is a silent but deadly class, rogues have a low health pool and high damage.\",\r\n        icon: \"icons/classes/rogue.png\",\r\n        resourceType: \"Energy\",\r\n        healthModifier: 1.3,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.8,\r\n        healingModifier: 1,\r\n        spells: [0, 6, 7, 10]\r\n    }, {\r\n        id: 3,\r\n        name: \"Wizard\",\r\n        description: \"A wizard is an extremely dangerous class, wizards have a very low health pool and extremely high damage.\",\r\n        icon: \"icons/classes/wizard.png\",\r\n        resourceType: \"Mana\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1.8,\r\n        damageModifier: 2,\r\n        healingModifier: 2,\r\n        spells: [0, 8, 9, 1]\r\n    }, \r\n];\r\n\r\nexport default classes;","import React, { Component } from \"react\";\r\nimport \"./newCharacter.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setClass } from \"../../actions/actions\";\r\n\r\nimport spells from \"../../states/spells\";\r\nimport Spell from \"../../classes/spell\";\r\n\r\nimport classes from \"../../states/classes\";\r\n\r\nclass NewCharacter extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedId: 0,\r\n            characterName: \"\",\r\n            nameError: false,\r\n            spells: []\r\n        }\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let spellArray = spells.map(spell => new Spell(spell));\r\n        this.setState({ spells: spellArray });\r\n    }\r\n\r\n    selectClass(selectedClass) {\r\n        let spells = this.getAvailableSpells(selectedClass.spells);\r\n        this.props.dispatch(setClass(selectedClass, spells, this.state.characterName));\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        let reg = /^[a-z]+$/i;\r\n        let name = event.target.value;\r\n        if(name.match(reg)) {\r\n            this.setState({ characterName: name, nameError: false });\r\n        }\r\n        else {\r\n            this.setState({ nameError: true });\r\n        }\r\n    }\r\n\r\n    getAvailableSpells(spellList) {\r\n        let availableSpells = [];\r\n\r\n        spellList.forEach(availableSpell => {\r\n            this.state.spells.forEach(spell => {\r\n                if(spell.id === availableSpell) {\r\n                    availableSpells.push(spell);\r\n                }\r\n            });\r\n        });\r\n\r\n        return availableSpells;\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"newCharacter\">\r\n        <h3>ChOOse A Name</h3>\r\n        <div className=\"characterName\">\r\n            <input maxLength=\"16\" type=\"text\" placeholder=\"Name\" onChange={ this.handleNameChange } className={this.state.nameError ? \"error\" : null} />\r\n            { this.state.nameError && <p className=\"nameError\">Your name must be between 2 and 16 characters and contain only letters.</p> }\r\n        </div>\r\n        <h3 className=\"classesHeader\">Select yOUr Class</h3>\r\n        <div className=\"classes\">\r\n            {classes.map(currentClass => (\r\n                <div key={currentClass.id} className={this.state.selectedId === currentClass.id ? \"classframe selected hoverable\" : \"classframe hoverable\"} onClick={() => this.setState({ selectedId: currentClass.id })}>\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + currentClass.icon} alt=\"\" />\r\n                </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"classList\">\r\n            {classes.map(currentClass => (\r\n            <div className={ this.state.selectedId === currentClass.id ? \"class selected\" : \"class\"} key={currentClass.id}>\r\n                <div className=\"header\">\r\n                <div className=\"classframe\">\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + currentClass.icon} alt=\"\" />\r\n                </div>\r\n                    <h3>{currentClass.name}</h3>\r\n                </div>\r\n                <p className=\"description\">{currentClass.description}</p>\r\n                <h4>Spells</h4>\r\n                <div className=\"spells\">\r\n                {this.getAvailableSpells(currentClass.spells).map(spell => (\r\n                    <div key={spell.id} className=\"spell\">\r\n                        <div className=\"spellframe\">\r\n                            <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                            <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                            <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                            <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"spellDescription\">\r\n                            <div>\r\n                                <div>\r\n                                    <p className=\"spellName\">{spell.name}</p>\r\n                                    { spell.resourceCost !== 0 && \r\n                                        <p className=\"resourceCost\">{spell.resourceCost} {currentClass.resourceType.toLowerCase()}</p>\r\n                                    }\r\n                                </div>\r\n                                <p>Rank {spell.rank}</p>\r\n                            </div>\r\n                            <p>\r\n                                {spell.description}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                <div className=\"selectBtnContainer\">\r\n                    <button className=\"selectBtn\" onClick={() => this.selectClass(currentClass)} disabled={this.state.characterName.length < 2}></button>\r\n                </div>\r\n            </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    settings: state.settings\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NewCharacter);\r\n","class Equipment {\r\n    constructor(equipment) {\r\n        this._id = equipment.id;\r\n        this._name = equipment.name;\r\n        this._icon = equipment.icon;\r\n        this._description = equipment.description;\r\n        this._healthModifier = equipment.healthModifier;\r\n        this._resourceModifier = equipment.resourceModifier;\r\n        this._damageModifier = equipment.damageModifier;\r\n        this._healingModifier = equipment.healingModifier;\r\n        this._cost = equipment.cost;\r\n        this._requiredLevel = equipment.requiredLevel;\r\n        this._availableClasses = equipment.availableClasses;\r\n    }\r\n\r\n    get properties() {\r\n        return {\r\n            id: this._id,\r\n            name: this._name,\r\n            icon: this._icon,\r\n            description: this._description,\r\n            healthModifier: this._healthModifier,\r\n            resourceModifier: this._resourceModifier,\r\n            damageModifier: this._damageModifier,\r\n            healingModifier: this._healingModifier,\r\n            cost: this._cost,\r\n            requiredLevel: this._requiredLevel,\r\n            availableClasses: [...this._availableClasses]\r\n        };\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get icon() {\r\n        return this._icon;\r\n    }\r\n\r\n    get description() {\r\n        let description = this._description;\r\n        description = description.replace(/\\[r\\]/g, Math.floor(this.resourceModifier * 100) - 100);\r\n        description = description.replace(/\\[hp\\]/g, Math.floor(this.healthModifier * 100) - 100);\r\n        description = description.replace(/\\[d\\]/g, Math.floor(this.damageModifier * 100) - 100);\r\n        description = description.replace(/\\[h\\]/g, Math.floor(this.healingModifier * 100) - 100);\r\n        return description;\r\n    }\r\n\r\n    get healthModifier() {\r\n        return this._healthModifier;\r\n    }\r\n\r\n    get resourceModifier() {\r\n        return this._resourceModifier;\r\n    }\r\n\r\n    get damageModifier() {\r\n        return this._damageModifier;\r\n    }\r\n\r\n    get healingModifier() {\r\n        return this._healingModifier;\r\n    }\r\n\r\n    get cost() {\r\n        return this._cost;\r\n    }\r\n\r\n    get requiredLevel() {\r\n        return this._requiredLevel;\r\n    }\r\n\r\n    get availableClasses() {\r\n        return this._availableClasses; \r\n    }\r\n}\r\n\r\nexport default Equipment;","import React, { Component } from \"react\";\r\nimport \"./loadCharacter.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loadCharacter } from \"../../actions/actions\";\r\n\r\nimport Spell from \"../../classes/spell\";\r\nimport Equipment from \"../../classes/equipment\";\r\n\r\nclass LoadCharacter extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            characters: [],\r\n            loadingFinished: false,\r\n            errorOccured: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/characters/get/\" + this.props.accountId, {\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"get\"\r\n        })\r\n        .then(res => {\r\n            res.json().then(characters => {\r\n                characters = characters.map(character => {\r\n                    character.spells = character.spells.map(spell => {\r\n                        return new Spell(spell);\r\n                    });\r\n                    character.equipment = character.equipment.map(equipment => {\r\n                        return new Equipment(equipment);\r\n                    });\r\n                    return character;\r\n                });\r\n\r\n                if(characters.length > 0) {\r\n                    this.setState({ characters, loadingFinished: true, errorOccured: false });\r\n                }\r\n                else {\r\n                    this.setState({ status: \"No characters found...\", loadingFinished: true, errorOccured: false });\r\n                }\r\n            });\r\n        })\r\n        .catch(err => {\r\n            this.setState({ errorOccured: true });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"loadCharacter\">\r\n                {!this.state.loadingFinished && !this.state.errorOccured && <p>Loading characters...</p>}\r\n                {this.state.errorOccured && <p>An error occured while loading characters...</p>}\r\n                {this.state.status && <p>{this.state.status}</p>}\r\n                {this.state.characters.length > 0 && \r\n                    <div className=\"characters\">\r\n                        {this.state.characters.map(character => {\r\n                            return (\r\n                                <div className=\"character\" key={character.uid}>\r\n                                    <div>\r\n                                        <div className=\"classframe\">\r\n                                            <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                                            <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                                            <img className=\"frame_icon\" src={\"/images/\" + character.class.icon} alt=\"\" />\r\n                                        </div>\r\n                                        <div className=\"name\">\r\n                                            <h4>{character.name}</h4>\r\n                                            <p>Level {character.level} <span>{character.class.name}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"stats\">\r\n                                            <div>\r\n                                                <h5>Health</h5>\r\n                                                <p>{Math.round(character.equipment.reduce((previous, current) => previous * current.healthModifier, 1) * character.class.healthModifier * this.props.settings.baseHealthPerLevel[character.level-1])}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <h5>{character.class.resourceType}</h5>\r\n                                                <p>{Math.round(character.equipment.reduce((previous, current) => previous * current.resourceModifier, 1) * character.class.resourceModifier * this.props.settings.baseResourcesPerLevel[character.level-1])}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <h5>Damage</h5>\r\n                                                <p>{(character.equipment.reduce((previous, current) => previous * current.damageModifier, 1) * character.class.damageModifier).toFixed(2)}x</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <h5>Healing</h5>\r\n                                                <p>{(character.equipment.reduce((previous, current) => previous * current.healingModifier, 1) * character.class.healingModifier).toFixed(2)}x</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"spells\">\r\n                                            {character.spells.map(spell => {\r\n                                                return (\r\n                                                    <div key={spell.id}>\r\n                                                        <h5>{spell.name}</h5>\r\n                                                        <div className=\"spellRanks\">\r\n                                                            {spell.rankModifier.map((modifier, index) => <div key={index} className={spell.rank > index ? \"learned\": \"notLearned\"}></div>)}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                    <button className=\"load\" onClick={() => this.props.dispatch(loadCharacter(character))}></button>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    settings: state.settings,\r\n    accountId: state.accountId\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoadCharacter);\r\n","import React, { Component } from \"react\";\r\nimport \"./characterCreation.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NewCharacter from \"./newCharacter\";\r\nimport LoadCharacter from \"./loadCharacter\";\r\n\r\nclass CharacterCreation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            view: \"\",\r\n            refresh: this.props.refresh\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        // Forcing update when clicking \"New Character\" in navigation to refresh and set view to 0 again\r\n        if(nextProps.refresh !== this.props.refresh) {\r\n            this.setState({ view: \"\" });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"characterCreation\">\r\n                {this.state.view === \"\" && \r\n                <div className=\"select\">\r\n                <div onClick={() => this.setState({ view: \"CREATE\" })}><h3>Create New</h3></div>\r\n                <div className=\"or\"><h1>OR</h1></div>\r\n                <div onClick={() => this.setState({ view: \"SAVED\" })}><h3>Load Existing</h3></div>\r\n                </div>\r\n                }\r\n                {this.state.view === \"CREATE\" && <NewCharacter />}\r\n                {this.state.view === \"SAVED\" && <LoadCharacter />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    classes: state.classes,\r\n    spells: state.spells,\r\n    settings: state.settings,\r\n    refresh: state.refresh,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CharacterCreation);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./credits.css\";\r\n\r\nclass Credits extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"credits\">\r\n        <div>\r\n        <h2>Special thanks to</h2>\r\n        <p>Delapouite (<a href=\"https://delapouite.com\">https://delapouite.com</a>), Wjb (<a href=\"http://wjbstories.blogspot.com\">http://wjbstories.blogspot.com</a>) \r\n        and Lorc (<a href=\"http://lorcblog.blogspot.com\">http://lorcblog.blogspot.com</a>) from <a href=\"https://game-icons.net\">https://game-icons.net</a> for the icons</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Credits;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./character.css\";\r\n\r\nimport { resetCharacter } from \"../../actions/actions\";\r\n\r\nclass Character extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            saved: false\r\n        }\r\n    }\r\n    saveToDatabase(character) {\r\n        let saveableCharacter = {\r\n            ...character,\r\n            accountId: this.props.accountId\r\n        }\r\n\r\n        saveableCharacter.spells = character.spells.map(spell => spell.properties);\r\n        saveableCharacter.equipment = character.equipment.map(equipment => equipment.properties);\r\n\r\n        fetch(\"/characters/save\", {\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"post\",\r\n            body: JSON.stringify(saveableCharacter)\r\n        }).then(res => {\r\n            res.json()\r\n            .then(res => {\r\n                // localStorage.setItem(\"character\", saveableCharacter);\r\n                this.setState({ saved: true }, () => setTimeout(() => { this.setState({ saved: false })}, 3000));\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    deleteFromDatabase(uid) {\r\n        fetch(\"/characters/delete/\" + uid, {\r\n            method: \"delete\"\r\n        })\r\n        .then(res => {\r\n            res.json()\r\n            .then(res => {\r\n                this.props.dispatch(resetCharacter());\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div id=\"character\">\r\n            {this.state.saved && <h5 className=\"saved\">Character data saved!</h5>}\r\n            <div className=\"btns\">\r\n                <button className=\"save\" onClick={() => this.saveToDatabase(this.props.character)}></button>\r\n                <button className=\"delete\" onClick={() => this.deleteFromDatabase(this.props.character.uid)}></button>\r\n            </div>\r\n            <div className=\"class\">\r\n                <h3>{this.props.character.name}</h3>\r\n                <div className=\"classframe\">\r\n                    <img className=\"frame\" src={\"/images/classframe/classframe.png\"} alt=\"\" />\r\n                    <img className=\"frame_active\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                    <img className=\"frame_icon\" src={\"/images/\" + this.props.character.class.icon} alt=\"\" />\r\n                </div>\r\n                <h3>Level {this.props.character.level}</h3>\r\n            </div>\r\n            <h4 className=\"className\">{this.props.character.class.name}</h4>\r\n            <div className=\"stats\">\r\n                <div>\r\n                    <h5>Health</h5>\r\n                    <p>{Math.round(this.props.character.equipment.reduce((previous, current) => previous * current.healthModifier, 1) * this.props.character.class.healthModifier * this.props.settings.baseHealthPerLevel[this.props.character.level-1])}</p>\r\n                </div>\r\n                <div>\r\n                    <h5>{this.props.character.class.resourceType}</h5>\r\n                    <p>{Math.round(this.props.character.equipment.reduce((previous, current) => previous * current.resourceModifier, 1) * this.props.character.class.resourceModifier * this.props.settings.baseResourcesPerLevel[this.props.character.level-1])}</p>\r\n                </div>\r\n                <div>\r\n                    <h5>Damage</h5>\r\n                    <p>{(this.props.character.equipment.reduce((previous, current) => previous * current.damageModifier, 1) * this.props.character.class.damageModifier).toFixed(2)}x</p>\r\n                </div>\r\n                <div>\r\n                    <h5>Healing</h5>\r\n                    <p>{(this.props.character.equipment.reduce((previous, current) => previous * current.healingModifier, 1) * this.props.character.class.healingModifier).toFixed(2)}x</p>\r\n                </div>\r\n            </div>\r\n            <h4 className=\"spellsHeader\">Spells</h4>\r\n            <div className=\"spells\">{this.props.character.spells.map(spell => (\r\n                    <div key={spell.id} className=\"spell\">\r\n                        <div className=\"spellframe\">\r\n                            <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                            <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                            <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                            <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"spellDescription\">\r\n                            <div>\r\n                                <div>\r\n                                    <p className=\"spellName\">{spell.name}</p>\r\n                                    { spell.resourceCost !== 0 && <p className=\"resourceCost\">{spell.resourceCost} {this.props.character.class.resourceType.toLowerCase()}</p>}\r\n                                </div>\r\n                                <p>Rank {spell.rank}</p>\r\n                            </div>\r\n                            <p>{spell.description}</p>\r\n                        </div>\r\n                        <div className=\"spellRanks\">\r\n                            {spell.rankModifier.map((modifier, index) => <div key={index} className={spell.rank > index ? \"learned\": \"notLearned\"}></div>)}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <h4 className=\"equipmentHeader\">Equipment</h4>\r\n            <div className=\"equipment\">\r\n                {this.props.character.equipment.length === 0 \r\n                    ? <p>You have not purchased any equipment.</p> \r\n                    : this.props.character.equipment.map(item => (\r\n                        <div key={item.id} className=\"item\">\r\n                            <div className=\"header\">\r\n                                <div className=\"spellframe\">\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + item.icon} alt=\"\" />\r\n                                </div>\r\n                                <h4>{item.name}</h4>\r\n                            </div>\r\n                            <p className=\"description\">{item.description}</p>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    settings: state.settings,\r\n    accountId: state.accountId\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Character);\r\n","class Player {\r\n    constructor(data, baseHealthPerLevel, baseResourcesPerLevel, experienceToNextLevel) {\r\n        this.maxHealth = baseHealthPerLevel[data.level-1] * data.class.healthModifier;\r\n        this.maxResources = baseResourcesPerLevel[data.level-1] * data.class.resourceModifier;\r\n        this.damageModifier = data.class.damageModifier;\r\n        this.healingModifier = data.class.healingModifier;\r\n        this.icon = data.class.icon;\r\n        this.name = data.name;\r\n        this.spells = data.spells;\r\n        this.equipment = data.equipment;\r\n        this.resourceType = data.class.resourceType;\r\n        this.className = data.class.name;\r\n        this.experience = data.experience;\r\n        this.experienceToNextLevel = experienceToNextLevel;\r\n        this.level = data.level;\r\n\r\n        data.equipment.forEach(item => {\r\n            this.damageModifier *= item.damageModifier;\r\n            this.healingModifier *= item.healingModifier;\r\n            this.maxHealth *= item.healthModifier;\r\n            this.maxResources *= item.resourceModifier;\r\n        });\r\n\r\n        this.currentHealth = this.maxHealth;\r\n        this.currentResources = this.maxResources;\r\n    }\r\n\r\n    attack(spellIndex) {\r\n        let spell = this.spells[spellIndex];\r\n        let randomizer = (Math.floor(Math.random() * 21) + 90)/100;\r\n\r\n        if(this.currentResources >= spell.resourceCost) {\r\n            this.currentResources -= spell.resourceCost;\r\n            \r\n            let damage = Math.floor(spell.damage * this.damageModifier * randomizer);\r\n            let healing = Math.floor(spell.healing * this.healingModifier * randomizer);\r\n            return [damage, healing];\r\n        }\r\n        return [0, 0];\r\n    }\r\n\r\n    receiveAttack(damage) {\r\n        if(this.currentHealth - damage <= 0) {\r\n            this.currentHealth = 0;\r\n        } \r\n        else {\r\n            this.currentHealth -= damage;\r\n        }\r\n    }\r\n\r\n    receiveHeal(healing) {\r\n        if(this.currentHealth + healing >= this.maxHealth) {\r\n            this.currentHealth = this.maxHealth;\r\n        }\r\n        else {\r\n            this.currentHealth += healing;\r\n        }\r\n    }\r\n\r\n    get getMaxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get getRemainingHealth() {\r\n        return this.currentHealth;\r\n    }\r\n\r\n    get getRemainingHealthPercentage() {\r\n        return (this.currentHealth / this.maxHealth) * 100;\r\n    }\r\n\r\n    get getMaxResources() {\r\n        return this.maxResources;\r\n    }\r\n\r\n    get getRemainingResources() {\r\n        return this.currentResources;\r\n    }\r\n\r\n    get getRemainingResourcesPercentage() {\r\n        return (this.currentResources / this.maxResources) * 100;\r\n    }\r\n\r\n    get getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    get getIcon() {\r\n        return this.icon;\r\n    }\r\n\r\n    get getResourceType() {\r\n        return this.resourceType;\r\n    }\r\n\r\n    get getClass() {\r\n        return this.className;\r\n    }\r\n\r\n    get getExperience() {\r\n        return this.experience;\r\n    }\r\n\r\n    get getExperienceToNextLevel() {\r\n        return this.experienceToNextLevel;\r\n    }\r\n\r\n    get getSpells() {\r\n        return this.spells;\r\n    }\r\n}\r\n\r\nexport default Player;","class Enemy {\r\n    constructor(data, baseHealthPerLevel) {\r\n        this.maxHealth = baseHealthPerLevel[data.level-1] * data.healthModifier;\r\n        this.currentHealth = this.maxHealth;\r\n        this.damageModifier = data.damageModifier;\r\n        this.icon = data.icon;\r\n        this.name = data.name;\r\n        this.level = data.level;\r\n    }\r\n\r\n    attack() {\r\n        let damage = Math.floor(50 * this.damageModifier * (Math.floor(Math.random() * 21) + 90) / 100);\r\n        return [damage, 0];\r\n    }\r\n\r\n    receiveAttack(damage) {\r\n        if(this.currentHealth - damage <= 0) {\r\n            this.currentHealth = 0;\r\n        } \r\n        else {\r\n            this.currentHealth -= damage;\r\n        }\r\n    }\r\n\r\n    get getMaxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get getRemainingHealth() {\r\n        return this.currentHealth;\r\n    }\r\n\r\n    get getRemainingHealthPercentage() {\r\n        return (this.currentHealth / this.maxHealth) * 100;\r\n    }\r\n\r\n    get getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    get getIcon() {\r\n        return this.icon;\r\n    }\r\n}\r\n\r\nexport default Enemy;","const enemies = [\r\n    {\r\n        id: 0,\r\n        name: \"Evil Imp\",\r\n        icon: \"icons/enemies/evil_imp.png\",\r\n        level: 1,\r\n        healthModifier: 1,\r\n        damageModifier: 1\r\n    }, {\r\n        id: 1,\r\n        name: \"Twin Hydras\",\r\n        icon: \"icons/enemies/twin_hydras.png\",\r\n        level: 2,\r\n        healthModifier: 1.25,\r\n        damageModifier: 0.85\r\n    },{\r\n        id: 2,\r\n        name: \"Gnarly Goblin\",\r\n        icon: \"icons/enemies/gnarly_goblin.png\",\r\n        level: 4,\r\n        healthModifier: 1.5,\r\n        damageModifier: 0.7\r\n    }, {\r\n        id: 3,\r\n        name: \"Spark Spirit\",\r\n        icon: \"icons/enemies/spark_spirit.png\",\r\n        level: 6,\r\n        healthModifier: 1,\r\n        damageModifier: 1.7\r\n    }, {\r\n        id: 4,\r\n        name: \"Greater Demon\",\r\n        icon: \"icons/enemies/greater_demon.png\",\r\n        level: 8,\r\n        healthModifier: 2.1,\r\n        damageModifier: 1.9\r\n    }, {\r\n        id: 5,\r\n        name: \"The Beast\",\r\n        icon: \"icons/enemies/the_beast.png\",\r\n        level: 10,\r\n        healthModifier: 2.5,\r\n        damageModifier: 3\r\n    }\r\n];\r\n\r\nexport default enemies;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Player from \"../../classes/player\";\r\nimport Enemy from \"../../classes/enemy\";\r\n\r\nimport enemies from \"../../states/enemies\";\r\n\r\nimport \"./arena.css\";\r\nimport { giveLoot } from \"../../actions/actions\";\r\n\r\nclass Arena extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            arenaLevel: 1,\r\n            playerTurn: true,\r\n            latestAction: \"Your Venomous Vial hit Enemy for 40 damage.\",\r\n            showLatestAction: false,\r\n            player: null,\r\n            enemy: null,\r\n            status: \"WAITING\", // WINNER, LOSER, INPROGRESS, WAITING\r\n            loot: {\r\n                experience: 0,\r\n                coins: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    startArena() {\r\n        let enemy = new Enemy(enemies[this.state.arenaLevel-1], this.props.settings.baseHealthPerLevel);\r\n        let player = new Player(this.props.character, this.props.settings.baseHealthPerLevel, \r\n            this.props.settings.baseResourcesPerLevel, this.props.settings.requiredExperience[this.props.character.level-1]);\r\n        this.setState({ enemy, player}, () => {\r\n            this.addSpellEventListeners();\r\n            this.setState({ status: \"INPROGRESS\" });\r\n        });\r\n    }\r\n\r\n    checkForWinner() {\r\n        if(this.state.enemy.getRemainingHealth <= 0) {\r\n            this.distributeLoot();\r\n            return true;\r\n        }\r\n        else if(this.state.player.getRemainingHealth <= 0) {\r\n            this.setState({ status: \"LOSER\" });\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    distributeLoot() {\r\n        if(this.state.loot.experience === 0 && this.state.loot.coins === 0) { \r\n            let experience = Math.floor(this.state.enemy.getLevel * 50 * ((Math.floor(Math.random() * 50) + 75) / 100));\r\n            let coins = Math.floor(this.state.enemy.getLevel * 15 * ((Math.floor(Math.random() * 50) + 75) / 100));\r\n            this.setState({ loot: { experience, coins }, status: \"WINNER\" }, () => {\r\n                this.props.dispatch(giveLoot(experience, coins));\r\n            });\r\n        }\r\n    }\r\n\r\n    resetArena() {\r\n        this.setState({ playerTurn: true, showLatestAction: false, arenaLevel: 1 }, () => {\r\n            this.startArena();\r\n        });\r\n    }\r\n\r\n    startNextLevel() {\r\n        let nextLevel = this.state.arenaLevel + 1;\r\n        this.setState({ playerTurn: true, showLatestAction: false, arenaLevel: nextLevel, loot: { experience: 0, coins: 0} }, () => {\r\n            this.startArena();\r\n        });\r\n    }\r\n\r\n    handlePlayerAttack(index) {\r\n        if(this.checkForWinner()) {\r\n            return;\r\n        }\r\n        else if(this.state.status === \"INPROGRESS\") {\r\n            if(!this.state.playerTurn) {\r\n                return\r\n            }\r\n\r\n            let values = this.state.player.attack(index);\r\n            let damage = values[0];\r\n            let healing = values[1];\r\n            let actionText;\r\n\r\n            if(damage > 0 && healing > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} hit ${this.state.enemy.getName} ${damage} damage and restored \r\n                ${healing} health points to you.`; \r\n            }\r\n            else if(damage > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} hit ${this.state.enemy.getName} ${damage} damage.`;\r\n            }\r\n            else if(healing > 0) {\r\n                actionText = `Your ${this.state.player.getSpells[index].name} healed you ${healing} health points.`;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n\r\n            this.setState({ playerTurn: false });\r\n            this.state.enemy.receiveAttack(damage);\r\n            this.state.player.receiveHeal(healing);\r\n\r\n            this.setState({ showLatestAction: true, latestAction: actionText });\r\n            window.setTimeout(() => {\r\n                this.setState({ showLatestAction: false });\r\n                this.handleEnemyAttack();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    handleEnemyAttack() {\r\n        if(this.checkForWinner()) {\r\n            return;\r\n        }\r\n        else if(this.state.status === \"INPROGRESS\") {\r\n            let damage = this.state.enemy.attack()[0];\r\n            let actionText = `${this.state.enemy.getName} hit you for ${damage} damage.`;\r\n\r\n            this.state.player.receiveAttack(damage);\r\n\r\n            this.setState({ showLatestAction: true, latestAction: actionText });\r\n            window.setTimeout(() => {\r\n                this.setState({ showLatestAction: false, playerTurn: true });\r\n                this.checkForWinner();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    addSpellEventListeners() {\r\n        window.addEventListener(\"keydown\", event => {\r\n            let container = document.getElementById(\"spells\"); \r\n\r\n            if(event.key === \"1\") {\r\n                let spell = container.children[0].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"2\") {\r\n                let spell = container.children[1].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"3\") {\r\n                let spell = container.children[2].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            } else if(event.key === \"4\") {\r\n                let spell = container.children[3].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return; \r\n                spell.classList.add(\"clicked\");\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"keyup\", event => {\r\n            let container = document.getElementById(\"spells\");\r\n\r\n            if(event.key === \"1\") {\r\n                let spell = container.children[0].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(0);\r\n            } else if(event.key === \"2\") {\r\n                let spell = container.children[1].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(1);\r\n            } else if(event.key === \"3\") {\r\n                let spell = container.children[2].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(2);\r\n            } else if(event.key === \"4\") {\r\n                let spell = container.children[3].children[0];\r\n                if(spell.classList.contains(\"disabled\")) return;\r\n                spell.classList.remove(\"clicked\");\r\n                this.handlePlayerAttack(3);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"arena\">\r\n                { this.state.status === \"WAITING\" && \r\n                    <div className=\"introduction\">\r\n                        <h2>The Arena</h2>\r\n                        <p>Welcome, {this.props.character.name}. \r\n                        <br/>\r\n                        The arena consists of 6 stages. For each stage you complete you will be facing a tougher enemy. \r\n                        Should an enemy prove too difficult of a challenge, spell and armor upgrades can be bought in the shop.\r\n                        Beat the 6th and final enemy to prove your worth.\r\n                        <br/>\r\n                        <br/>\r\n                        Whenever you're ready, hit the button below to fight your first enemy.\r\n                        </p>\r\n                        <div>\r\n                            <button className=\"startBtn\" onClick={() => this.startArena()}></button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                { this.state.status !== \"WAITING\" && <React.Fragment>\r\n                    <div className=\"enemyFrame\">\r\n                        <div className=\"enemy\">\r\n                            <div className=\"enemyProfile\">\r\n                                <div className=\"enemyUnitFrame\">\r\n                                    <img className=\"frame\" src={\"/images/classframe/classframe_active.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + this.state.enemy.getIcon} alt=\"\" />\r\n                                </div>\r\n                                <h3 className=\"enemyName\">{this.state.enemy.getName}</h3>\r\n                            </div>\r\n                            <div className=\"levelIndicatorFrame\">\r\n                                <img className=\"container\" src={\"/images/level_indicator_container.png\"} alt=\"\" />\r\n                                {[0, 1, 2, 3, 4,5 ].map(n => {\r\n                                    let left = (n * 32) + 3 + \"px\";\r\n                                    let indicatorStyle = {\r\n                                        left \r\n                                    }\r\n                                    return (<img key={n} style={indicatorStyle} className={this.state.arenaLevel > n ? \"indicator\" : \"indicator hidden\"} src={\"/images/level_indicator.png\"} alt=\"\" />)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <p className=\"level\">Level {this.state.enemy.getLevel}</p>\r\n                            <p className=\"health\">{Math.floor(this.state.enemy.getRemainingHealth)}/{Math.floor(this.state.enemy.getMaxHealth)} HP</p>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.enemy.getRemainingHealthPercentage * 4.94) + \"px\"}} className=\"frame_filler_health\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"statusFrame\">\r\n                        {!this.state.showLatestAction && this.state.status === \"INPROGRESS\" && <h3>It Is Your Turn!</h3>}\r\n                        {this.state.showLatestAction && this.state.status === \"INPROGRESS\" && <h4>{this.state.latestAction}</h4>}\r\n                        {this.state.status === \"WINNER\" && \r\n                            <div>\r\n                                <h2>Victory</h2>\r\n                                <div className=\"loot\">\r\n                                    <h5>Rewards</h5>\r\n                                    <p className=\"expGain\">+{this.state.loot.experience} experience</p>\r\n                                    <p className=\"coinGain\">+{this.state.loot.coins} <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/></p>\r\n                                </div>\r\n                                {this.state.arenaLevel !== 6 && <button className=\"continueBtn\" onClick={() => this.startNextLevel()}></button>}\r\n                                {this.state.arenaLevel === 6 && <h3>Congratulations hero, You beat the final enemy!</h3>}\r\n                            </div>\r\n                        }\r\n                        {this.state.status === \"LOSER\" && \r\n                            <div>\r\n                                <h2>Defeat</h2>\r\n                                <button className=\"restartBtn\" onClick={() => this.resetArena()}></button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"playerFrame\">\r\n                        <div id=\"spells\">\r\n                            { this.state.player.getSpells.map( (spell, index) =>\r\n                            <div key={spell.id} className=\"spell\" onClick={() => this.handlePlayerAttack(index)}>\r\n                                <div className={this.state.playerTurn && (this.state.player.getRemainingResources >= spell.resourceCost) ? \"spellframe clickable\" : \"spellframe disabled\"}>\r\n                                    <p className=\"bind\">{index+1}</p>\r\n                                    <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                    <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                    <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                    <img className=\"frame_icon\" src={\"/images/\" + spell.icon} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"spellDescription\">\r\n                                    <div>\r\n                                        <div>\r\n                                            <p className=\"spellName\">{spell.name}</p>\r\n                                            { spell.resourceCost !== 0 && <p className={spell.resourceCost > this.state.player.getRemainingResources ? \"resourceCost lowMana\" : \"resourceCost\"}>{spell.resourceCost} {this.state.player.getResourceType}</p>}\r\n                                        </div>\r\n                                        <p>Rank {spell.rank}</p>\r\n                                    </div>\r\n                                    <p>{spell.description}</p>\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <div className=\"playerInfo\">\r\n                                <div>\r\n                                    <h4>{this.state.player.getName}</h4>\r\n                                    <div className=\"playerCoins\">\r\n                                        <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/>\r\n                                        <p>{this.props.character.coins}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p>Level {this.state.player.getLevel} <span>{this.state.player.getClass}</span></p>\r\n                                    <p>{Math.floor(this.state.player.getRemainingHealth)}/{Math.floor(this.state.player.getMaxHealth)} HP</p>\r\n                                    <p>{Math.floor(this.state.player.getRemainingResources)}/{Math.floor(this.state.player.getMaxResources)} {this.state.player.getResourceType}</p>\r\n                                </div>\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.player.getRemainingHealthPercentage * 4.94) + \"px\"}} className=\"frame_filler_health\"></div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            <div style={{width: (this.state.player.getRemainingResourcesPercentage * 4.94) + \"px\"}} className={\"frame_filler_\" + this.state.player.getResourceType.toLowerCase()}></div>\r\n                        </div>\r\n                        <div className=\"resourcebar\">\r\n                            <div className=\"playerExp\">\r\n                                {this.state.player.getLevel === 15 && <p>Max Level</p>}\r\n                                {this.state.player.getLevel < 15 && <p>{this.state.player.getExperience}/{this.state.player.getExperienceToNextLevel} Experience</p>}\r\n                                {this.state.player.getLevel < 15 && <p>{this.state.player.getExperienceToNextLevel - this.state.player.getExperience} exp to level {this.state.player.getLevel + 1}</p>}\r\n                            </div>\r\n                            <img className=\"frame\" src={\"/images/resourceframe/bar_frame.png\"} alt=\"\" />\r\n                            {this.state.player.getLevel < 15 && <div style={{width: ((this.state.player.getExperience/this.props.settings.requiredExperience[this.state.player.getLevel-1]) * 494) + \"px\"}} className=\"frame_filler_experience\"></div>}\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    settings: state.settings,\r\n    enemies: state.enemies,\r\n    state: state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Arena);\r\n","const equipment = [\r\n    {\r\n        id: 0,\r\n        name: \"Scroll Of Knowledge\",\r\n        description: \"Increases your max resources by [r]%.\",\r\n        icon: \"icons/equipment/scroll_of_knowledge.png\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1.2,\r\n        damageModifier: 1,\r\n        healingModifier: 1,\r\n        cost: 100,\r\n        requiredLevel: 3,\r\n        availableClasses: [3]\r\n    }, {\r\n        id: 1,\r\n        name: \"Robe of Wizardry\",\r\n        description: \"Increases your damage by [d]%, healing by [h]% and health by [hp]%.\",\r\n        icon: \"icons/equipment/robe_of_wizardry.png\",\r\n        healthModifier: 1.15,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.175,\r\n        healingModifier: 1.15,\r\n        cost: 300,\r\n        requiredLevel: 4,\r\n        availableClasses: [1, 3]\r\n    }, {\r\n        id: 2,\r\n        name: \"Hat of Wizardry\",\r\n        description: \"Increases your damage and healing by [d]%.\",\r\n        icon: \"icons/equipment/hat_of_wizardry.png\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.25,\r\n        healingModifier: 1.25,\r\n        cost: 250,\r\n        requiredLevel: 2,\r\n        availableClasses: [1, 3]\r\n    }, {\r\n        id: 3,\r\n        name: \"Azariah's Chain of Vitality\",\r\n        description: \"Increases your health by [hp]%.\",\r\n        icon: \"icons/equipment/azariahs_chain_of_vitality.png\",\r\n        healthModifier: 1.35,\r\n        resourceModifier: 1,\r\n        damageModifier: 1,\r\n        healingModifier: 1,\r\n        cost: 200,\r\n        requiredLevel: 4,\r\n        availableClasses: [0, 1, 2, 3]\r\n    }, {\r\n        id: 4,\r\n        name: \"Bulwark\",\r\n        description: \"Increases your health by [hp]%.\",\r\n        icon: \"icons/equipment/bulwark.png\",\r\n        healthModifier: 1.2,\r\n        resourceModifier: 1,\r\n        damageModifier: 1,\r\n        healingModifier: 1,\r\n        cost: 100,\r\n        requiredLevel: 2,\r\n        availableClasses: [0, 2]\r\n    }, {\r\n        id: 5,\r\n        name: \"Chainmail of Endurance\",\r\n        description: \"Increases your damage by [d]% and health by [hp]%.\",\r\n        icon: \"icons/equipment/chainmail_of_endurance.png\",\r\n        healthModifier: 1.5,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.25,\r\n        healingModifier: 1,\r\n        cost: 400,\r\n        requiredLevel: 6,\r\n        availableClasses: [0, 2]\r\n    }, {\r\n        id: 6,\r\n        name: \"Elven Headguard\",\r\n        description: \"Increases your damage, healing and health by [d]%.\",\r\n        icon: \"icons/equipment/elven_headguard.png\",\r\n        healthModifier: 1.25,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.25,\r\n        healingModifier: 1.25,\r\n        cost: 500,\r\n        requiredLevel: 8,\r\n        availableClasses: [1, 2]\r\n    }, {\r\n        id: 7,\r\n        name: \"Jeweled Chalice\",\r\n        description: \"Increases your damage, healing and health by [d]%.\",\r\n        icon: \"icons/equipment/jeweled_chalice.png\",\r\n        healthModifier: 1.25,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.25,\r\n        healingModifier: 1.25,\r\n        cost: 500,\r\n        requiredLevel: 8,\r\n        availableClasses: [3, 4]\r\n    }, {\r\n        id: 8,\r\n        name: \"Signet of Death\",\r\n        description: \"Increases your damage by [d]%.\",\r\n        icon: \"icons/equipment/signet_of_death.png\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1,\r\n        damageModifier: 1.4,\r\n        healingModifier: 1,\r\n        cost: 700,\r\n        requiredLevel: 10,\r\n        availableClasses: [0, 1, 2, 3]\r\n    }, {\r\n        id: 9,\r\n        name: \"Tribal Pendant\",\r\n        description: \"Increases your healing by [h]%.\",\r\n        icon: \"icons/equipment/tribal_pendant.png\",\r\n        healthModifier: 1,\r\n        resourceModifier: 1,\r\n        damageModifier: 1,\r\n        healingModifier: 1.6,\r\n        cost: 700,\r\n        requiredLevel: 10,\r\n        availableClasses: [0, 1, 2, 3]\r\n    }\r\n];\r\n\r\nexport default equipment;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./store.css\";\r\n\r\nimport { upgradeSpell, purchaseItem } from \"../../actions/actions\";\r\n\r\nimport equipment from \"../../states/equipment\";\r\nimport Equipment from \"../../classes/equipment\";\r\nimport Spell from \"../../classes/spell\";\r\n\r\nclass Store extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            view: \"equipment\",\r\n            equipment: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let equipmentArray;\r\n        equipmentArray = equipment.map(equipment => new Equipment(equipment));\r\n\r\n        this.setState({ equipment: equipmentArray });\r\n    }\r\n\r\n    characterHasItem(itemId) {\r\n        return this.props.character.equipment.find(item => item.id === itemId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"store\">\r\n            <div className=\"sidebar\">\r\n                <h3>Shop {this.state.view === \"spells\" ? \"Spells\" : \"Equipment\"}</h3>\r\n                <div>\r\n                    <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/>\r\n                    <p>{this.props.character.coins}</p>\r\n                </div>\r\n                <button className={this.state.view === \"equipment\" ? \"active equipmentBtn\" : \"equipmentBtn\"} onClick={() => { this.setState({ view: \"equipment\" })}}></button>\r\n                <button className={this.state.view === \"spells\" ? \"active spellsBtn\" : \"spellsBtn\"} onClick={() => { this.setState({ view: \"spells\"})}}></button>\r\n            </div>\r\n            { this.state.view === \"equipment\" && <div className=\"items\">\r\n                {this.state.equipment.sort((a, b) => (a.requiredLevel > b.requiredLevel) ? 1 : ((b.requiredLevel > a.requiredLevel) ? -1 : 0)).map(item => {\r\n                    if(item.availableClasses.includes(this.props.character.class.id)) {\r\n                        return (<div key={item.id} className={this.characterHasItem(item.id) ? \"itemContainer owned\" : \"itemContainer\"}>\r\n                            <div>\r\n                                <div className=\"header\">\r\n                                    <div className=\"spellframe\">\r\n                                        <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                        <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                        <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                        <img className=\"frame_icon\" src={\"/images/\" + item.icon} alt=\"\" />\r\n                                    </div>\r\n                                    <h4>{item.name}</h4>\r\n                                </div>\r\n                                <p className=\"description\">{this.characterHasItem(item.id) ? \"You already own this item.\" : item.description}</p>\r\n                            </div>\r\n                            <div className={this.props.character.level < item.requiredLevel || this.props.character.coins < item.cost ? \"buyItem disabled\" : \"buyItem\"}>\r\n                                <div className=\"itemInfo\">\r\n                                    <p className={this.props.character.level < item.requiredLevel ? \"lowLevel\" : null}>Level {item.requiredLevel}+</p>\r\n                                    <h5 className=\"coinContainer\">Cost: <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/> <span className={this.props.character.coins < item.cost ? \"lowCoins\" : null}>{item.cost}</span></h5>\r\n                                </div>\r\n                                <button className=\"buyBtn\" onClick={() => {\r\n                                    if(!this.characterHasItem(item)) {\r\n                                        this.props.dispatch(purchaseItem(item));\r\n                                }}}></button>\r\n                            </div>\r\n                        </div>)\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                })}\r\n            </div>}\r\n            { this.state.view === \"spells\" && <div className=\"spells\">\r\n                {this.props.character.spells.map((spell, index) => {\r\n                    let storeSpell = new Spell(spell.properties);\r\n\r\n                    if(storeSpell.rank < 3) {\r\n                        storeSpell.rank = (storeSpell.rank + 1);\r\n                    }\r\n\r\n                    return (\r\n                        <div key={storeSpell.id} className={spell.rank === 3 ? \"spellContainer owned\" : \"spellContainer\"}>\r\n                            <div>\r\n                                <div className=\"header\">\r\n                                    <div className=\"spellframe\">\r\n                                        <img className=\"frame\" src={\"/images/spellframe/spellframe.png\"} alt=\"\" />\r\n                                        <img className=\"frame_hover\" src={\"/images/spellframe/spellframe_hover.png\"} alt=\"\" />\r\n                                        <img className=\"frame_clicked\" src={\"/images/spellframe/spellframe_clicked.png\"} alt=\"\" />\r\n                                        <img className=\"frame_icon\" src={\"/images/\" + storeSpell.icon} alt=\"\" />\r\n                                    </div>\r\n                                    <h4>{storeSpell.name}</h4>\r\n                                </div>\r\n                                <p className=\"description\">{spell.rank === 3 ? \"You have already upgraded this spell to the highest rank.\": storeSpell.description}</p>\r\n                            </div>\r\n                            <div className={this.props.character.coins < (100*storeSpell.rank) ? \"buyItem disabled\" : \"buyItem\"}>\r\n                                <div className=\"itemInfo\">\r\n                                    { spell.rank === 3 ? <p>Max Rank</p> : <p>Rank {storeSpell.rank} / 3</p> }\r\n                                    <h5 className=\"coinContainer\">Cost: <img className=\"coin\" src=\"/images/icons/coin.png\" alt=\"\"/> <span className={this.props.character.coins < (100*storeSpell.rank) ? \"lowCoins\" : null}>{100*(storeSpell.rank)}</span></h5>\r\n                                </div>\r\n                                <button className=\"upgradeBtn\" onClick={() => {\r\n                                    if(spell.rank < 3) {\r\n                                        this.props.dispatch(upgradeSpell(index, (100*storeSpell.rank), storeSpell.properties));\r\n                                    }\r\n                                }}></button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    character: state.character,\r\n    equipment: state.equipment,\r\n    spells: state.spells\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Store);\r\n","import React, { Component } from \"react\";\n\nimport Navigation from \"./components/navigation/navigation\";\nimport CharacterCreation from \"./components/characterCreation/characterCreation\";\nimport Credits from \"./components/credits/credits\";\nimport Character from \"./components/character/character\";\nimport Arena from \"./components/arena/arena\";\nimport Store from \"./components/store/store\";\nimport \"./App.css\";\n\nimport { connect } from \"react-redux\";\n\nimport { showCharacterCreation, loadCharacter, setAccountId } from \"./actions/actions\";\nimport Spell from \"./classes/spell\";\nimport Equipment from \"./classes/equipment\";\n\nclass App extends Component {\n    storageAvailable(type) {\n        try {\n            var storage = window[type],\n                x = '__storage_test__';\n            storage.setItem(x, x);\n            storage.removeItem(x);\n            return true;\n        }\n        catch(e) {\n            return e instanceof DOMException && (\n                // everything except Firefox\n                e.code === 22 ||\n                // Firefox\n                e.code === 1014 ||\n                // test name field too, because code might not be present\n                // everything except Firefox\n                e.name === 'QuotaExceededError' ||\n                // Firefox\n                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n                // acknowledge QuotaExceededError only if there's something already stored\n                storage.length !== 0;\n        }\n    }\n\n    // getCachedCharacter() {\n    //     let cachedCharacter = JSON.parse(localStorage.getItem(\"character\"));\n    //     if(cachedCharacter) {\n    //         cachedCharacter.spells = cachedCharacter.spells.map(spell => new Spell(spell));\n    //         cachedCharacter.equipment = cachedCharacter.equipment.map(equipment => new Equipment(equipment));\n    //         this.props.dispatch(loadCharacter(cachedCharacter, true));\n    //     }\n    // }\n\n    componentDidMount() {\n        if(this.storageAvailable('localStorage')) {\n            // this.getCachedCharacter();\n\n            let accountId = localStorage.getItem(\"accountId\");\n            if(!accountId) {\n                this.props.dispatch(setAccountId());\n            }\n            else {\n                this.props.dispatch(setAccountId(accountId));\n            }\n        }\n\n        window.addEventListener(\"keydown\", (event) => {\n            if(event.key === \"a\") {\n                console.log(this.props.state);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"app\">\n                <Navigation />\n                { this.props.showIntroduction && (\n                    <div className=\"introduction\">\n                        <h2>Welcome, adventurer!</h2>\n                        <p>\n                        This is the arena. A web-based fighting game where you can create a\n                        character and use it to fight enemies in one-versus-one combat. Shall\n                        you win, you will be rewarded with experience points as well as\n                        coins, which you can use to purchase upgraded spells and\n                        abilities.\n                        <br />\n                        <br />\n                        Ready to create your character? \n                        </p>\n                        <div>\n                            <button className=\"createBtn\" onClick={() => this.props.dispatch(showCharacterCreation())}></button>\n                        </div>\n                    </div>\n                )}\n                { this.props.showCharacterCreation && <CharacterCreation /> }\n                { this.props.showCredits && <Credits /> }\n                { this.props.showCharacter && <Character /> }\n                { this.props.showArena && <Arena /> }\n                { this.props.showStore && <Store /> }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showCharacterCreation: state.showCharacterCreation,\n    showCredits: state.showCredits,\n    showArena: state.showArena,\n    showStore: state.showStore,\n    showCharacter: state.showCharacter,\n    showIntroduction: state.showIntroduction,\n    character: state.character,\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import Spell from \"../classes/spell\";\r\n// import Equipment from \"../classes/equipment\";\r\nconst uuid = require('uuid/v4');\r\n\r\n// function saveToLocalStorage(character) {\r\n//     let local = {\r\n//         class: character.class,\r\n//         name: character.name,\r\n//         level: character.level,\r\n//         coins: character.coins,\r\n//         experience: character.experience,\r\n//         uid: character.uid\r\n//     }\r\n\r\n//     local.spells = character.spells.map(spell => spell.properties);\r\n//     local.equipment = character.equipment.map(equipment => equipment.properties);\r\n//     localStorage.setItem(\"character\", JSON.stringify(local));\r\n// }\r\n\r\n// function removeFromLocalStorage() {\r\n//     localStorage.removeItem(\"character\");\r\n// }\r\n\r\nlet rootReducer = (state, action) => {\r\n    let newState = {...state };\r\n    let newCharacter = {...newState.character};\r\n\r\n    switch(action.type) {\r\n        case \"SHOW_CHARACTER_CREATION\":\r\n            newState.showCharacterCreation = true;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n\r\n            newState.refresh = !newState.refresh;\r\n\r\n            return newState;\r\n        case \"SHOW_CREDITS\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = true;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_ARENA\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = true;\r\n            newState.showStore = false;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_STORE\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = true;\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SHOW_CHARACTER\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = true;\r\n            newState.showIntroduction = false;\r\n            \r\n            return newState;\r\n        case \"SET_CLASS\":\r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = true;\r\n            newState.showIntroduction = false;\r\n\r\n            newCharacter.class = action.selectedClass;\r\n            newCharacter.spells = action.spells;\r\n            newCharacter.equipment = [];\r\n            newCharacter.name = action.name;\r\n            newCharacter.level = 1;\r\n            newCharacter.coins = 0;\r\n            newCharacter.experience = 0;\r\n            newCharacter.uid = uuid();\r\n\r\n            // saveToLocalStorage(newCharacter);\r\n\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"GIVE_LOOT\":\r\n            newCharacter.experience += action.experience;\r\n            newCharacter.coins += action.coins;\r\n\r\n            if(newCharacter.level === 15) {\r\n                newCharacter.experience = 0;\r\n            }\r\n            else if(newCharacter.experience > newState.settings.requiredExperience[newState.character.level-1]) {\r\n                newCharacter.level += 1;\r\n                if(newCharacter.level === 15) {\r\n                    newCharacter.experience = 0;\r\n                }\r\n                newCharacter.experience -= newState.settings.requiredExperience[newState.character.level-1];\r\n            }\r\n\r\n            // saveToLocalStorage(newCharacter);\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"UPGRADE_SPELL\":\r\n            if(newCharacter.coins >= action.cost) {\r\n                newCharacter.spells[action.spellIndex] = new Spell(action.newSpell);\r\n                newCharacter.coins -= action.cost;\r\n            }\r\n            \r\n            // saveToLocalStorage(newCharacter);\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"PURCHASE_ITEM\":\r\n            if(newCharacter.coins >= action.item.cost) {\r\n                newCharacter.equipment.push(action.item);\r\n                newCharacter.coins -= action.item.cost;\r\n            }\r\n\r\n            // saveToLocalStorage(newCharacter);\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"LOAD_CHARACTER\":\r\n            // if(action.cached !== true) {\r\n            //     saveToLocalStorage(action.character);\r\n            // }\r\n            \r\n            newState.showCharacterCreation = false;\r\n            newState.showCredits = false;\r\n            newState.showArena = false;\r\n            newState.showStore = false;\r\n            newState.showCharacter = true;\r\n            newState.showIntroduction = false;\r\n\r\n            newCharacter = action.character;\r\n            newState.character = newCharacter;\r\n            return newState;\r\n        case \"RESET_CHARACTER\":\r\n            newState.character = {\r\n                class: null,\r\n                coins: 0,\r\n                level: 1,\r\n                experience: 0,\r\n                spells: [],\r\n                equipment: [],\r\n                name: \"\",\r\n                uid: null\r\n            }\r\n\r\n            // removeFromLocalStorage();\r\n\r\n            newState.showCharacter = false;\r\n            newState.showIntroduction = true;\r\n\r\n            return newState;\r\n        case \"SET_ACCOUNT_ID\":\r\n            if(action.accountId) {\r\n                newState.accountId = action.accountId;\r\n            }\r\n            else {\r\n                newState.accountId = uuid();\r\n                localStorage.setItem(\"accountId\", newState.accountId);\r\n            }\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","const initialState = {\r\n    showIntroduction: true,\r\n    showCharacterCreation: false,\r\n    showCredits: false,\r\n    showStore: false,\r\n    showArena: false,\r\n    showCharacter: false,\r\n    settings: {\r\n        baseHealthPerLevel: [100, 120, 200, 250, 300, 400, 475, 550, 700, 900, 1200, 1350, 1500, 1650, 1900],\r\n        baseResourcesPerLevel: [200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330, 350],\r\n        requiredExperience: [100, 200, 400, 700, 1000, 1400, 1900, 2500, 2900, 3700, 4600, 5500, 7250, 9000]\r\n    },\r\n    character: {\r\n        class: null,\r\n        coins: 0,\r\n        level: 1,\r\n        experience: 0,\r\n        spells: [],\r\n        equipment: [],\r\n        name: \"\",\r\n        uid: null\r\n    },\r\n    accountId: null\r\n}\r\n\r\nexport default initialState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from \"./reducers/reducers.js\";\n\nimport initialState from \"./states/initialState.js\";\n\nconst store = createStore(rootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render((<Provider store={store}><App /></Provider>), document.getElementById('root'));"],"sourceRoot":""}